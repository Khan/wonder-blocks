import{M as s}from"./index-35e12253.js";import{a as t,j as n,F as p}from"./jsx-runtime-309e447d.js";import{u as i}from"./index-506666d7.js";import"./iframe-97aa1d91.js";import"../sb-preview/runtime.js";import"./chunk-6P7RB4HF-938b085e.js";import"./index-d475d2ea.js";import"./index-9f32f44c.js";import"./_commonjsHelpers-de833af9.js";import"./index-9c2d1831.js";import"./inheritsLoose-9eefaa95.js";import"./assertThisInitialized-081f9914.js";import"./index-4733a090.js";import"./_baseIsEqual-976d9d82.js";import"./uniq-944679ca.js";import"./index-356e4a49.js";function a(r){const e=Object.assign({h1:"h1",pre:"pre",code:"code",p:"p",a:"a"},i(),r.components);return n(p,{children:[t(s,{title:"Data / Types / GqlOperationType",parameters:{chromatic:{disableSnapshot:!0}}}),`
`,t(e.h1,{id:"gqloperationtype",children:"GqlOperationType"}),`
`,t(e.pre,{children:t(e.code,{className:"language-ts",children:`type GqlOperationType = "mutation" | "query";
`})}),`
`,t(e.p,{children:"Unlike some GraphQL clients, the Wonder Blocks Data GraphQL support avoids requiring the full GraphQL document node at runtime. This allows the client to be lighter weight and introduces the option for calling code to perform some GraphQL request optimizations at build time, such as formatting the document node as a string and therefore not requiring additional dependencies at runtime."}),`
`,t(e.p,{children:"In order to allow consumers of our GraphQL support to include some validation of the GraphQL document node at runtime (such as ensuring that mutations are not performed in unsupported scenarios), we the type of the operation is included in the operation definition."}),`
`,t(e.p,{children:"This type represents the valid values for that field."}),`
`,n(e.p,{children:["See the section on ",t(e.a,{href:"/docs/data-graphql--page",children:"GraphQL"})," for more information."]})]})}function m(r={}){const{wrapper:e}=Object.assign({},i(),r.components);return e?t(e,{...r,children:t(a,{...r})}):a(r)}const c=()=>{throw new Error("Docs-only story")};c.parameters={docsOnly:!0};const o={title:"Data / Types / GqlOperationType",parameters:{chromatic:{disableSnapshot:!0}},tags:["stories-mdx"],includeStories:["__page"]};o.parameters=o.parameters||{};o.parameters.docs={...o.parameters.docs||{},page:m};const Q=["__page"];export{Q as __namedExportsOrder,c as __page,o as default};
//# sourceMappingURL=types.gql-operation-type.stories-0a042c52.js.map
