import{a as b}from"./jsx-runtime-309e447d.js";import{r as M,a as Ze}from"./index-9f32f44c.js";import{a as Qe,c as Ee}from"./_commonjsHelpers-de833af9.js";var H={exports:{}},C={},K={exports:{}},G={exports:{}},Y={exports:{}};(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t;function t(a){return a.charAt(0).toUpperCase()+a.slice(1)}n.exports=e.default})(Y,Y.exports);var De=Y.exports;(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=i;var t=De,a=r(t);function r(l){return l&&l.__esModule?l:{default:l}}function i(l,s,o){if(l.hasOwnProperty(s))for(var u=l[s],d=0,p=u.length;d<p;++d)o[u[d]+(0,a.default)(s)]=o[s]}n.exports=e.default})(G,G.exports);var et=G.exports,J={exports:{}};(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t;function t(a,r,i,l,s){for(var o=0,u=a.length;o<u;++o){var d=a[o](r,i,l,s);if(d)return d}}n.exports=e.default})(J,J.exports);var tt=J.exports,X={exports:{}};(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=a;function t(r,i){r.indexOf(i)===-1&&r.push(i)}function a(r,i){if(Array.isArray(i))for(var l=0,s=i.length;l<s;++l)t(r,i[l]);else t(r,i)}n.exports=e.default})(X,X.exports);var nt=X.exports,Z={exports:{}};(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t;function t(a){return a instanceof Object&&!Array.isArray(a)}n.exports=e.default})(Z,Z.exports);var at=Z.exports;(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=p;var t=et,a=d(t),r=tt,i=d(r),l=nt,s=d(l),o=at,u=d(o);function d(h){return h&&h.__esModule?h:{default:h}}function p(h){var c=h.prefixMap,v=h.plugins;function m(f){for(var y in f){var g=f[y];if((0,u.default)(g))f[y]=m(g);else if(Array.isArray(g)){for(var w=[],x=0,O=g.length;x<O;++x){var F=(0,i.default)(v,y,g[x],f,c);(0,s.default)(w,F||g[x])}w.length>0&&(f[y]=w)}else{var D=(0,i.default)(v,y,g,f,c);D&&(f[y]=D),(0,a.default)(c,y,f)}}return f}return m}n.exports=e.default})(K,K.exports);var rt=K.exports,Q={exports:{}},ee={exports:{}};(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=a;var t=/-webkit-|-moz-|-ms-/;function a(r){return typeof r=="string"&&t.test(r)}n.exports=e.default})(ee,ee.exports);var T=ee.exports;(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=l;var t=T,a=r(t);function r(s){return s&&s.__esModule?s:{default:s}}var i=["-webkit-","-moz-",""];function l(s,o){if(typeof o=="string"&&!(0,a.default)(o)&&o.indexOf("calc(")>-1)return i.map(function(u){return o.replace(/calc\(/g,u+"calc(")})}n.exports=e.default})(Q,Q.exports);var it=Q.exports,te={exports:{}};(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=l;var t=T,a=r(t);function r(s){return s&&s.__esModule?s:{default:s}}var i=["-webkit-",""];function l(s,o){if(typeof o=="string"&&!(0,a.default)(o)&&o.indexOf("cross-fade(")>-1)return i.map(function(u){return o.replace(/cross-fade\(/g,u+"cross-fade(")})}n.exports=e.default})(te,te.exports);var lt=te.exports,ne={exports:{}};(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=r;var t=["-webkit-","-moz-",""],a={"zoom-in":!0,"zoom-out":!0,grab:!0,grabbing:!0};function r(i,l){if(i==="cursor"&&a.hasOwnProperty(l))return t.map(function(s){return s+l})}n.exports=e.default})(ne,ne.exports);var ot=ne.exports,ae={exports:{}};(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=l;var t=T,a=r(t);function r(s){return s&&s.__esModule?s:{default:s}}var i=["-webkit-",""];function l(s,o){if(typeof o=="string"&&!(0,a.default)(o)&&o.indexOf("filter(")>-1)return i.map(function(u){return o.replace(/filter\(/g,u+"filter(")})}n.exports=e.default})(ae,ae.exports);var st=ae.exports,re={exports:{}};(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=a;var t={flex:["-webkit-box","-moz-box","-ms-flexbox","-webkit-flex","flex"],"inline-flex":["-webkit-inline-box","-moz-inline-box","-ms-inline-flexbox","-webkit-inline-flex","inline-flex"]};function a(r,i){if(r==="display"&&t.hasOwnProperty(i))return t[i]}n.exports=e.default})(re,re.exports);var ut=re.exports,ie={exports:{}};(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=r;var t={"space-around":"distribute","space-between":"justify","flex-start":"start","flex-end":"end"},a={alignContent:"msFlexLinePack",alignSelf:"msFlexItemAlign",alignItems:"msFlexAlign",justifyContent:"msFlexPack",order:"msFlexOrder",flexGrow:"msFlexPositive",flexShrink:"msFlexNegative",flexBasis:"msFlexPreferredSize"};function r(i,l,s){a.hasOwnProperty(i)&&(s[a[i]]=t[l]||l)}n.exports=e.default})(ie,ie.exports);var dt=ie.exports,le={exports:{}};(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=r;var t={"space-around":"justify","space-between":"justify","flex-start":"start","flex-end":"end","wrap-reverse":"multiple",wrap:"multiple"},a={alignItems:"WebkitBoxAlign",justifyContent:"WebkitBoxPack",flexWrap:"WebkitBoxLines"};function r(i,l,s){i==="flexDirection"&&typeof l=="string"&&(l.indexOf("column")>-1?s.WebkitBoxOrient="vertical":s.WebkitBoxOrient="horizontal",l.indexOf("reverse")>-1?s.WebkitBoxDirection="reverse":s.WebkitBoxDirection="normal"),a.hasOwnProperty(i)&&(s[a[i]]=t[l]||l)}n.exports=e.default})(le,le.exports);var ct=le.exports,oe={exports:{}};(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=s;var t=T,a=r(t);function r(o){return o&&o.__esModule?o:{default:o}}var i=["-webkit-","-moz-",""],l=/linear-gradient|radial-gradient|repeating-linear-gradient|repeating-radial-gradient/;function s(o,u){if(typeof u=="string"&&!(0,a.default)(u)&&l.test(u))return i.map(function(d){return d+u})}n.exports=e.default})(oe,oe.exports);var ft=oe.exports,se={exports:{}};(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=l;var t=T,a=r(t);function r(s){return s&&s.__esModule?s:{default:s}}var i=["-webkit-",""];function l(s,o){if(typeof o=="string"&&!(0,a.default)(o)&&o.indexOf("image-set(")>-1)return i.map(function(u){return o.replace(/image-set\(/g,u+"image-set(")})}n.exports=e.default})(se,se.exports);var mt=se.exports,ue={exports:{}};(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=t;function t(a,r){if(a==="position"&&r==="sticky")return["-webkit-sticky","sticky"]}n.exports=e.default})(ue,ue.exports);var pt=ue.exports,de={exports:{}};(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=i;var t=["-webkit-","-moz-",""],a={maxHeight:!0,maxWidth:!0,width:!0,height:!0,columnWidth:!0,minWidth:!0,minHeight:!0},r={"min-content":!0,"max-content":!0,"fill-available":!0,"fit-content":!0,"contain-floats":!0};function i(l,s){if(a.hasOwnProperty(l)&&r.hasOwnProperty(s))return t.map(function(o){return o+s})}n.exports=e.default})(de,de.exports);var ht=de.exports,ce={exports:{}},fe={exports:{}},vt=/[A-Z]/g,yt=/^ms-/,$={};function gt(n){return"-"+n.toLowerCase()}function bt(n){if($.hasOwnProperty(n))return $[n];var e=n.replace(vt,gt);return $[n]=yt.test(e)?"-"+e:e}const wt=Object.freeze(Object.defineProperty({__proto__:null,default:bt},Symbol.toStringTag,{value:"Module"})),xt=Qe(wt);(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=i;var t=xt,a=r(t);function r(l){return l&&l.__esModule?l:{default:l}}function i(l){return(0,a.default)(l)}n.exports=e.default})(fe,fe.exports);var kt=fe.exports;(function(n,e){Object.defineProperty(e,"__esModule",{value:!0}),e.default=h;var t=kt,a=o(t),r=T,i=o(r),l=De,s=o(l);function o(c){return c&&c.__esModule?c:{default:c}}var u={transition:!0,transitionProperty:!0,WebkitTransition:!0,WebkitTransitionProperty:!0,MozTransition:!0,MozTransitionProperty:!0},d={Webkit:"-webkit-",Moz:"-moz-",ms:"-ms-"};function p(c,v){if((0,i.default)(c))return c;for(var m=c.split(/,(?![^()]*(?:\([^()]*\))?\))/g),f=0,y=m.length;f<y;++f){var g=m[f],w=[g];for(var x in v){var O=(0,a.default)(x);if(g.indexOf(O)>-1&&O!=="order")for(var F=v[x],D=0,Xe=F.length;D<Xe;++D)w.unshift(g.replace(O,d[F[D]]+O))}m[f]=w.join(",")}return m.join(",")}function h(c,v,m,f){if(typeof v=="string"&&u.hasOwnProperty(c)){var y=p(v,f),g=y.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function(x){return!/-moz-|-ms-/.test(x)}).join(",");if(c.indexOf("Webkit")>-1)return g;var w=y.split(/,(?![^()]*(?:\([^()]*\))?\))/g).filter(function(x){return!/-webkit-|-ms-/.test(x)}).join(",");return c.indexOf("Moz")>-1?w:(m["Webkit"+(0,s.default)(c)]=g,m["Moz"+(0,s.default)(c)]=w,y)}}n.exports=e.default})(ce,ce.exports);var Et=ce.exports,qt=it,St=lt,_t=ot,Vt=st,It=ut,Mt=dt,Ot=ct,Dt=ft,Wt=mt,Pt=pt,Rt=ht,Ct=Et,Tt={plugins:[qt,St,_t,Vt,It,Mt,Ot,Dt,Wt,Pt,Rt,Ct],prefixMap:{transform:["Webkit","ms"],transformOrigin:["Webkit","ms"],transformOriginX:["Webkit","ms"],transformOriginY:["Webkit","ms"],backfaceVisibility:["Webkit"],perspective:["Webkit"],perspectiveOrigin:["Webkit"],transformStyle:["Webkit"],transformOriginZ:["Webkit"],animation:["Webkit"],animationDelay:["Webkit"],animationDirection:["Webkit"],animationFillMode:["Webkit"],animationDuration:["Webkit"],animationIterationCount:["Webkit"],animationName:["Webkit"],animationPlayState:["Webkit"],animationTimingFunction:["Webkit"],appearance:["Webkit","Moz"],userSelect:["Webkit","Moz","ms"],fontKerning:["Webkit"],textEmphasisPosition:["Webkit"],textEmphasis:["Webkit"],textEmphasisStyle:["Webkit"],textEmphasisColor:["Webkit"],boxDecorationBreak:["Webkit"],clipPath:["Webkit"],maskImage:["Webkit"],maskMode:["Webkit"],maskRepeat:["Webkit"],maskPosition:["Webkit"],maskClip:["Webkit"],maskOrigin:["Webkit"],maskSize:["Webkit"],maskComposite:["Webkit"],mask:["Webkit"],maskBorderSource:["Webkit"],maskBorderMode:["Webkit"],maskBorderSlice:["Webkit"],maskBorderWidth:["Webkit"],maskBorderOutset:["Webkit"],maskBorderRepeat:["Webkit"],maskBorder:["Webkit"],maskType:["Webkit"],textDecorationStyle:["Webkit","Moz"],textDecorationSkip:["Webkit","Moz"],textDecorationLine:["Webkit","Moz"],textDecorationColor:["Webkit","Moz"],filter:["Webkit"],fontFeatureSettings:["Webkit","Moz"],breakAfter:["Webkit","Moz","ms"],breakBefore:["Webkit","Moz","ms"],breakInside:["Webkit","Moz","ms"],columnCount:["Webkit","Moz"],columnFill:["Webkit","Moz"],columnGap:["Webkit","Moz"],columnRule:["Webkit","Moz"],columnRuleColor:["Webkit","Moz"],columnRuleStyle:["Webkit","Moz"],columnRuleWidth:["Webkit","Moz"],columns:["Webkit","Moz"],columnSpan:["Webkit","Moz"],columnWidth:["Webkit","Moz"],flex:["Webkit","ms"],flexBasis:["Webkit"],flexDirection:["Webkit","ms"],flexGrow:["Webkit"],flexFlow:["Webkit","ms"],flexShrink:["Webkit"],flexWrap:["Webkit","ms"],alignContent:["Webkit"],alignItems:["Webkit"],alignSelf:["Webkit"],justifyContent:["Webkit"],order:["Webkit"],transitionDelay:["Webkit"],transitionDuration:["Webkit"],transitionProperty:["Webkit"],transitionTimingFunction:["Webkit"],backdropFilter:["Webkit"],scrollSnapType:["Webkit","ms"],scrollSnapPointsX:["Webkit","ms"],scrollSnapPointsY:["Webkit","ms"],scrollSnapDestination:["Webkit","ms"],scrollSnapCoordinate:["Webkit","ms"],shapeImageThreshold:["Webkit"],shapeImageMargin:["Webkit"],shapeImageOutside:["Webkit"],hyphens:["Webkit","Moz","ms"],flowInto:["Webkit","ms"],flowFrom:["Webkit","ms"],regionFragment:["Webkit","ms"],boxSizing:["Moz"],textAlignLast:["Moz"],tabSize:["Moz"],wrapFlow:["ms"],wrapThrough:["ms"],wrapMargin:["ms"],touchAction:["ms"],gridTemplateColumns:["ms"],gridTemplateRows:["ms"],gridTemplateAreas:["ms"],gridTemplate:["ms"],gridAutoColumns:["ms"],gridAutoRows:["ms"],gridAutoFlow:["ms"],grid:["ms"],gridRowStart:["ms"],gridColumnStart:["ms"],gridRowEnd:["ms"],gridRow:["ms"],gridColumn:["ms"],gridColumnEnd:["ms"],gridColumnGap:["ms"],gridRowGap:["ms"],gridArea:["ms"],gridGap:["ms"],textSizeAdjust:["Webkit","ms"],borderImage:["Webkit"],borderImageOutset:["Webkit"],borderImageRepeat:["Webkit"],borderImageSlice:["Webkit"],borderImageSource:["Webkit"],borderImageWidth:["Webkit"]}},me={exports:{}};(function(n,e){Object.defineProperty(e,"__esModule",{value:!0});var t=function(){function l(s,o){for(var u=0;u<o.length;u++){var d=o[u];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(s,d.key,d)}}return function(s,o,u){return o&&l(s.prototype,o),u&&l(s,u),s}}();function a(l,s){if(!(l instanceof s))throw new TypeError("Cannot call a class as a function")}var r=typeof Map<"u",i=function(){function l(){a(this,l),this.elements={},this.keyOrder=[]}return t(l,[{key:"forEach",value:function(o){for(var u=0;u<this.keyOrder.length;u++)o(this.elements[this.keyOrder[u]],this.keyOrder[u])}},{key:"set",value:function(o,u,d){var p=this;if(!this.elements.hasOwnProperty(o))this.keyOrder.push(o);else if(d){var h=this.keyOrder.indexOf(o);this.keyOrder.splice(h,1),this.keyOrder.push(o)}if(u==null){this.elements[o]=u;return}if(r&&u instanceof Map||u instanceof l){var c=function(){var y=p.elements.hasOwnProperty(o)?p.elements[o]:new l;return u.forEach(function(g,w){y.set(w,g,d)}),p.elements[o]=y,{v:void 0}}();if(typeof c=="object")return c.v}if(!Array.isArray(u)&&typeof u=="object"){for(var v=this.elements.hasOwnProperty(o)?this.elements[o]:new l,m=Object.keys(u),f=0;f<m.length;f+=1)v.set(m[f],u[m[f]],d);this.elements[o]=v;return}this.elements[o]=u}},{key:"get",value:function(o){return this.elements[o]}},{key:"has",value:function(o){return this.elements.hasOwnProperty(o)}},{key:"addStyleType",value:function(o){var u=this;if(r&&o instanceof Map||o instanceof l)o.forEach(function(h,c){u.set(c,h,!0)});else for(var d=Object.keys(o),p=0;p<d.length;p++)this.set(d[p],o[d[p]],!0)}}]),l}();e.default=i,n.exports=e.default})(me,me.exports);var We=me.exports,_={};function Nt(n){for(var e=5381,t=n.length;t;)e=e*33^n.charCodeAt(--t);return e>>>0}var At=Nt;Object.defineProperty(_,"__esModule",{value:!0});var zt=function(){function n(e,t){var a=[],r=!0,i=!1,l=void 0;try{for(var s=e[Symbol.iterator](),o;!(r=(o=s.next()).done)&&(a.push(o.value),!(t&&a.length===t));r=!0);}catch(u){i=!0,l=u}finally{try{!r&&s.return&&s.return()}finally{if(i)throw l}}return a}return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return n(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();function Ft(n){return n&&n.__esModule?n:{default:n}}var jt=At,Bt=Ft(jt),Ut=function(e,t){for(var a=Object.keys(e),r={},i=0;i<a.length;i+=1){var l=t([a[i],e[a[i]]]),s=zt(l,2),o=s[0],u=s[1];r[o]=u}return r};_.mapObj=Ut;var Lt=/([A-Z])/g,$t=function(e){return"-"+e.toLowerCase()},Ht=function(e){var t=e.replace(Lt,$t);return t[0]==="m"&&t[1]==="s"&&t[2]==="-"?"-"+t:t};_.kebabifyStyleName=Ht;var j={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridColumn:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0};function Kt(n,e){return n+e.charAt(0).toUpperCase()+e.substring(1)}var Gt=["Webkit","ms","Moz","O"];Object.keys(j).forEach(function(n){Gt.forEach(function(e){j[Kt(e,n)]=j[n]})});var Pe=function(e,t){return typeof t=="number"?j[e]?""+t:t+"px":""+t};_.stringifyValue=Pe;var Yt=function(e,t){return Xt(Pe(e,t))};_.stringifyAndImportantifyValue=Yt;var Re=function(e){return(0,Bt.default)(e).toString(36)};_.hashString=Re;var Jt=function(e){return Re(JSON.stringify(e))};_.hashObject=Jt;var Xt=function(e){return e[e.length-10]==="!"&&e.slice(-11)===" !important"?e:e+" !important"};Object.defineProperty(C,"__esModule",{value:!0});var Zt=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n};function we(n){return n&&n.__esModule?n:{default:n}}var Qt=rt,en=we(Qt),tn=Tt,nn=we(tn),an=We,qe=we(an),pe=_,rn=(0,en.default)(nn.default),ln=[function(e,t,a){return e[0]!==":"?null:a(t+e)},function(e,t,a){if(e[0]!=="@")return null;var r=a(t);return e+"{"+r+"}"}];C.defaultSelectorHandlers=ln;var on=function n(e,t,a,r,i){for(var l=new qe.default,s=0;s<t.length;s++)l.addStyleType(t[s]);var o=new qe.default,u="";return l.forEach(function(d,p){var h=a.some(function(c){var v=c(p,e,function(m){return n(m,[d],a,r,i)});if(v!=null)return u+=v,!0});h||o.set(p,d,!0)}),Ce(e,o,r,i,a)+u};C.generateCSS=on;var sn=function(e,t,a){if(t)for(var r=Object.keys(t),i=0;i<r.length;i++){var l=r[i];e.has(l)&&e.set(l,t[l](e.get(l),a),!1)}},Se=function(e,t,a){return(0,pe.kebabifyStyleName)(e)+":"+a(e,t)+";"},Ce=function(e,t,a,r,i){sn(t,a,i);var l=Zt({},t.elements),s=rn(t.elements),o=Object.keys(s);if(o.length!==t.keyOrder.length){for(var u=0;u<o.length;u++)if(!l.hasOwnProperty(o[u])){var d=void 0;if(o[u][0]==="W"?d=o[u][6].toLowerCase()+o[u].slice(7):o[u][1]==="o"?d=o[u][3].toLowerCase()+o[u].slice(4):d=o[u][2].toLowerCase()+o[u].slice(3),d&&l.hasOwnProperty(d)){var p=t.keyOrder.indexOf(d);t.keyOrder.splice(p,0,o[u])}else t.keyOrder.unshift(o[u])}}for(var h=r===!1?pe.stringifyValue:pe.stringifyAndImportantifyValue,c=[],u=0;u<t.keyOrder.length;u++){var v=t.keyOrder[u],m=s[v];if(Array.isArray(m))for(var f=0;f<m.length;f++)c.push(Se(v,m[f],h));else c.push(Se(v,m,h))}return c.length?e+"{"+c.join("")+"}":""};C.generateCSSRuleset=Ce;var V={},un=xe;function xe(n){q.length||B(),q[q.length]=n}var q=[],B,E=0,dn=1024;function _e(){for(;E<q.length;){var n=E;if(E=E+1,q[n].call(),E>dn){for(var e=0,t=q.length-E;e<t;e++)q[e]=q[e+E];q.length-=E,E=0}}q.length=0,E=0}var Ve=typeof Ee<"u"?Ee:self,Te=Ve.MutationObserver||Ve.WebKitMutationObserver;typeof Te=="function"?B=cn(_e):B=Ne(_e);xe.requestFlush=B;function cn(n){var e=1,t=new Te(n),a=document.createTextNode("");return t.observe(a,{characterData:!0}),function(){e=-e,a.data=e}}function Ne(n){return function(){var t=setTimeout(r,0),a=setInterval(r,50);function r(){clearTimeout(t),clearInterval(a),n()}}}xe.makeRequestCallFromTimer=Ne;var Ae=un,U=[],he=[],fn=Ae.makeRequestCallFromTimer(mn);function mn(){if(he.length)throw he.shift()}var pn=ve;function ve(n){var e;U.length?e=U.pop():e=new ze,e.task=n,Ae(e)}function ze(){this.task=null}ze.prototype.call=function(){try{this.task.call()}catch(n){ve.onerror?ve.onerror(n):(he.push(n),fn())}finally{this.task=null,U[U.length]=this}};Object.defineProperty(V,"__esModule",{value:!0});function Fe(n){return n&&n.__esModule?n:{default:n}}var hn=pn,vn=Fe(hn),yn=We,gn=Fe(yn),ye=C,je=_,k=null,bn=function(e){if(k==null&&(k=document.querySelector("style[data-aphrodite]"),k==null)){var t=document.head||document.getElementsByTagName("head")[0];k=document.createElement("style"),k.type="text/css",k.setAttribute("data-aphrodite",""),t.appendChild(k)}k.styleSheet?k.styleSheet.cssText+=e:k.appendChild(document.createTextNode(e))},ge={fontFamily:function n(e){return Array.isArray(e)?e.map(n).join(","):typeof e=="object"?(ke(e.src,"@font-face",[e],!1),'"'+e.fontFamily+'"'):e},animationName:function n(e,t){if(Array.isArray(e))return e.map(function(i){return n(i,t)}).join(",");if(typeof e=="object"){var a="keyframe_"+(0,je.hashObject)(e),r="@keyframes "+a+"{";return e instanceof gn.default?e.forEach(function(i,l){r+=(0,ye.generateCSS)(l,[i],t,ge,!1)}):Object.keys(e).forEach(function(i){r+=(0,ye.generateCSS)(i,[e[i]],t,ge,!1)}),r+="}",Be(a,r),a}else return e}},P={},L="",R=!1,Be=function(e,t){if(!P[e]){if(!R){if(typeof document>"u")throw new Error("Cannot automatically buffer without a document");R=!0,(0,vn.default)(Le)}L+=t,P[e]=!0}},ke=function(e,t,a,r){var i=arguments.length<=4||arguments[4]===void 0?[]:arguments[4];if(!P[e]){var l=(0,ye.generateCSS)(t,a,i,ge,r);Be(e,l)}};V.injectStyleOnce=ke;var wn=function(){L="",P={},R=!1,k=null};V.reset=wn;var xn=function(){if(R)throw new Error("Cannot buffer while already buffering");R=!0};V.startBuffering=xn;var Ue=function(){R=!1;var e=L;return L="",e};V.flushToString=Ue;var Le=function(){var e=Ue();e.length>0&&bn(e)};V.flushToStyleTag=Le;var kn=function(){return Object.keys(P)};V.getRenderedClassNames=kn;var En=function(e){e.forEach(function(t){P[t]=!0})};V.addRenderedClassNames=En;var qn=function n(e,t){for(var a=0;a<e.length;a+=1)e[a]&&(Array.isArray(e[a])?n(e[a],t):(t.classNameBits.push(e[a]._name),t.definitionBits.push(e[a]._definition)))},Sn=function(e){return(e.reduce(function(t,a){return t+(a?a._len:0)},0)%36).toString(36)},_n=function(e,t,a){var r={classNameBits:[],definitionBits:[]};if(qn(t,r),r.classNameBits.length===0)return"";var i=void 0;return i=r.classNameBits.length===1?"_"+r.classNameBits[0]:"_"+(0,je.hashString)(r.classNameBits.join())+Sn(t),ke(i,"."+i,r.definitionBits,e,a),i};V.injectAndGetClassName=_n;var Vn=function(){function n(e,t){var a=[],r=!0,i=!1,l=void 0;try{for(var s=e[Symbol.iterator](),o;!(r=(o=s.next()).done)&&(a.push(o.value),!(t&&a.length===t));r=!0);}catch(u){i=!0,l=u}finally{try{!r&&s.return&&s.return()}finally{if(i)throw l}}return a}return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return n(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),In=Object.assign||function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(n[a]=t[a])}return n},Ie=_,I=V,Mn={create:function(e){return(0,Ie.mapObj)(e,function(t){var a=Vn(t,2),r=a[0],i=a[1],l=JSON.stringify(i);return[r,{_len:l.length,_name:(0,Ie.hashString)(l),_definition:i}]})},rehydrate:function(){var e=arguments.length<=0||arguments[0]===void 0?[]:arguments[0];(0,I.addRenderedClassNames)(e)}},On={renderStatic:function(e){(0,I.reset)(),(0,I.startBuffering)();var t=e(),a=(0,I.flushToString)();return{html:t,css:{content:a,renderedClassNames:(0,I.getRenderedClassNames)()}}}},Dn={suppressStyleInjection:function(){(0,I.reset)(),(0,I.startBuffering)()},clearBufferAndResumeStyleInjection:function(){(0,I.reset)()}},Wn=function n(e,t){return{StyleSheet:In({},Mn,{extend:function(r){var i=r.map(function(l){return l.selectorHandler}).filter(function(l){return l});return n(e,t.concat(i))}}),StyleSheetServer:On,StyleSheetTestUtils:Dn,css:function(){for(var r=arguments.length,i=Array(r),l=0;l<r;l++)i[l]=arguments[l];return(0,I.injectAndGetClassName)(e,i,t)}}},Pn=Wn;(function(n,e){Object.defineProperty(e,"__esModule",{value:!0});function t(s){return s&&s.__esModule?s:{default:s}}var a=C,r=Pn,i=t(r),l=!0;e.default=(0,i.default)(l,a.defaultSelectorHandlers),n.exports=e.default})(H,H.exports);var N=H.exports;function $e(n){const e=[];if(n)if(Array.isArray(n))for(const t of n)e.push(...$e(t));else e.push(n);else return e;return e}function He(n){const e=[],t=[];if(!n)return{style:{},className:""};const a=typeof global<"u"&&global.SNAPSHOT_INLINE_APHRODITE;$e(n).forEach(i=>{const l=i._definition;if(l!=null)if(a){const s={};for(const[o,u]of Object.entries(l))s[o.replace(/-[a-z]/g,d=>d[1].toUpperCase())]=u;t.push(s)}else e.push(i);else t.push(i)});const r=Object.assign({},...t);if(t.length>0&&!a){const i=N.StyleSheet.create({inlineStyles:r});e.push(i.inlineStyles)}return{style:a?r:{},className:N.css(...e)}}const Rn=/^h[1-6]$/,Me=N.StyleSheet.create({text:{WebkitFontSmoothing:"antialiased",MozOsxFontSmoothing:"grayscale"},header:{marginTop:0,marginBottom:0}}),Zn=M.forwardRef(({children:n,style:e,tag:t="span",testId:a,...r},i)=>{const l=Rn.test(t),s=He([Me.text,l&&Me.header,e]);return b(t,{...r,style:s.style,className:s.className,"data-test-id":a,ref:i,children:n})});try{text.displayName="text",text.__docgenInfo={description:"Text is a building block for constructing other components. `Text` roughly\nmaps to `span`. You can override which tag is used to render the component\n(for semantic purposes) by specifying the `tag` prop.\n\nThese components can take styles (via the `style` prop) in a variety of\nmanners:\n\n- An inline style object\n- An `aphrodite` StyleSheet style\n- An array combining the above",displayName:"text",props:{children:{defaultValue:null,description:"Text to appear on the button.",name:"children",required:!1,type:{name:"ReactNode"}},style:{defaultValue:null,description:"Optional custom styles.",name:"style",required:!1,type:{name:"any"}},testId:{defaultValue:null,description:"Test ID used for e2e testing.",name:"testId",required:!1,type:{name:"string"}},lang:{defaultValue:null,description:`Optional attribute to indicate to the Screen Reader which language the
item text is in.`,name:"lang",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Optional CSS classes for the entire dropdown component.",name:"className",required:!1,type:{name:"string"}},htmlFor:{defaultValue:null,description:"",name:"htmlFor",required:!1,type:{name:"string"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},"data-modal-launcher-portal":{defaultValue:null,description:"",name:"data-modal-launcher-portal",required:!1,type:{name:"boolean"}},"data-placement":{defaultValue:null,description:"",name:"data-placement",required:!1,type:{name:"string"}},"aria-activedescendant":{defaultValue:null,description:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",name:"aria-activedescendant",required:!1,type:{name:"string"}},"aria-atomic":{defaultValue:null,description:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",name:"aria-atomic",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-autocomplete":{defaultValue:null,description:`Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.`,name:"aria-autocomplete",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"inline"'},{value:'"list"'},{value:'"both"'}]}},"aria-busy":{defaultValue:null,description:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",name:"aria-busy",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-checked":{defaultValue:null,description:`Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.
@see aria-pressed
@see aria-selected.`,name:"aria-checked",required:!1,type:{name:'boolean | "false" | "true" | "mixed"'}},"aria-colcount":{defaultValue:null,description:`Defines the total number of columns in a table, grid, or treegrid.
@see aria-colindex.`,name:"aria-colcount",required:!1,type:{name:"number"}},"aria-colindex":{defaultValue:null,description:`Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.
@see aria-colcount
@see aria-colspan.`,name:"aria-colindex",required:!1,type:{name:"number"}},"aria-colspan":{defaultValue:null,description:`Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.
@see aria-colindex
@see aria-rowspan.`,name:"aria-colspan",required:!1,type:{name:"number"}},"aria-controls":{defaultValue:null,description:`Identifies the element (or elements) whose contents or presence are controlled by the current element.
@see aria-owns.`,name:"aria-controls",required:!1,type:{name:"string"}},"aria-current":{defaultValue:null,description:"Indicates the element that represents the current item within a container or set of related elements.",name:"aria-current",required:!1,type:{name:'boolean | "false" | "true" | "page" | "step" | "location" | "date" | "time"'}},"aria-describedby":{defaultValue:null,description:`Identifies the element (or elements) that describes the object.
@see aria-labelledby`,name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:`Identifies the element that provides a detailed, extended description for the object.
@see aria-describedby.`,name:"aria-details",required:!1,type:{name:"string"}},"aria-disabled":{defaultValue:null,description:`Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.
@see aria-hidden
@see aria-readonly.`,name:"aria-disabled",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-dropeffect":{defaultValue:null,description:`Indicates what functions can be performed when a dragged object is released on the drop target.
@deprecated in ARIA 1.1`,name:"aria-dropeffect",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"copy"'},{value:'"execute"'},{value:'"link"'},{value:'"move"'},{value:'"popup"'}]}},"aria-errormessage":{defaultValue:null,description:`Identifies the element that provides an error message for the object.
@see aria-invalid
@see aria-describedby.`,name:"aria-errormessage",required:!1,type:{name:"string"}},"aria-expanded":{defaultValue:null,description:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",name:"aria-expanded",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-flowto":{defaultValue:null,description:`Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.`,name:"aria-flowto",required:!1,type:{name:"string"}},"aria-grabbed":{defaultValue:null,description:`Indicates an element's "grabbed" state in a drag-and-drop operation.
@deprecated in ARIA 1.1`,name:"aria-grabbed",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-haspopup":{defaultValue:null,description:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",name:"aria-haspopup",required:!1,type:{name:'boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" | "dialog"'}},"aria-hidden":{defaultValue:null,description:`Indicates whether the element is exposed to an accessibility API.
@see aria-disabled.`,name:"aria-hidden",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-invalid":{defaultValue:null,description:`Indicates the entered value does not conform to the format expected by the application.
@see aria-errormessage.`,name:"aria-invalid",required:!1,type:{name:'boolean | "false" | "true" | "grammar" | "spelling"'}},"aria-keyshortcuts":{defaultValue:null,description:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",name:"aria-keyshortcuts",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:`Defines a string value that labels the current element.
@see aria-labelledby.`,name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:`Identifies the element (or elements) that labels the current element.
@see aria-describedby.`,name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-level":{defaultValue:null,description:"Defines the hierarchical level of an element within a structure.",name:"aria-level",required:!1,type:{name:"number"}},"aria-live":{defaultValue:null,description:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",name:"aria-live",required:!1,type:{name:"enum",value:[{value:'"off"'},{value:'"assertive"'},{value:'"polite"'}]}},"aria-modal":{defaultValue:null,description:"Indicates whether an element is modal when displayed.",name:"aria-modal",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-multiline":{defaultValue:null,description:"Indicates whether a text box accepts multiple lines of input or only a single line.",name:"aria-multiline",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-multiselectable":{defaultValue:null,description:"Indicates that the user may select more than one item from the current selectable descendants.",name:"aria-multiselectable",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-orientation":{defaultValue:null,description:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",name:"aria-orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},"aria-owns":{defaultValue:null,description:`Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.
@see aria-controls.`,name:"aria-owns",required:!1,type:{name:"string"}},"aria-placeholder":{defaultValue:null,description:`Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.`,name:"aria-placeholder",required:!1,type:{name:"string"}},"aria-posinset":{defaultValue:null,description:`Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.
@see aria-setsize.`,name:"aria-posinset",required:!1,type:{name:"number"}},"aria-pressed":{defaultValue:null,description:`Indicates the current "pressed" state of toggle buttons.
@see aria-checked
@see aria-selected.`,name:"aria-pressed",required:!1,type:{name:'boolean | "false" | "true" | "mixed"'}},"aria-readonly":{defaultValue:null,description:`Indicates that the element is not editable, but is otherwise operable.
@see aria-disabled.`,name:"aria-readonly",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-relevant":{defaultValue:null,description:`Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.
@see aria-atomic.`,name:"aria-relevant",required:!1,type:{name:"enum",value:[{value:'"additions"'},{value:'"additions removals"'},{value:'"additions text"'},{value:'"all"'},{value:'"removals"'},{value:'"removals additions"'},{value:'"removals text"'},{value:'"text"'},{value:'"text additions"'},{value:'"text removals"'}]}},"aria-required":{defaultValue:null,description:"Indicates that user input is required on the element before a form may be submitted.",name:"aria-required",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-roledescription":{defaultValue:null,description:"Defines a human-readable, author-localized description for the role of an element.",name:"aria-roledescription",required:!1,type:{name:"string"}},"aria-rowcount":{defaultValue:null,description:`Defines the total number of rows in a table, grid, or treegrid.
@see aria-rowindex.`,name:"aria-rowcount",required:!1,type:{name:"number"}},"aria-rowindex":{defaultValue:null,description:`Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.
@see aria-rowcount
@see aria-rowspan.`,name:"aria-rowindex",required:!1,type:{name:"number"}},"aria-rowspan":{defaultValue:null,description:`Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.
@see aria-rowindex
@see aria-colspan.`,name:"aria-rowspan",required:!1,type:{name:"number"}},"aria-selected":{defaultValue:null,description:`Indicates the current "selected" state of various widgets.
@see aria-checked
@see aria-pressed.`,name:"aria-selected",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-setsize":{defaultValue:null,description:`Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.
@see aria-posinset.`,name:"aria-setsize",required:!1,type:{name:"number"}},"aria-sort":{defaultValue:null,description:"Indicates if items in a table or grid are sorted in ascending or descending order.",name:"aria-sort",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"ascending"'},{value:'"descending"'},{value:'"other"'}]}},"aria-valuemax":{defaultValue:null,description:"Defines the maximum allowed value for a range widget.",name:"aria-valuemax",required:!1,type:{name:"number"}},"aria-valuemin":{defaultValue:null,description:"Defines the minimum allowed value for a range widget.",name:"aria-valuemin",required:!1,type:{name:"number"}},"aria-valuenow":{defaultValue:null,description:`Defines the current value for a range widget.
@see aria-valuetext.`,name:"aria-valuenow",required:!1,type:{name:"number"}},"aria-valuetext":{defaultValue:null,description:"Defines the human readable text alternative of aria-valuenow for a range widget.",name:"aria-valuetext",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"",name:"role",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"list"'},{value:'"link"'},{value:'"menu"'},{value:'"listbox"'},{value:'"tree"'},{value:'"grid"'},{value:'"dialog"'},{value:'"alert"'},{value:'"alertdialog"'},{value:'"application"'},{value:'"article"'},{value:'"banner"'},{value:'"button"'},{value:'"cell"'},{value:'"checkbox"'},{value:'"columnheader"'},{value:'"combobox"'},{value:'"complementary"'},{value:'"contentinfo"'},{value:'"definition"'},{value:'"directory"'},{value:'"document"'},{value:'"feed"'},{value:'"figure"'},{value:'"form"'},{value:'"gridcell"'},{value:'"group"'},{value:'"heading"'},{value:'"img"'},{value:'"listitem"'},{value:'"log"'},{value:'"main"'},{value:'"marquee"'},{value:'"math"'},{value:'"menubar"'},{value:'"menuitem"'},{value:'"menuitemcheckbox"'},{value:'"menuitemradio"'},{value:'"navigation"'},{value:'"note"'},{value:'"option"'},{value:'"presentation"'},{value:'"progressbar"'},{value:'"radio"'},{value:'"radiogroup"'},{value:'"region"'},{value:'"row"'},{value:'"rowgroup"'},{value:'"rowheader"'},{value:'"scrollbar"'},{value:'"search"'},{value:'"searchbox"'},{value:'"separator"'},{value:'"slider"'},{value:'"spinbutton"'},{value:'"status"'},{value:'"switch"'},{value:'"tab"'},{value:'"table"'},{value:'"tablist"'},{value:'"tabpanel"'},{value:'"term"'},{value:'"textbox"'},{value:'"timer"'},{value:'"toolbar"'},{value:'"tooltip"'},{value:'"treegrid"'},{value:'"treeitem"'}]}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onMouseMove:{defaultValue:null,description:"",name:"onMouseMove",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDoubleClick:{defaultValue:null,description:"",name:"onDoubleClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onMouseEnter:{defaultValue:null,description:"",name:"onMouseEnter",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onMouseLeave:{defaultValue:null,description:"",name:"onMouseLeave",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onMouseOut:{defaultValue:null,description:"",name:"onMouseOut",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onMouseOver:{defaultValue:null,description:"",name:"onMouseOver",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDrag:{defaultValue:null,description:"",name:"onDrag",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDragEnter:{defaultValue:null,description:"",name:"onDragEnter",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDragExit:{defaultValue:null,description:"",name:"onDragExit",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDragLeave:{defaultValue:null,description:"",name:"onDragLeave",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDragOver:{defaultValue:null,description:"",name:"onDragOver",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDrop:{defaultValue:null,description:"",name:"onDrop",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!1,type:{name:"((e: KeyboardEvent<Element>) => unknown)"}},onKeyPress:{defaultValue:null,description:"",name:"onKeyPress",required:!1,type:{name:"((e: KeyboardEvent<Element>) => unknown)"}},onKeyUp:{defaultValue:null,description:"",name:"onKeyUp",required:!1,type:{name:"((e: KeyboardEvent<Element>) => unknown)"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => unknown)"}},onInput:{defaultValue:null,description:"",name:"onInput",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => unknown)"}},onInvalid:{defaultValue:null,description:"",name:"onInvalid",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => unknown)"}},onSubmit:{defaultValue:null,description:"",name:"onSubmit",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => unknown)"}},onTouchCancel:{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"((e: TouchEvent<Element>) => unknown)"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"((e: TouchEvent<Element>) => unknown)"}},onTouchMove:{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"((e: TouchEvent<Element>) => unknown)"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"((e: TouchEvent<Element>) => unknown)"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((e: FocusEvent<Element, Element>) => unknown)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((e: FocusEvent<Element, Element>) => unknown)"}},tag:{defaultValue:null,description:"",name:"tag",required:!1,type:{name:"string"}}}}}catch{}function A(n,e){return M.forwardRef((t,a)=>{const{className:r,style:i,...l}=t,s=typeof n=="string"?Cn[n]:null,{className:o,style:u}=He([s,e,i]);return b(n,{...l,ref:a,className:[o,r].filter(Boolean).join(" "),style:u})})}const Cn=N.StyleSheet.create({button:{margin:0,"::-moz-focus-inner":{border:0}}}),z=N.StyleSheet.create({default:{alignItems:"stretch",borderWidth:0,borderStyle:"solid",boxSizing:"border-box",display:"flex",flexDirection:"column",margin:0,padding:0,position:"relative",zIndex:0,minHeight:0,minWidth:0}}),Tn=A("div",z.default),Nn=A("article",z.default),An=A("aside",z.default),zn=A("nav",z.default),Fn=A("section",z.default),Qn=M.forwardRef((n,e)=>{const{testId:t,tag:a="div",...r}=n,i={...r,"data-test-id":t};switch(a){case"article":return b(Nn,{...i,ref:e});case"aside":return b(An,{...i,ref:e});case"nav":return b(zn,{...i,ref:e});case"section":return b(Fn,{...i,ref:e});case"div":return b(Tn,{...i,ref:e});default:throw Error(`${a} is not an allowed value for the 'tag' prop`)}});try{view.displayName="view",view.__docgenInfo={description:`View is a building block for constructing other components. \`View\` roughly
maps to \`div\`. You can override which tag is used to render the component
(for semantic purposes) by specifying the \`tag\` prop.

These components can take styles (via the \`style\` prop) in a variety of
manners:

- An inline style object
- An \`aphrodite\` StyleSheet style
- An array combining the above

\`View\` sets the following defaults:

- \`display: "flex"\`
- \`flexDirection: "column"\`
- they each get their own stacking context.

### Usage

\`\`\`jsx
import {View} from "@khanacademy/wonder-blocks-core";

<View>This is a View!</View>
\`\`\``,displayName:"view",props:{children:{defaultValue:null,description:"Text to appear on the button.",name:"children",required:!1,type:{name:"ReactNode"}},style:{defaultValue:null,description:"Optional custom styles.",name:"style",required:!1,type:{name:"any"}},testId:{defaultValue:null,description:"Test ID used for e2e testing.",name:"testId",required:!1,type:{name:"string"}},lang:{defaultValue:null,description:`Optional attribute to indicate to the Screen Reader which language the
item text is in.`,name:"lang",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"Optional CSS classes for the entire dropdown component.",name:"className",required:!1,type:{name:"string"}},htmlFor:{defaultValue:null,description:"",name:"htmlFor",required:!1,type:{name:"string"}},tabIndex:{defaultValue:null,description:"",name:"tabIndex",required:!1,type:{name:"number"}},id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},"data-modal-launcher-portal":{defaultValue:null,description:"",name:"data-modal-launcher-portal",required:!1,type:{name:"boolean"}},"data-placement":{defaultValue:null,description:"",name:"data-placement",required:!1,type:{name:"string"}},"aria-activedescendant":{defaultValue:null,description:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",name:"aria-activedescendant",required:!1,type:{name:"string"}},"aria-atomic":{defaultValue:null,description:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",name:"aria-atomic",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-autocomplete":{defaultValue:null,description:`Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.`,name:"aria-autocomplete",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"inline"'},{value:'"list"'},{value:'"both"'}]}},"aria-busy":{defaultValue:null,description:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",name:"aria-busy",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-checked":{defaultValue:null,description:`Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.
@see aria-pressed
@see aria-selected.`,name:"aria-checked",required:!1,type:{name:'boolean | "false" | "true" | "mixed"'}},"aria-colcount":{defaultValue:null,description:`Defines the total number of columns in a table, grid, or treegrid.
@see aria-colindex.`,name:"aria-colcount",required:!1,type:{name:"number"}},"aria-colindex":{defaultValue:null,description:`Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.
@see aria-colcount
@see aria-colspan.`,name:"aria-colindex",required:!1,type:{name:"number"}},"aria-colspan":{defaultValue:null,description:`Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.
@see aria-colindex
@see aria-rowspan.`,name:"aria-colspan",required:!1,type:{name:"number"}},"aria-controls":{defaultValue:null,description:`Identifies the element (or elements) whose contents or presence are controlled by the current element.
@see aria-owns.`,name:"aria-controls",required:!1,type:{name:"string"}},"aria-current":{defaultValue:null,description:"Indicates the element that represents the current item within a container or set of related elements.",name:"aria-current",required:!1,type:{name:'boolean | "false" | "true" | "page" | "step" | "location" | "date" | "time"'}},"aria-describedby":{defaultValue:null,description:`Identifies the element (or elements) that describes the object.
@see aria-labelledby`,name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:`Identifies the element that provides a detailed, extended description for the object.
@see aria-describedby.`,name:"aria-details",required:!1,type:{name:"string"}},"aria-disabled":{defaultValue:null,description:`Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.
@see aria-hidden
@see aria-readonly.`,name:"aria-disabled",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-dropeffect":{defaultValue:null,description:`Indicates what functions can be performed when a dragged object is released on the drop target.
@deprecated in ARIA 1.1`,name:"aria-dropeffect",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"copy"'},{value:'"execute"'},{value:'"link"'},{value:'"move"'},{value:'"popup"'}]}},"aria-errormessage":{defaultValue:null,description:`Identifies the element that provides an error message for the object.
@see aria-invalid
@see aria-describedby.`,name:"aria-errormessage",required:!1,type:{name:"string"}},"aria-expanded":{defaultValue:null,description:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",name:"aria-expanded",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-flowto":{defaultValue:null,description:`Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.`,name:"aria-flowto",required:!1,type:{name:"string"}},"aria-grabbed":{defaultValue:null,description:`Indicates an element's "grabbed" state in a drag-and-drop operation.
@deprecated in ARIA 1.1`,name:"aria-grabbed",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-haspopup":{defaultValue:null,description:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",name:"aria-haspopup",required:!1,type:{name:'boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" | "dialog"'}},"aria-hidden":{defaultValue:null,description:`Indicates whether the element is exposed to an accessibility API.
@see aria-disabled.`,name:"aria-hidden",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-invalid":{defaultValue:null,description:`Indicates the entered value does not conform to the format expected by the application.
@see aria-errormessage.`,name:"aria-invalid",required:!1,type:{name:'boolean | "false" | "true" | "grammar" | "spelling"'}},"aria-keyshortcuts":{defaultValue:null,description:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",name:"aria-keyshortcuts",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:`Defines a string value that labels the current element.
@see aria-labelledby.`,name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:`Identifies the element (or elements) that labels the current element.
@see aria-describedby.`,name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-level":{defaultValue:null,description:"Defines the hierarchical level of an element within a structure.",name:"aria-level",required:!1,type:{name:"number"}},"aria-live":{defaultValue:null,description:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",name:"aria-live",required:!1,type:{name:"enum",value:[{value:'"off"'},{value:'"assertive"'},{value:'"polite"'}]}},"aria-modal":{defaultValue:null,description:"Indicates whether an element is modal when displayed.",name:"aria-modal",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-multiline":{defaultValue:null,description:"Indicates whether a text box accepts multiple lines of input or only a single line.",name:"aria-multiline",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-multiselectable":{defaultValue:null,description:"Indicates that the user may select more than one item from the current selectable descendants.",name:"aria-multiselectable",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-orientation":{defaultValue:null,description:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",name:"aria-orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},"aria-owns":{defaultValue:null,description:`Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.
@see aria-controls.`,name:"aria-owns",required:!1,type:{name:"string"}},"aria-placeholder":{defaultValue:null,description:`Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.`,name:"aria-placeholder",required:!1,type:{name:"string"}},"aria-posinset":{defaultValue:null,description:`Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.
@see aria-setsize.`,name:"aria-posinset",required:!1,type:{name:"number"}},"aria-pressed":{defaultValue:null,description:`Indicates the current "pressed" state of toggle buttons.
@see aria-checked
@see aria-selected.`,name:"aria-pressed",required:!1,type:{name:'boolean | "false" | "true" | "mixed"'}},"aria-readonly":{defaultValue:null,description:`Indicates that the element is not editable, but is otherwise operable.
@see aria-disabled.`,name:"aria-readonly",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-relevant":{defaultValue:null,description:`Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.
@see aria-atomic.`,name:"aria-relevant",required:!1,type:{name:"enum",value:[{value:'"additions"'},{value:'"additions removals"'},{value:'"additions text"'},{value:'"all"'},{value:'"removals"'},{value:'"removals additions"'},{value:'"removals text"'},{value:'"text"'},{value:'"text additions"'},{value:'"text removals"'}]}},"aria-required":{defaultValue:null,description:"Indicates that user input is required on the element before a form may be submitted.",name:"aria-required",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-roledescription":{defaultValue:null,description:"Defines a human-readable, author-localized description for the role of an element.",name:"aria-roledescription",required:!1,type:{name:"string"}},"aria-rowcount":{defaultValue:null,description:`Defines the total number of rows in a table, grid, or treegrid.
@see aria-rowindex.`,name:"aria-rowcount",required:!1,type:{name:"number"}},"aria-rowindex":{defaultValue:null,description:`Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.
@see aria-rowcount
@see aria-rowspan.`,name:"aria-rowindex",required:!1,type:{name:"number"}},"aria-rowspan":{defaultValue:null,description:`Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.
@see aria-rowindex
@see aria-colspan.`,name:"aria-rowspan",required:!1,type:{name:"number"}},"aria-selected":{defaultValue:null,description:`Indicates the current "selected" state of various widgets.
@see aria-checked
@see aria-pressed.`,name:"aria-selected",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-setsize":{defaultValue:null,description:`Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.
@see aria-posinset.`,name:"aria-setsize",required:!1,type:{name:"number"}},"aria-sort":{defaultValue:null,description:"Indicates if items in a table or grid are sorted in ascending or descending order.",name:"aria-sort",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"ascending"'},{value:'"descending"'},{value:'"other"'}]}},"aria-valuemax":{defaultValue:null,description:"Defines the maximum allowed value for a range widget.",name:"aria-valuemax",required:!1,type:{name:"number"}},"aria-valuemin":{defaultValue:null,description:"Defines the minimum allowed value for a range widget.",name:"aria-valuemin",required:!1,type:{name:"number"}},"aria-valuenow":{defaultValue:null,description:`Defines the current value for a range widget.
@see aria-valuetext.`,name:"aria-valuenow",required:!1,type:{name:"number"}},"aria-valuetext":{defaultValue:null,description:"Defines the human readable text alternative of aria-valuenow for a range widget.",name:"aria-valuetext",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"",name:"role",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"list"'},{value:'"link"'},{value:'"menu"'},{value:'"listbox"'},{value:'"tree"'},{value:'"grid"'},{value:'"dialog"'},{value:'"alert"'},{value:'"alertdialog"'},{value:'"application"'},{value:'"article"'},{value:'"banner"'},{value:'"button"'},{value:'"cell"'},{value:'"checkbox"'},{value:'"columnheader"'},{value:'"combobox"'},{value:'"complementary"'},{value:'"contentinfo"'},{value:'"definition"'},{value:'"directory"'},{value:'"document"'},{value:'"feed"'},{value:'"figure"'},{value:'"form"'},{value:'"gridcell"'},{value:'"group"'},{value:'"heading"'},{value:'"img"'},{value:'"listitem"'},{value:'"log"'},{value:'"main"'},{value:'"marquee"'},{value:'"math"'},{value:'"menubar"'},{value:'"menuitem"'},{value:'"menuitemcheckbox"'},{value:'"menuitemradio"'},{value:'"navigation"'},{value:'"note"'},{value:'"option"'},{value:'"presentation"'},{value:'"progressbar"'},{value:'"radio"'},{value:'"radiogroup"'},{value:'"region"'},{value:'"row"'},{value:'"rowgroup"'},{value:'"rowheader"'},{value:'"scrollbar"'},{value:'"search"'},{value:'"searchbox"'},{value:'"separator"'},{value:'"slider"'},{value:'"spinbutton"'},{value:'"status"'},{value:'"switch"'},{value:'"tab"'},{value:'"table"'},{value:'"tablist"'},{value:'"tabpanel"'},{value:'"term"'},{value:'"textbox"'},{value:'"timer"'},{value:'"toolbar"'},{value:'"tooltip"'},{value:'"treegrid"'},{value:'"treeitem"'}]}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onMouseMove:{defaultValue:null,description:"",name:"onMouseMove",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onClick:{defaultValue:null,description:"",name:"onClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDoubleClick:{defaultValue:null,description:"",name:"onDoubleClick",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onMouseEnter:{defaultValue:null,description:"",name:"onMouseEnter",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onMouseLeave:{defaultValue:null,description:"",name:"onMouseLeave",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onMouseOut:{defaultValue:null,description:"",name:"onMouseOut",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onMouseOver:{defaultValue:null,description:"",name:"onMouseOver",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDrag:{defaultValue:null,description:"",name:"onDrag",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDragEnd:{defaultValue:null,description:"",name:"onDragEnd",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDragEnter:{defaultValue:null,description:"",name:"onDragEnter",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDragExit:{defaultValue:null,description:"",name:"onDragExit",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDragLeave:{defaultValue:null,description:"",name:"onDragLeave",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDragOver:{defaultValue:null,description:"",name:"onDragOver",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDragStart:{defaultValue:null,description:"",name:"onDragStart",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onDrop:{defaultValue:null,description:"",name:"onDrop",required:!1,type:{name:"((e: MouseEvent<Element, MouseEvent>) => unknown)"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!1,type:{name:"((e: KeyboardEvent<Element>) => unknown)"}},onKeyPress:{defaultValue:null,description:"",name:"onKeyPress",required:!1,type:{name:"((e: KeyboardEvent<Element>) => unknown)"}},onKeyUp:{defaultValue:null,description:"",name:"onKeyUp",required:!1,type:{name:"((e: KeyboardEvent<Element>) => unknown)"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => unknown)"}},onInput:{defaultValue:null,description:"",name:"onInput",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => unknown)"}},onInvalid:{defaultValue:null,description:"",name:"onInvalid",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => unknown)"}},onSubmit:{defaultValue:null,description:"",name:"onSubmit",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => unknown)"}},onTouchCancel:{defaultValue:null,description:"",name:"onTouchCancel",required:!1,type:{name:"((e: TouchEvent<Element>) => unknown)"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!1,type:{name:"((e: TouchEvent<Element>) => unknown)"}},onTouchMove:{defaultValue:null,description:"",name:"onTouchMove",required:!1,type:{name:"((e: TouchEvent<Element>) => unknown)"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!1,type:{name:"((e: TouchEvent<Element>) => unknown)"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"((e: FocusEvent<Element, Element>) => unknown)"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"((e: FocusEvent<Element, Element>) => unknown)"}},tag:{defaultValue:null,description:"The HTML tag to render.",name:"tag",required:!1,type:{name:"enum",value:[{value:'"article"'},{value:'"aside"'},{value:'"div"'},{value:'"nav"'},{value:'"section"'}]}}}}}catch{}const S={Root:"root",Initial:"initial",Standard:"standard"},W=M.createContext(S.Root);W.displayName="RenderStateContext";class jn extends M.Component{constructor(){super(...arguments),this.state={mounted:!1},this._isTheRootComponent=!1}componentDidMount(){this._isTheRootComponent&&this.setState({mounted:!0})}_renderAsRootComponent(){const{mounted:e}=this.state,{children:t,placeholder:a}=this.props;return this._isTheRootComponent=!0,e?b(W.Provider,{value:S.Standard,children:t()}):a?b(W.Provider,{value:S.Initial,children:a()}):null}_maybeRender(e){const{children:t,placeholder:a}=this.props;switch(e){case S.Root:return this._renderAsRootComponent();case S.Initial:return a?a():null;case S.Standard:return t()}return console.log(`We got a render state we don't understand: "${JSON.stringify(e)??""}"`),this._maybeRender(S.Root)}render(){return b(W.Consumer,{children:e=>this._maybeRender(e)})}}try{withssrplaceholder.displayName="withssrplaceholder",withssrplaceholder.__docgenInfo={description:`Defer or change rendering until the component did mount.

The purpose of this component is to disable or modify server-side rendering
of certain components. Disabling rendering on the server, by itself, would
not be sufficient, since the initial render of the component must match what
is rendered on the server. Therefore, this component also disables rendering
the first time around on the client.

If \`WithSSRPlaceholder\` components are nested within one another, the root
\`WithSSRPlaceholder\` component will handle the initial render, but nested
\`WithSSRPlaceholder\` components will delegate to the root one, meaning that
we don't cascade delayed rendering down the component tree. This will also be
the case across portal boundaries.

## Usage

\`\`\`js
import {WithSSRPlaceholder} from "@khanacademy/wonder-blocks-core";

<WithSSRPlaceholder placeholder={() => <div>Renders on the server!</div>}>
  {() => (
     <div>This is rendered only by the client, for all renders after the rehydration render</div>
  )}
</WithSSRPlaceholder>
\`\`\``,displayName:"withssrplaceholder",props:{children:{defaultValue:null,description:`The content that is client-only.  This is what is rendered when
not server-side rendering, or (when server-side rendering) after
the initial rehydration has finished.`,name:"children",required:!1,type:{name:"(() => ReactNode) & ReactNode"}},placeholder:{defaultValue:null,description:`What to render during server-side rendering, or null not to
render anything.

NOTE: Make sure the placeholder will render the same for both
client and server -- that is, it does the same thing for both
the server-side renderer and the rehydration -- or it defeats
the purpose of using the WithSSRPlaceholder component.`,name:"placeholder",required:!0,type:{name:"(() => ReactNode) | null"}}}}}catch{}const Ke=class Ge{constructor(e){this.get=a=>{const r=a.toLowerCase();if(!this._hasValidIdChars(a))throw new Error(`Invalid identifier key: ${a}`);return`${this._uniqueFactoryName}-${r}`},e=typeof e=="string"?e:"";const t=e.toLowerCase();if(!this._hasValidIdChars(t))throw new Error(`Invalid factory scope: ${e}`);this._uniqueFactoryName=`uid-${t}-${Ge._factoryUniquenessCounter++}`}_hasValidIdChars(e){if(typeof e!="string")return!1;const t=e.replace(/[^\d\w-]/g,"-");return e===t}};Ke._factoryUniquenessCounter=0;let Bn=Ke;const be=class{get(e){return e}};be.Default=new be;let Un=be;const Ln=Un.Default;class $n extends M.Component{_performRender(e){const{children:t,mockOnFirstRender:a,scope:r}=this.props;return e?a?t(Ln):null:(this._idFactory||(this._idFactory=new Bn(r)),t(this._idFactory))}render(){return b(jn,{placeholder:()=>this._performRender(!0),children:()=>this._performRender(!1)})}}try{uniqueidprovider.displayName="uniqueidprovider",uniqueidprovider.__docgenInfo={description:`The \`UniqueIDProvider\` component is how Wonder Blocks components obtain
unique identifiers. This component ensures that server-side rendering and
initial client rendering match while allowing the provision of unique
identifiers for the client.

In all but the first render, the children are rendered with the same
\`IIdentifierFactory\` instance, ensuring that the same calls will return the
same identifiers.

The \`get\` method of the identifier factory ensures that the same identifier
is returned for like requests, but also that all identifiers provided are
unique. Therefore, \`get("test")\` will always equal \`get("test")\`, and
\`get("test2")\` will always equal \`get("test2")\`, but \`get("test")\` will
never equal \`get("test2")\`.

## Usage

\`\`\`jsx
import {UniqueIDProvider} from "@khanacademy/wonder-blocks-core";

<UniqueIDProvider mockOnFirstRender={false} scope="field">
 {(ids) => (
    <>The id returned for "my-identifier": {ids.get("my-identifier")}</>
 )}
</UniqueIDProvider>
\`\`\``,displayName:"uniqueidprovider",props:{children:{defaultValue:null,description:`A render prop that takes an instance of IIdentifierFactory and returns
the content to be rendered.

If mockOnFirstRender is false, this is only called after
the initial render has occurred -- it will be blank for the
the first render -- and will always be called with the same
IIdentifierFactory instance.

If mockOnFirstRender is true, this is called once with
a mock IIdentifierFactory for the initial render, and then a unique ID
factory thereafter.

Full type with \`IIdentifierFactory\` definition inlined is:

\`{get(id: string): string} => React.Node\``,name:"children",required:!1,type:{name:"((arg1: IIdentifierFactory) => ReactNode) & ReactNode"}},mockOnFirstRender:{defaultValue:null,description:`If mockOnFirstRender is false, children is only called
after the initial render has occurred.
If mockOnFirstRender is true, children is called once with
a mock IIdentifierFactory for the initial render, and then a unique ID
factory thereafter.`,name:"mockOnFirstRender",required:!0,type:{name:"boolean"}},scope:{defaultValue:null,description:`If this prop is specified, any identifiers provided will contain the
given scope. This can be useful for making easily readable identifiers.`,name:"scope",required:!1,type:{name:"string"}}}}}catch{}const Ye=class Je extends M.Component{renderChildren(e){const{id:t,children:a}=this.props,r=e?e.get(Je.defaultId):t;if(!r)throw new Error("Did not get an identifier factory nor a id prop");return a(r)}render(){const{id:e,scope:t}=this.props;return e?this.renderChildren():b($n,{scope:t,mockOnFirstRender:!0,children:a=>this.renderChildren(a)})}};Ye.defaultId="wb-id";let ta=Ye;try{idprovider.displayName="idprovider",idprovider.__docgenInfo={description:`This is a wrapper that returns an identifier. If the \`id\` prop is set, the
component will return the same id to be consumed by its children. Otherwise,
a unique id will be provided. This is beneficial for accessibility purposes,
among other things.

The main difference with \`UniqueIDProvider\` is that \`IDProvider\` has a single
responsibility, to return an identifier that can by used by the children that
are rendered internally.

This way, the wrapped component will receive this custom ID and will use it
to connect different elements.

e.g. It uses the same generated id to connect a Dialog with its main title,
or form label with the associated input element, etc.

## Usage

\`\`\`jsx
import {IDProvider} from "@khanacademy/wonder-blocks-core";

<IDProvider scope="field">
 {(uniqueId) => (
    Unique ID: {uniqueId}
 )}
</IDProvider>
\`\`\``,displayName:"idprovider",props:{children:{defaultValue:null,description:`Use the children-as-function pattern to pass a uniqueId string for
use anywhere within children. This provides a way of adding a unique identifier
to a given component for a11y purposes.`,name:"children",required:!1,type:{name:"((uniqueId: string) => ReactNode) & ReactNode"}},scope:{defaultValue:null,description:"Scope for the unique identifier",name:"scope",required:!0,type:{name:"string"}},id:{defaultValue:null,description:`An optional id parameter for the title. If one is
not provided, a unique id will be generated.`,name:"id",required:!1,type:{name:"string"}},testId:{defaultValue:null,description:"Test ID used for e2e testing.",name:"testId",required:!1,type:{name:"string"}}}}}catch{}const Hn=()=>M.useContext(W),{useEffect:Kn,useState:Gn}=Ze,Oe=({children:n,throwIfNested:e=!0})=>{const[t,a]=Gn(!0),r=Hn();if(Kn(()=>{a(!1)},[]),r!==S.Root){if(e)throw new Error("There's already a <RenderStateRoot> above this instance in the render tree.  This instance should be removed.");return n}const i=t?S.Initial:S.Standard;return b(W.Provider,{value:i,children:n})};try{Oe.displayName="RenderStateRoot",Oe.__docgenInfo={description:"",displayName:"RenderStateRoot",props:{throwIfNested:{defaultValue:{value:"true"},description:"Whether the component should throw when nested.  Defaults to `true`.",name:"throwIfNested",required:!1,type:{name:"boolean"}}}}}catch{}export{ta as I,S as R,Ln as S,Zn as T,$n as U,Qn as V,jn as W,A as a,Bn as b,Oe as c,N as l,Hn as u};
//# sourceMappingURL=render-state-root-891c0d56.js.map
