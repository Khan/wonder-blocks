import{M as i}from"./index-35e12253.js";import{a as o,j as r,F as p}from"./jsx-runtime-309e447d.js";import{u as a}from"./index-506666d7.js";import"./iframe-97aa1d91.js";import"../sb-preview/runtime.js";import"./chunk-6P7RB4HF-938b085e.js";import"./index-d475d2ea.js";import"./index-9f32f44c.js";import"./_commonjsHelpers-de833af9.js";import"./index-9c2d1831.js";import"./inheritsLoose-9eefaa95.js";import"./assertThisInitialized-081f9914.js";import"./index-4733a090.js";import"./_baseIsEqual-976d9d82.js";import"./uniq-944679ca.js";import"./index-356e4a49.js";function n(t){const e=Object.assign({h1:"h1",pre:"pre",code:"code",p:"p",a:"a"},a(),t.components);return r(p,{children:[o(i,{title:"Testing / Mocking / Types / MockResponse<>",parameters:{chromatic:{disableSnapshot:!0}}}),`
`,o(e.h1,{id:"mockresponse",children:"MockResponse<>"}),`
`,o(e.pre,{children:o(e.code,{className:"language-ts",children:`type MockResponse<TJson> = {|
    toPromise: () => Promise<Response>,
|};
`})}),`
`,r(e.p,{children:["This type specifies a mock response. Values of this type are generated by the ",o(e.a,{href:"/docs/testing-mocking-exports-respondwith--page",children:o(e.code,{children:"RespondWith"})})," API. The type parameter is included to allow uses to enforce if they only support ",o(e.code,{children:"MockResponses"})," that resolve to a specific JSON pattern."]}),`
`,r(e.p,{children:["The ",o(e.code,{children:"toPromise"})," method can be used to generate a new promise from the mocked response definition. Note that ",o(e.code,{children:"toPromise"})," will always generate a new promise and any promise created will settle according to any signal passed to the corresponding ",o(e.code,{children:"RespondWith"})," API call."]})]})}function c(t={}){const{wrapper:e}=Object.assign({},a(),t.components);return e?o(e,{...t,children:o(n,{...t})}):n(t)}const m=()=>{throw new Error("Docs-only story")};m.parameters={docsOnly:!0};const s={title:"Testing / Mocking / Types / MockResponse<>",parameters:{chromatic:{disableSnapshot:!0}},tags:["stories-mdx"],includeStories:["__page"]};s.parameters=s.parameters||{};s.parameters.docs={...s.parameters.docs||{},page:c};const j=["__page"];export{j as __namedExportsOrder,m as __page,s as default};
//# sourceMappingURL=types.mock-response.stories-e28c6fc8.js.map
