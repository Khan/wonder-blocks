import{M as s}from"./index-35e12253.js";import{a,j as c,F as i}from"./jsx-runtime-309e447d.js";import{u as o}from"./index-506666d7.js";import"./iframe-97aa1d91.js";import"../sb-preview/runtime.js";import"./chunk-6P7RB4HF-938b085e.js";import"./index-d475d2ea.js";import"./index-9f32f44c.js";import"./_commonjsHelpers-de833af9.js";import"./index-9c2d1831.js";import"./inheritsLoose-9eefaa95.js";import"./assertThisInitialized-081f9914.js";import"./index-4733a090.js";import"./_baseIsEqual-976d9d82.js";import"./uniq-944679ca.js";import"./index-356e4a49.js";function n(t){const e=Object.assign({h1:"h1",pre:"pre",code:"code",p:"p",a:"a"},o(),t.components);return c(i,{children:[a(s,{title:"Data / Exports / useSharedCache()",parameters:{chromatic:{disableSnapshot:!0}}}),`
`,a(e.h1,{id:"usesharedcache",children:"useSharedCache()"}),`
`,a(e.pre,{children:a(e.code,{className:"language-ts",children:`function useSharedCache<TValue: ValidCacheData>(
    id: string,
    scope: string,
    initialValue?: ?TValue | (() => ?TValue),
): [?TValue, CacheValueFn<TValue>];
`})}),`
`,c(e.p,{children:["The ",a(e.code,{children:"useSharedCache"})," hook provides access to a shared in-memory cache. This cache is not part of the cache hydrated by Wonder Blocks Data, so ",a(e.a,{href:"/docs/data-exports-sharedcache--page",children:a(e.code,{children:"SharedCache.purgeAll()"})})," must be called between server-side render cycles."]}),`
`,c(e.p,{children:["The hook returns a tuple of the currently cached value, or ",a(e.code,{children:"null"})," if none is cached, and a function that can be used to set the cached value."]}),`
`,a(e.p,{children:"The shared cache is passive and as such does not notify of changes to its contents."}),`
`,c(e.p,{children:["Each cached item is identified by an id and a scope. The scope is used to group items. Whole scopes can be cleared by specifying the specific scope when calling ",a(e.a,{href:"/docs/data-exports-sharedcache--page",children:a(e.code,{children:"SharedCache.purgeScope()"})}),"."]}),`
`,c(e.p,{children:["An optional argument, ",a(e.code,{children:"initialValue"})," can be given. This can be either the value to be cached itself or a function that returns the value to be cached (functions themselves are not valid cachable values). This allows for expensive initialization to only occur when it is necessary."]})]})}function h(t={}){const{wrapper:e}=Object.assign({},o(),t.components);return e?a(e,{...t,children:a(n,{...t})}):n(t)}const d=()=>{throw new Error("Docs-only story")};d.parameters={docsOnly:!0};const r={title:"Data / Exports / useSharedCache()",parameters:{chromatic:{disableSnapshot:!0}},tags:["stories-mdx"],includeStories:["__page"]};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:h};const w=["__page"];export{w as __namedExportsOrder,d as __page,r as default};
//# sourceMappingURL=exports.use-shared-cache.stories-c9d9f7bc.js.map
