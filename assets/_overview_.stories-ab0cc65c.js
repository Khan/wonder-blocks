import{M as s}from"./index-35e12253.js";import{a as t,j as n,F as m}from"./jsx-runtime-309e447d.js";import{u as a}from"./index-506666d7.js";import"./iframe-97aa1d91.js";import"../sb-preview/runtime.js";import"./chunk-6P7RB4HF-938b085e.js";import"./index-d475d2ea.js";import"./index-9f32f44c.js";import"./_commonjsHelpers-de833af9.js";import"./index-9c2d1831.js";import"./inheritsLoose-9eefaa95.js";import"./assertThisInitialized-081f9914.js";import"./index-4733a090.js";import"./_baseIsEqual-976d9d82.js";import"./uniq-944679ca.js";import"./index-356e4a49.js";function i(r){const e=Object.assign({h1:"h1",p:"p",code:"code"},a(),r.components);return n(m,{children:[t(s,{title:"Timing / Overview",parameters:{chromatic:{disableSnapshot:!0}}}),`
`,t(e.h1,{id:"timing",children:"Timing"}),`
`,n(e.p,{children:[t(e.code,{children:"wonder-blocks-timing"}),` provides abstractions for common timing APIs like
`,t(e.code,{children:"setTimeout"}),", ",t(e.code,{children:"setInterval"})," and ",t(e.code,{children:"requestAnimationFrame"}),` that are aware of React
component lifecycles, ensuring that scheduled timer actions are not unexpectedly
dangling after a component unmounts.`]})]})}function c(r={}){const{wrapper:e}=Object.assign({},a(),r.components);return e?t(e,{...r,children:t(i,{...r})}):i(r)}const p=()=>{throw new Error("Docs-only story")};p.parameters={docsOnly:!0};const o={title:"Timing / Overview",parameters:{chromatic:{disableSnapshot:!0}},tags:["stories-mdx"],includeStories:["__page"]};o.parameters=o.parameters||{};o.parameters.docs={...o.parameters.docs||{},page:c};const T=["__page"];export{T as __namedExportsOrder,p as __page,o as default};
//# sourceMappingURL=_overview_.stories-ab0cc65c.js.map
