import{M as i}from"./index-35e12253.js";import{a as t,j as s,F as a}from"./jsx-runtime-309e447d.js";import{u as p}from"./index-506666d7.js";import"./iframe-97aa1d91.js";import"../sb-preview/runtime.js";import"./chunk-6P7RB4HF-938b085e.js";import"./index-d475d2ea.js";import"./index-9f32f44c.js";import"./_commonjsHelpers-de833af9.js";import"./index-9c2d1831.js";import"./inheritsLoose-9eefaa95.js";import"./assertThisInitialized-081f9914.js";import"./index-4733a090.js";import"./_baseIsEqual-976d9d82.js";import"./uniq-944679ca.js";import"./index-356e4a49.js";function n(r){const e=Object.assign({h1:"h1",pre:"pre",code:"code",p:"p",a:"a"},p(),r.components);return s(a,{children:[t(i,{title:"Testing / Fixtures / Types / FixtureProps",parameters:{chromatic:{disableSnapshot:!0}}}),`
`,t(e.h1,{id:"fixtureprops",children:"FixtureProps"}),`
`,t(e.pre,{children:t(e.code,{className:"language-ts",children:`type FixtureProps<TProps: {...}> =
    | $ReadOnly<TProps>
    | ((options: $ReadOnly<GetPropsOptions>) => $ReadOnly<TProps>);
`})}),`
`,s(e.p,{children:["This type describes how props can be provided to a fixture as either a plain object, or a function that returns a plain object. The function will be called with an API to assist in generating the props (see ",t(e.a,{href:"/docs/testing-fixtures-types-getpropsoptions--page",children:t(e.code,{children:"GetPropsOptions"})}),")."]})]})}function c(r={}){const{wrapper:e}=Object.assign({},p(),r.components);return e?t(e,{...r,children:t(n,{...r})}):n(r)}const m=()=>{throw new Error("Docs-only story")};m.parameters={docsOnly:!0};const o={title:"Testing / Fixtures / Types / FixtureProps",parameters:{chromatic:{disableSnapshot:!0}},tags:["stories-mdx"],includeStories:["__page"]};o.parameters=o.parameters||{};o.parameters.docs={...o.parameters.docs||{},page:c};const w=["__page"];export{w as __namedExportsOrder,m as __page,o as default};
//# sourceMappingURL=types.fixture-props.stories-e00892f5.js.map
