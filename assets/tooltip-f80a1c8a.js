import{a as n,j as b}from"./jsx-runtime-309e447d.js";import{r as p}from"./index-9f32f44c.js";import{r as _}from"./index-9c2d1831.js";import{T as C,l as y,V as g,U as D}from"./render-state-root-891c0d56.js";import"./one-pane-dialog-da34165b.js";import{P as F,m as N}from"./maybe-get-portal-mounted-modal-host-element-fbe11998.js";import{S as u,C as c}from"./index-f641b98f.js";import{S as V}from"./strut-c6011196.js";import{H as $,c as O}from"./footnote-761d2bcc.js";class B{constructor(){this._subscribers=[]}_getIndex(e){return this._subscribers.findIndex(t=>t===e)}steal(e){const t=!!this._active;this._active=!0;for(const a of this._subscribers)a!==e&&a.activeStateStolen();return t}giveup(){this._active=!1}subscribe(e){if(this._getIndex(e)>=0)throw new Error("Already subscribed.");return this._subscribers.push(e),()=>{const a=this._getIndex(e);this._subscribers.splice(a,1)}}}const P=100,M=75,w=new B,x=class A extends p.Component{constructor(e){super(e),this.activeStateStolen=()=>{this._stolenFromUs=this.state.active||!!this._timeoutID,this._focused=!1,this._setActiveState(!1,!0)},this._handleFocusIn=()=>{this._updateActiveState(this._hovered,!0)},this._handleFocusOut=()=>{this._updateActiveState(this._hovered,!1)},this._handleMouseEnter=()=>{this._updateActiveState(!0,this._focused)},this._handleMouseLeave=()=>{this._updateActiveState(!1,this._focused)},this._handleKeyUp=t=>{t.key==="Escape"&&this.state.active&&(t.preventDefault(),t.stopPropagation(),this._updateActiveState(!1,!1))},this._focused=!1,this._hovered=!1,this.state={active:!1}}componentDidMount(){const e=_.findDOMNode(this);if(e instanceof Text)throw new Error("TooltipAnchor must be applied to an Element. Text content is not supported.");this._unsubscribeFromTracker=w.subscribe(this),this._anchorNode=e,this._updateFocusivity(),e&&(e.addEventListener("focusin",this._handleFocusIn),e.addEventListener("focusout",this._handleFocusOut),e.addEventListener("mouseenter",this._handleMouseEnter),e.addEventListener("mouseleave",this._handleMouseLeave),this.props.anchorRef(this._anchorNode))}componentDidUpdate(e){(e.forceAnchorFocusivity!==this.props.forceAnchorFocusivity||e.children!==this.props.children)&&this._updateFocusivity()}componentWillUnmount(){this._unsubscribeFromTracker&&this._unsubscribeFromTracker(),this._clearPendingAction();const e=this._anchorNode;e&&(e.removeEventListener("focusin",this._handleFocusIn),e.removeEventListener("focusout",this._handleFocusOut),e.removeEventListener("mouseenter",this._handleMouseEnter),e.removeEventListener("mouseleave",this._handleMouseLeave)),this.state.active&&document.removeEventListener("keyup",this._handleKeyUp)}_updateFocusivity(){const e=this._anchorNode;if(!e)return;const{forceAnchorFocusivity:t}=this.props,a=e.getAttribute("tabindex");t&&!a?(e.setAttribute("tabindex","0"),this._weSetFocusivity=!0):!t&&a&&this._weSetFocusivity&&(e.removeAttribute("tabindex"),this._weSetFocusivity=!1)}_updateActiveState(e,t){this._hovered=e,this._focused=t,this._setActiveState(e||t)}_clearPendingAction(){this._timeoutID&&(clearTimeout(this._timeoutID),this._timeoutID=null)}_setActiveState(e,t){if(this._stolenFromUs||e!==this.state.active||!this.state.active&&this._timeoutID)this._clearPendingAction();else if(e===this.state.active&&!this._timeoutID)return;if(t=t||e&&w.steal(this),t)e?document.addEventListener("keyup",this._handleKeyUp):document.removeEventListener("keyup",this._handleKeyUp),this.setState({active:e}),this.props.onActiveChanged(e),!this._stolenFromUs&&!e&&w.giveup(),this._stolenFromUs=!1;else{const a=e?P:M;this._timeoutID=setTimeout(()=>{this._timeoutID=null,this._setActiveState(e,!0)},a)}}_renderAnchorableChildren(){const{children:e}=this.props;return typeof e=="string"?n(C,{children:e}):e}_renderAccessibleChildren(e){const t=this._renderAnchorableChildren();return p.cloneElement(t,{"aria-describedby":e.get(A.ariaContentId)})}render(){return this.props.ids?this._renderAccessibleChildren(this.props.ids):this._renderAnchorableChildren()}};x.defaultProps={forceAnchorFocusivity:!0};x.ariaContentId="aria-content";let L=x;try{tooltipanchor.displayName="tooltipanchor",tooltipanchor.__docgenInfo={description:"",displayName:"tooltipanchor",props:{children:{defaultValue:null,description:`The content for anchoring the tooltip.
This element will be used to position the tooltip.
If a string is passed as children we wrap it in a Text element.
We allow children to be a string so that we can add tooltips to
words within a large block of text easily.`,name:"children",required:!1,type:{name:"(string | ReactElement<any, string | JSXElementConstructor<any>>) & ReactNode"}},anchorRef:{defaultValue:null,description:`Callback to be invoked when the anchored content is mounted.
This provides a reference to the anchored content, which can then be
used for calculating tooltip bubble positioning.`,name:"anchorRef",required:!0,type:{name:"(arg1?: Element | null | undefined) => unknown"}},forceAnchorFocusivity:{defaultValue:{value:"true"},description:`When true, if a tabindex attribute is not already present on the element
wrapped by the anchor, the element will be given tabindex=0 to make it
keyboard focusable; otherwise, does not attempt to change the ability to
focus the anchor element.

Defaults to true.

One might set this to false in circumstances where the wrapped component
already can receive focus or contains an element that can.
Use good judgement when overriding this value, the tooltip content should
be accessible via keyboard in all circumstances where the tooltip would
appear using the mouse, so verify those use-cases.`,name:"forceAnchorFocusivity",required:!1,type:{name:"boolean"}},onActiveChanged:{defaultValue:null,description:`Callback to pass active state back to Tooltip.

\`active\` will be true whenever the anchor is hovered or focused and false
otherwise.`,name:"onActiveChanged",required:!0,type:{name:"(active: boolean) => unknown"}},ids:{defaultValue:null,description:"Optional unique id factory.",name:"ids",required:!1,type:{name:"IIdentifierFactory"}}}}}catch{}let H=0;class R extends p.Component{_calculateDimensionsFromPlacement(){const{placement:e}=this.props,t=.5;switch(e){case"top":return{trimlinePoints:[`0,-${t}`,`${r},-${t}`],points:["0,0",`${r/2},${o}`,`${r},0`],height:o,width:r};case"right":return{trimlinePoints:[`${o+t},0`,`${o+t},${r}`],points:[`${o},0`,`0,${r/2}`,`${o},${r}`],width:o,height:r};case"bottom":return{trimlinePoints:[`0, ${o+t}`,`${r},${o+t}`],points:[`0, ${o}`,`${r/2},0`,`${r},${o}`],width:r,height:o};case"left":return{trimlinePoints:[`-${t},0`,`-${t},${r}`],points:["0,0",`${o},${r/2}`,`0,${r}`],width:o,height:r};default:throw new Error(`Unknown placement: ${e}`)}}_getFilterPositioning(){const{placement:e}=this.props;switch(e){case"top":return{y:"-50%",x:"-50%",offsetShadowX:0};case"bottom":return null;case"left":return{y:"-50%",x:"0%",offsetShadowX:1};case"right":return{y:"-50%",x:"-100%",offsetShadowX:-1};default:throw new Error(`Unknown placement: ${e}`)}}_maybeRenderDropshadow(e){const t=this._getFilterPositioning();if(!t)return null;const{placement:a}=this.props,{y:l,x:i,offsetShadowX:d}=t,m=`tooltip-dropshadow-${a}-${H++}`;return[b("filter",{id:m,width:"200%",height:"200%",x:i,y:l,children:[n("feGaussianBlur",{in:"SourceAlpha",stdDeviation:u.xxSmall_6/2}),n("feComponentTransfer",{children:n("feFuncA",{type:"linear",slope:"0.3"})})]},"filter"),n("g",{transform:`translate(${d},5.5)`,children:n("polyline",{fill:c.offBlack16,points:e.join(" "),stroke:c.offBlack32,filter:`url(#${m})`})},"dropshadow")]}_getFullTailWidth(){return r+2*h}_getFullTailHeight(){return o+f}_getContainerStyle(){const{placement:e}=this.props,t=this._getFullTailWidth(),a=this._getFullTailHeight();switch(e){case"top":return{top:-1,width:t,height:a};case"right":return{left:1,width:a,height:t};case"bottom":return{top:1,width:t,height:a};case"left":return{left:-1,width:a,height:t};default:throw new Error(`Unknown placement: ${e}`)}}_getArrowStyle(){const{placement:e}=this.props;switch(e){case"top":return{marginLeft:h,marginRight:h,paddingBottom:f};case"right":return{marginTop:h,marginBottom:h,paddingLeft:f};case"bottom":return{marginLeft:h,marginRight:h,paddingTop:f};case"left":return{marginTop:h,marginBottom:h,paddingRight:f};default:throw new Error(`Unknown placement: ${e}`)}}_renderArrow(){const{trimlinePoints:e,points:t,height:a,width:l}=this._calculateDimensionsFromPlacement(),{color:i,show:d}=this.props;return d?b("svg",{className:y.css(q.arrow),style:this._getArrowStyle(),width:l,height:a,"aria-hidden":!0,children:[this._maybeRenderDropshadow(t),n("polyline",{fill:c[i],stroke:c[i],points:t.join(" ")}),n("polyline",{fill:c[i],points:t.join(" "),stroke:c.offBlack16}),n("polyline",{stroke:c[i],points:e.join(" ")})]}):n(V,{size:a})}render(){const{offset:e,placement:t,updateRef:a}=this.props;return n(g,{style:[q.tailContainer,{...e},this._getContainerStyle()],"data-placement":t,ref:a,children:this._renderArrow()})}}R.defaultProps={color:"white",show:!0};const f=u.xSmall_8,h=u.xSmall_8,r=u.large_24,o=u.small_12,q=y.StyleSheet.create({tailContainer:{position:"relative",pointerEvents:"none"},arrow:{overflow:"visible"}});try{tooltiptail.displayName="tooltiptail",tooltiptail.__docgenInfo={description:"",displayName:"tooltiptail",props:{color:{defaultValue:{value:"white"},description:`Whether we should use the default white background color or switch to a
different bg color.

NOTE: Added to support custom popovers
@ignore`,name:"color",required:!1,type:{name:"enum",value:[{value:'"blue"'},{value:'"purple"'},{value:'"green"'},{value:'"gold"'},{value:'"red"'},{value:'"offBlack"'},{value:'"offBlack64"'},{value:'"offBlack50"'},{value:'"offBlack32"'},{value:'"offBlack16"'},{value:'"offBlack8"'},{value:'"offWhite"'},{value:'"white"'},{value:'"white64"'},{value:'"white50"'},{value:'"darkBlue"'},{value:'"teal"'},{value:'"lightBlue"'},{value:'"pink"'}]}},offset:{defaultValue:null,description:"The offset of the tail indicating where it should be positioned.",name:"offset",required:!1,type:{name:"Offset"}},placement:{defaultValue:null,description:"The placement of the tail with respect to the tooltip anchor.",name:"placement",required:!0,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"auto"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},updateRef:{defaultValue:null,description:"A callback to update the ref of the tail element.",name:"updateRef",required:!1,type:{name:"getRefFn"}},show:{defaultValue:{value:"true"},description:`When true, the tail is shown; otherwise, it is not but it still takes
space in the layout.`,name:"show",required:!1,type:{name:"boolean"}}}}}catch{}class U extends p.Component{constructor(){super(...arguments),this.state={active:!1},this.handleMouseEnter=()=>{this._setActiveState(!0)},this.handleMouseLeave=()=>{this.props.onActiveChanged(!1)}}_setActiveState(e){this.setState({active:e}),this.props.onActiveChanged(e)}render(){const{id:e,children:t,updateBubbleRef:a,placement:l,isReferenceHidden:i,style:d,updateTailRef:m,tailOffset:S}=this.props;return b(g,{id:e,role:"tooltip","data-placement":l,onMouseEnter:this.handleMouseEnter,onMouseLeave:this.handleMouseLeave,ref:a,style:[i&&v.hide,v.bubble,v[`content-${l}`],d],children:[n(g,{style:v.content,children:t}),n(R,{updateRef:m,placement:l,offset:S})]})}}const v=y.StyleSheet.create({bubble:{position:"absolute"},hide:{pointerEvents:"none",opacity:0,backgroundColor:"transparent",color:"transparent"},"content-top":{flexDirection:"column"},"content-right":{flexDirection:"row-reverse"},"content-bottom":{flexDirection:"column-reverse"},"content-left":{flexDirection:"row"},content:{maxWidth:472,borderRadius:u.xxxSmall_4,border:`solid 1px ${c.offBlack16}`,backgroundColor:c.white,boxShadow:`0 ${u.xSmall_8}px ${u.xSmall_8}px 0 ${c.offBlack8}`,justifyContent:"center"}});try{tooltipbubble.displayName="tooltipbubble",tooltipbubble.__docgenInfo={description:"",displayName:"tooltipbubble",props:{id:{defaultValue:null,description:"The unique identifier for this component.",name:"id",required:!0,type:{name:"string"}},children:{defaultValue:null,description:"The `TooltipContent` element that will be rendered in the bubble.",name:"children",required:!1,type:{name:"ReactElement<Props, string | JSXElementConstructor<any>> & ReactNode"}},onActiveChanged:{defaultValue:null,description:"",name:"onActiveChanged",required:!0,type:{name:"(active: boolean) => unknown"}},placement:{defaultValue:null,description:"The placement of the bubble with respect to the anchor.",name:"placement",required:!0,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"auto"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},isReferenceHidden:{defaultValue:null,description:"Whether the bubble is out of bounds or not.",name:"isReferenceHidden",required:!1,type:{name:"boolean | null"}},updateBubbleRef:{defaultValue:null,description:"A callback for updating the ref of the bubble itself.",name:"updateBubbleRef",required:!1,type:{name:"getRefFn"}},updateTailRef:{defaultValue:null,description:"A callback for updating the ref of the bubble's tail.",name:"updateTailRef",required:!1,type:{name:"getRefFn"}},tailOffset:{defaultValue:null,description:"Where the tail is to be rendered.",name:"tailOffset",required:!1,type:{name:"Offset"}},style:{defaultValue:null,description:"Additional styles to be applied by the bubble.",name:"style",required:!1,type:{name:"any"}}}}}catch{}class j extends p.Component{_renderTitle(){const{title:e}=this.props;return e?typeof e=="string"?n($,{children:e}):e:null}_renderChildren(){const{children:e}=this.props;return typeof e=="string"?n(O,{children:e}):e}render(){const e=this._renderTitle(),t=this._renderChildren(),a=e?k.withTitle:k.withoutTitle;return b(g,{style:a,children:[e,e&&t&&n(V,{size:u.xxxSmall_4}),t]})}}const k=y.StyleSheet.create({withoutTitle:{padding:`10px ${u.medium_16}px`},withTitle:{padding:u.medium_16}});try{tooltipcontent.displayName="tooltipcontent",tooltipcontent.__docgenInfo={description:`This component is used to provide the content that is to be rendered in the
tooltip bubble.

### Usage

\`\`\`jsx
import {TooltipContent} from "@khanacademy/wonder-blocks-tooltip";

<TooltipContent title="Title text!">
 Some content in my tooltip.
</TooltipContent>
\`\`\``,displayName:"tooltipcontent",props:{title:{defaultValue:null,description:`The title for the tooltip content.
Optional.`,name:"title",required:!1,type:{name:'string | ReactElement<Pick<{ children?: ReactNode; style?: any; testId?: string; lang?: string; className?: string | undefined; htmlFor?: string | undefined; tabIndex?: number | undefined; id?: string | undefined; "data-modal-launcher-portal"?: boolean | undefined; "data-placement"?: string |...'}},children:{defaultValue:null,description:"The main content for a tooltip.",name:"children",required:!1,type:{name:'(string | ReactElement<Pick<{ children?: ReactNode; style?: any; testId?: string; lang?: string; className?: string | undefined; htmlFor?: string | undefined; tabIndex?: number | undefined; id?: string | undefined; "data-modal-launcher-portal"?: boolean | undefined; "data-placement"?: string ...'}}}}}catch{}class I{constructor(){this.updateRef=e=>{var t;if(e){const a=_.findDOMNode(e);a instanceof HTMLElement&&a!==this._lastRef&&(this._lastRef=a,(t=this._targetFn)==null||t.call(this,a))}},this.setCallback=e=>{if(this._targetFn!==e){if(e&&typeof e!="function")throw new Error("targetFn must be a function");this._targetFn=e||null,this._lastRef&&this._targetFn&&this._targetFn(this._lastRef)}}}}class W extends p.Component{constructor(){super(...arguments),this._bubbleRefTracker=new I,this._tailRefTracker=new I}_renderPositionedContent(e){const{children:t}=this.props,a=e.placement||this.props.placement;this._bubbleRefTracker.setCallback(e.ref),this._tailRefTracker.setCallback(e.arrowProps.ref);const l={placement:a,style:{top:e.style.top,left:e.style.left,bottom:e.style.bottom,right:e.style.right,position:e.style.position,transform:e.style.transform},updateBubbleRef:this._bubbleRefTracker.updateRef,tailOffset:{bottom:e.arrowProps.style.bottom,right:e.arrowProps.style.right,top:e.arrowProps.style.top,left:e.arrowProps.style.left,transform:e.arrowProps.style.transform},updateTailRef:this._tailRefTracker.updateRef,isReferenceHidden:e.isReferenceHidden};return t(l)}render(){const{anchorElement:e,placement:t}=this.props;return n(F,{referenceElement:e,strategy:"fixed",placement:t,modifiers:[{name:"preventOverflow",options:{rootBoundary:"viewport"}}],children:a=>this._renderPositionedContent(a)})}}try{tooltippopper.displayName="tooltippopper",tooltippopper.__docgenInfo={description:"",displayName:"tooltippopper",props:{children:{defaultValue:null,description:`This uses the children-as-a-function approach, mirroring react-popper's
implementation.

TODO(WB-624): figure out to only allow TooltipBubble and PopoverDialog`,name:"children",required:!1,type:{name:"((arg1: PopperElementProps) => ReactNode) & ReactNode"}},anchorElement:{defaultValue:null,description:`The element that anchors the tooltip bubble.
This is used to position the bubble.`,name:"anchorElement",required:!1,type:{name:"HTMLElement"}},placement:{defaultValue:null,description:"Where should the bubble try to go with respect to its anchor.",name:"placement",required:!0,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"auto"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}}}}}catch{}const T=class E extends p.Component{constructor(){super(...arguments),this.state={active:!1,activeBubble:!1}}static getDerivedStateFromProps(e,t){return{active:typeof e.opened=="boolean"?e.opened:t.active}}_updateAnchorElement(e){e&&e!==this.state.anchorElement&&this.setState({anchorElement:e})}_renderBubbleContent(){const{title:e,content:t}=this.props;return typeof t=="string"?n(j,{title:e,children:t}):e?p.cloneElement(t,{title:e}):t}_renderPopper(e){const{id:t}=this.props,a=e?e.get(E.ariaContentId):t;if(!a)throw new Error("Did not get an identifier factory nor a id prop");const{placement:l}=this.props;return n(W,{anchorElement:this.state.anchorElement,placement:l,children:i=>n(U,{id:a,style:i.style,tailOffset:i.tailOffset,isReferenceHidden:i.isReferenceHidden,placement:i.placement,updateTailRef:i.updateTailRef,updateBubbleRef:i.updateBubbleRef,onActiveChanged:d=>this.setState({activeBubble:d}),children:this._renderBubbleContent()})})}_getHost(){const{anchorElement:e}=this.state;return N(e)||document.body}_renderTooltipAnchor(e){const{children:t,forceAnchorFocusivity:a}=this.props,{active:l,activeBubble:i}=this.state,d=this._getHost();return b(p.Fragment,{children:[n(L,{forceAnchorFocusivity:a,anchorRef:m=>this._updateAnchorElement(m),onActiveChanged:m=>this.setState({active:m}),ids:e,children:t}),d&&(l||i)&&_.createPortal(this._renderPopper(e),d)]})}render(){const{id:e}=this.props;return e?this._renderTooltipAnchor():n(D,{scope:"tooltip",mockOnFirstRender:!0,children:t=>this._renderTooltipAnchor(t)})}};T.defaultProps={forceAnchorFocusivity:!0,placement:"top"};T.ariaContentId="aria-content";let te=T;try{tooltip.displayName="tooltip",tooltip.__docgenInfo={description:`Use a tooltip to help describe an on screen object.

Tooltips:
 - contain text
 - (optional) contain small graphic elements to complement the text
 - appear on hover or focus (for non-assistive tech keyboard users)
 - must have a tail that points to a parent object
 - DO NOT include actions

For more rich content see Popovers, for taking action on an object, see
Snackbars (proposed).

### Usage

\`\`\`jsx
import Tooltip from "@khanacademy/wonder-blocks-tooltip";

<Tooltip content="This is a text tooltip">
 Tooltip anchor
</Tooltip>
\`\`\``,displayName:"tooltip",props:{"aria-activedescendant":{defaultValue:null,description:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",name:"aria-activedescendant",required:!1,type:{name:"string"}},"aria-atomic":{defaultValue:null,description:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",name:"aria-atomic",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-autocomplete":{defaultValue:null,description:`Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.`,name:"aria-autocomplete",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"inline"'},{value:'"list"'},{value:'"both"'}]}},"aria-busy":{defaultValue:null,description:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",name:"aria-busy",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-checked":{defaultValue:null,description:`Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.
@see aria-pressed
@see aria-selected.`,name:"aria-checked",required:!1,type:{name:'boolean | "false" | "true" | "mixed"'}},"aria-colcount":{defaultValue:null,description:`Defines the total number of columns in a table, grid, or treegrid.
@see aria-colindex.`,name:"aria-colcount",required:!1,type:{name:"number"}},"aria-colindex":{defaultValue:null,description:`Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.
@see aria-colcount
@see aria-colspan.`,name:"aria-colindex",required:!1,type:{name:"number"}},"aria-colspan":{defaultValue:null,description:`Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.
@see aria-colindex
@see aria-rowspan.`,name:"aria-colspan",required:!1,type:{name:"number"}},"aria-controls":{defaultValue:null,description:`Identifies the element (or elements) whose contents or presence are controlled by the current element.
@see aria-owns.`,name:"aria-controls",required:!1,type:{name:"string"}},"aria-current":{defaultValue:null,description:"Indicates the element that represents the current item within a container or set of related elements.",name:"aria-current",required:!1,type:{name:'boolean | "false" | "true" | "page" | "step" | "location" | "date" | "time"'}},"aria-describedby":{defaultValue:null,description:`Identifies the element (or elements) that describes the object.
@see aria-labelledby`,name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:`Identifies the element that provides a detailed, extended description for the object.
@see aria-describedby.`,name:"aria-details",required:!1,type:{name:"string"}},"aria-disabled":{defaultValue:null,description:`Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.
@see aria-hidden
@see aria-readonly.`,name:"aria-disabled",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-dropeffect":{defaultValue:null,description:`Indicates what functions can be performed when a dragged object is released on the drop target.
@deprecated in ARIA 1.1`,name:"aria-dropeffect",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"copy"'},{value:'"execute"'},{value:'"link"'},{value:'"move"'},{value:'"popup"'}]}},"aria-errormessage":{defaultValue:null,description:`Identifies the element that provides an error message for the object.
@see aria-invalid
@see aria-describedby.`,name:"aria-errormessage",required:!1,type:{name:"string"}},"aria-expanded":{defaultValue:null,description:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",name:"aria-expanded",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-flowto":{defaultValue:null,description:`Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.`,name:"aria-flowto",required:!1,type:{name:"string"}},"aria-grabbed":{defaultValue:null,description:`Indicates an element's "grabbed" state in a drag-and-drop operation.
@deprecated in ARIA 1.1`,name:"aria-grabbed",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-haspopup":{defaultValue:null,description:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",name:"aria-haspopup",required:!1,type:{name:'boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" | "dialog"'}},"aria-hidden":{defaultValue:null,description:`Indicates whether the element is exposed to an accessibility API.
@see aria-disabled.`,name:"aria-hidden",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-invalid":{defaultValue:null,description:`Indicates the entered value does not conform to the format expected by the application.
@see aria-errormessage.`,name:"aria-invalid",required:!1,type:{name:'boolean | "false" | "true" | "grammar" | "spelling"'}},"aria-keyshortcuts":{defaultValue:null,description:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",name:"aria-keyshortcuts",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:`Defines a string value that labels the current element.
@see aria-labelledby.`,name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:`Identifies the element (or elements) that labels the current element.
@see aria-describedby.`,name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-level":{defaultValue:null,description:"Defines the hierarchical level of an element within a structure.",name:"aria-level",required:!1,type:{name:"number"}},"aria-live":{defaultValue:null,description:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",name:"aria-live",required:!1,type:{name:"enum",value:[{value:'"off"'},{value:'"assertive"'},{value:'"polite"'}]}},"aria-modal":{defaultValue:null,description:"Indicates whether an element is modal when displayed.",name:"aria-modal",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-multiline":{defaultValue:null,description:"Indicates whether a text box accepts multiple lines of input or only a single line.",name:"aria-multiline",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-multiselectable":{defaultValue:null,description:"Indicates that the user may select more than one item from the current selectable descendants.",name:"aria-multiselectable",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-orientation":{defaultValue:null,description:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",name:"aria-orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},"aria-owns":{defaultValue:null,description:`Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.
@see aria-controls.`,name:"aria-owns",required:!1,type:{name:"string"}},"aria-placeholder":{defaultValue:null,description:`Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.`,name:"aria-placeholder",required:!1,type:{name:"string"}},"aria-posinset":{defaultValue:null,description:`Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.
@see aria-setsize.`,name:"aria-posinset",required:!1,type:{name:"number"}},"aria-pressed":{defaultValue:null,description:`Indicates the current "pressed" state of toggle buttons.
@see aria-checked
@see aria-selected.`,name:"aria-pressed",required:!1,type:{name:'boolean | "false" | "true" | "mixed"'}},"aria-readonly":{defaultValue:null,description:`Indicates that the element is not editable, but is otherwise operable.
@see aria-disabled.`,name:"aria-readonly",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-relevant":{defaultValue:null,description:`Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.
@see aria-atomic.`,name:"aria-relevant",required:!1,type:{name:"enum",value:[{value:'"additions"'},{value:'"additions removals"'},{value:'"additions text"'},{value:'"all"'},{value:'"removals"'},{value:'"removals additions"'},{value:'"removals text"'},{value:'"text"'},{value:'"text additions"'},{value:'"text removals"'}]}},"aria-required":{defaultValue:null,description:"Indicates that user input is required on the element before a form may be submitted.",name:"aria-required",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-roledescription":{defaultValue:null,description:"Defines a human-readable, author-localized description for the role of an element.",name:"aria-roledescription",required:!1,type:{name:"string"}},"aria-rowcount":{defaultValue:null,description:`Defines the total number of rows in a table, grid, or treegrid.
@see aria-rowindex.`,name:"aria-rowcount",required:!1,type:{name:"number"}},"aria-rowindex":{defaultValue:null,description:`Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.
@see aria-rowcount
@see aria-rowspan.`,name:"aria-rowindex",required:!1,type:{name:"number"}},"aria-rowspan":{defaultValue:null,description:`Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.
@see aria-rowindex
@see aria-colspan.`,name:"aria-rowspan",required:!1,type:{name:"number"}},"aria-selected":{defaultValue:null,description:`Indicates the current "selected" state of various widgets.
@see aria-checked
@see aria-pressed.`,name:"aria-selected",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-setsize":{defaultValue:null,description:`Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.
@see aria-posinset.`,name:"aria-setsize",required:!1,type:{name:"number"}},"aria-sort":{defaultValue:null,description:"Indicates if items in a table or grid are sorted in ascending or descending order.",name:"aria-sort",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"ascending"'},{value:'"descending"'},{value:'"other"'}]}},"aria-valuemax":{defaultValue:null,description:"Defines the maximum allowed value for a range widget.",name:"aria-valuemax",required:!1,type:{name:"number"}},"aria-valuemin":{defaultValue:null,description:"Defines the minimum allowed value for a range widget.",name:"aria-valuemin",required:!1,type:{name:"number"}},"aria-valuenow":{defaultValue:null,description:`Defines the current value for a range widget.
@see aria-valuetext.`,name:"aria-valuenow",required:!1,type:{name:"number"}},"aria-valuetext":{defaultValue:null,description:"Defines the human readable text alternative of aria-valuenow for a range widget.",name:"aria-valuetext",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"",name:"role",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"list"'},{value:'"link"'},{value:'"menu"'},{value:'"listbox"'},{value:'"tree"'},{value:'"grid"'},{value:'"dialog"'},{value:'"alert"'},{value:'"alertdialog"'},{value:'"application"'},{value:'"article"'},{value:'"banner"'},{value:'"button"'},{value:'"cell"'},{value:'"checkbox"'},{value:'"columnheader"'},{value:'"combobox"'},{value:'"complementary"'},{value:'"contentinfo"'},{value:'"definition"'},{value:'"directory"'},{value:'"document"'},{value:'"feed"'},{value:'"figure"'},{value:'"form"'},{value:'"gridcell"'},{value:'"group"'},{value:'"heading"'},{value:'"img"'},{value:'"listitem"'},{value:'"log"'},{value:'"main"'},{value:'"marquee"'},{value:'"math"'},{value:'"menubar"'},{value:'"menuitem"'},{value:'"menuitemcheckbox"'},{value:'"menuitemradio"'},{value:'"navigation"'},{value:'"note"'},{value:'"option"'},{value:'"presentation"'},{value:'"progressbar"'},{value:'"radio"'},{value:'"radiogroup"'},{value:'"region"'},{value:'"row"'},{value:'"rowgroup"'},{value:'"rowheader"'},{value:'"scrollbar"'},{value:'"search"'},{value:'"searchbox"'},{value:'"separator"'},{value:'"slider"'},{value:'"spinbutton"'},{value:'"status"'},{value:'"switch"'},{value:'"tab"'},{value:'"table"'},{value:'"tablist"'},{value:'"tabpanel"'},{value:'"term"'},{value:'"textbox"'},{value:'"timer"'},{value:'"toolbar"'},{value:'"tooltip"'},{value:'"treegrid"'},{value:'"treeitem"'}]}},children:{defaultValue:null,description:`The content for anchoring the tooltip.
This component will be used to position the tooltip.`,name:"children",required:!1,type:{name:"(string | ReactElement<any, string | JSXElementConstructor<any>>) & ReactNode"}},title:{defaultValue:null,description:`The title of the tooltip.
Optional.`,name:"title",required:!1,type:{name:'string | ReactElement<Pick<{ children?: ReactNode; style?: any; testId?: string; lang?: string; className?: string | undefined; htmlFor?: string | undefined; tabIndex?: number | undefined; id?: string | undefined; "data-modal-launcher-portal"?: boolean | undefined; "data-placement"?: string |...'}},content:{defaultValue:null,description:"The content to render in the tooltip.",name:"content",required:!0,type:{name:"string | ReactElement<Props, string | JSXElementConstructor<any>>"}},id:{defaultValue:null,description:`The unique identifier to give to the tooltip. Provide this in cases where
you want to override the default accessibility solution. This identifier
will be applied to the tooltip bubble content.

By providing this identifier, the children that this tooltip anchors to
will not be automatically given the aria-desribedby attribute. Instead,
the accessibility solution is the responsibility of the caller.

If this is not provided, the aria-describedby attribute will be added
to the children with a unique identifier pointing to the tooltip bubble
content.`,name:"id",required:!1,type:{name:"string"}},forceAnchorFocusivity:{defaultValue:{value:"true"},description:`When true, if a tabindex attribute is not already present on the element
wrapped by the anchor, the element will be given tabindex=0 to make it
keyboard focusable; otherwise, does not attempt to change the ability to
focus the anchor element.

Defaults to true.

One might set this to false in circumstances where the wrapped component
already can receive focus or contains an element that can.
Use good judgement when overriding this value, the tooltip content should
be accessible via keyboard in all circumstances where the tooltip would
appear using the mouse, so verify those use-cases.

Also, note that the aria-describedby attribute is attached to the root
anchor element, so you may need to implement an additional accessibility
solution when overriding anchor focusivity.`,name:"forceAnchorFocusivity",required:!1,type:{name:"boolean"}},placement:{defaultValue:{value:"top"},description:`Where the tooltip should appear in relation to the anchor element.
Defaults to "top".`,name:"placement",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"bottom"'},{value:'"right"'},{value:'"left"'},{value:'"auto"'},{value:'"auto-start"'},{value:'"auto-end"'},{value:'"top-start"'},{value:'"top-end"'},{value:'"bottom-start"'},{value:'"bottom-end"'},{value:'"right-start"'},{value:'"right-end"'},{value:'"left-start"'},{value:'"left-end"'}]}},opened:{defaultValue:null,description:`Renders the tooltip when true, renders nothing when false.

Using this prop makes the component behave as a controlled component. The
parent is responsible for managing the opening/closing of the tooltip
when using this prop.`,name:"opened",required:!1,type:{name:"boolean"}},testId:{defaultValue:null,description:"Test ID used for e2e testing.",name:"testId",required:!1,type:{name:"string"}}}}}catch{}export{te as T,j as a,R as b,W as c};
//# sourceMappingURL=tooltip-f80a1c8a.js.map
