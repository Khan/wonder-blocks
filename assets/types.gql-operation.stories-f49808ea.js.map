{"version":3,"file":"types.gql-operation.stories-f49808ea.js","sources":["../../__docs__/wonder-blocks-data/types.gql-operation.stories.mdx"],"sourcesContent":["import {Meta} from \"@storybook/blocks\";\n\n<Meta\n    title=\"Data / Types / GqlOperation<>\"\n    parameters={{\n        chromatic: {\n            disableSnapshot: true,\n        },\n    }}\n/>\n\n# GqlOperation&lt;&gt;\n\n```ts\ntype GqlOperation<\n    TData,\n    TVariables: {...} = Empty,\n> = {\n    type: GqlOperationType,\n    id: string,\n    [key: string]: mixed,\n    ...\n};\n```\n\nThe `GqlOperation<>` type provides the Wonder Blocks Data definition of a GraphQL query or mutation. It has two required fields:\n\n-   `type`: The type of operation. It can be either `\"query\"` or `\"mutation\"`.\n-   `id`: The unique identifier of the operation.\n\nUnlike some GraphQL clients, the definition of the operation (the document node, for example) is not required by the Wonder Blocks Data implementation. If a specific use requires that information, the calling code is able to provide it.\n\nConsider the following GraphQL query (using `graphql-tag`):\n\n```ts\nconst MyQuery = gql`\n    query myQuery {\n        user {\n            id\n            name\n        }\n    }\n`;\n```\n\nRather than using the full `DocumentNode` at runtime, one could envisage a build step that converts it to a `GqlOperation<>` at compile time by parsing the `DocumentNode` to determine the operation type and extract the name of the operation. If the actual definition is needed for sending to the server in the request, this can be obtained from `graphql/language/printer`. This would then reduce the dependencies needed to perform GraphQL operations at runtime.\n\nThe resulting `GqlOperation<>` would look like this:\n\n```ts\n{\n    type: \"query\",\n    id: \"myQuery\",\n}\n```\n\nOr, if say, the query definition were needed (for example, Apollo will send requests with the `query` field):\n\n```ts\n{\n    type: \"query\",\n    id: \"myQuery\",\n    query: \"query myQuery { user { id name } }\",\n}\n```\n\nSee the section on [GraphQL](/docs/data-graphql--page) for more information.\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","MDXContent","MDXLayout","__page","componentMeta","__namedExportsOrder"],"mappings":"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"}