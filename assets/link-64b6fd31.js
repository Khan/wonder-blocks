import{a as o,j,F as K}from"./jsx-runtime-309e447d.js";import{r as _}from"./index-9f32f44c.js";import{L as z,c as W,i as B,g as P}from"./clickable-8a7f284d.js";import{a as U,l as A}from"./render-state-root-891c0d56.js";import{S as R,m as x,f as E,C as F}from"./index-f641b98f.js";import{I as S}from"./icon-a4f17d53.js";const H=U("a"),$=U(z),T=_.forwardRef((s,t)=>{const e=i=>{const{children:u,skipClientNav:a,focused:c,hovered:b,href:n,inline:d=!1,kind:p="primary",light:f=!1,visitable:h=!1,pressed:m,style:g,testId:v,waiting:I,target:V,startIcon:r,endIcon:y,...w}=s,l=G(d,p,f,h),k=d?l.restingInline:l.resting,N=[Y.shared,k,m&&l.active,!m&&b&&l.hover,!m&&c&&l.focus],C={"data-test-id":v,style:[N,g],target:V,...w},M=new URL(n,window.location.origin).origin!==window.location.origin,O=o(S,{icon:{small:"M14 6.5C14 6.63261 13.9473 6.75979 13.8536 6.85355C13.7598 6.94732 13.6326 7 13.5 7C13.3674 7 13.2402 6.94732 13.1464 6.85355C13.0527 6.75979 13 6.63261 13 6.5V3.7075L8.85437 7.85375C8.76055 7.94757 8.63331 8.00028 8.50062 8.00028C8.36794 8.00028 8.2407 7.94757 8.14688 7.85375C8.05306 7.75993 8.00035 7.63268 8.00035 7.5C8.00035 7.36732 8.05306 7.24007 8.14688 7.14625L12.2925 3H9.5C9.36739 3 9.24021 2.94732 9.14645 2.85355C9.05268 2.75979 9 2.63261 9 2.5C9 2.36739 9.05268 2.24021 9.14645 2.14645C9.24021 2.05268 9.36739 2 9.5 2H13.5C13.6326 2 13.7598 2.05268 13.8536 2.14645C13.9473 2.24021 14 2.36739 14 2.5V6.5ZM11.5 8C11.3674 8 11.2402 8.05268 11.1464 8.14645C11.0527 8.24021 11 8.36739 11 8.5V13H3V5H7.5C7.63261 5 7.75979 4.94732 7.85355 4.85355C7.94732 4.75979 8 4.63261 8 4.5C8 4.36739 7.94732 4.24021 7.85355 4.14645C7.75979 4.05268 7.63261 4 7.5 4H3C2.73478 4 2.48043 4.10536 2.29289 4.29289C2.10536 4.48043 2 4.73478 2 5V13C2 13.2652 2.10536 13.5196 2.29289 13.7071C2.48043 13.8946 2.73478 14 3 14H11C11.2652 14 11.5196 13.8946 11.7071 13.7071C11.8946 13.5196 12 13.2652 12 13V8.5C12 8.36739 11.9473 8.24021 11.8536 8.14645C11.7598 8.05268 11.6326 8 11.5 8Z"},size:"small",style:[q.endIcon,q.centered],testId:"external-icon"}),L=j(K,{children:[r&&o(S,{icon:r,size:"small",style:[q.startIcon,q.centered],testId:"start-icon","aria-hidden":"true"}),u,y?o(S,{icon:y,size:"small",style:[q.endIcon,q.centered],testId:"end-icon","aria-hidden":"true"}):M&&V==="_blank"&&O]});return i&&!a&&B(n)?o($,{...C,to:n,ref:t,children:L}):o(H,{...C,href:n,ref:t,children:L})};return o(W.Consumer,{children:i=>e(i)})}),D={},q=A.StyleSheet.create({startIcon:{marginInlineEnd:R.xxxSmall_4},endIcon:{marginInlineStart:R.xxxSmall_4},centered:{verticalAlign:"-10%"}}),Y=A.StyleSheet.create({shared:{cursor:"pointer",textDecoration:"none",outline:"none",alignItems:"center"}}),G=(s,t,e,i)=>{const u=`${t}-${s.toString()}-${e.toString()}-${i.toString()}`;if(D[u])return D[u];if(t==="secondary"&&e)throw new Error("Secondary Light links are not supported");if(i&&t!=="primary")throw new Error("Only primary link is visitable");const{blue:a,pink:c,purple:b,white:n,offBlack:d,offBlack32:p,offBlack64:f}=F,h=x(E(d,.08),b),m=x(E(a,.32),n),g=x(E(n,.32),c),v=x(p,a),r=t==="primary"?e?n:a:s?d:f,l=t==="primary"?e?m:v:s?v:d,k=i?{":visited":{color:e?c:h}}:Object.freeze({}),N=i?{":visited":{color:e?g:x(p,h)}}:Object.freeze({}),C={resting:{color:r,...k},restingInline:{color:r,textDecoration:"underline currentcolor solid",textUnderlineOffset:2,...k},hover:{textDecoration:"underline currentcolor solid",color:r,...k},focus:{":focus-visible":{color:r,outline:`1px solid ${e?n:a}`,borderRadius:3,...k}},active:{color:l,textDecoration:"underline currentcolor solid",...N}};return D[u]=A.StyleSheet.create(C),D[u]};try{linkcore.displayName="linkcore",linkcore.__docgenInfo={description:"",displayName:"linkcore",props:{"aria-activedescendant":{defaultValue:null,description:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",name:"aria-activedescendant",required:!1,type:{name:"string"}},"aria-atomic":{defaultValue:null,description:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",name:"aria-atomic",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-autocomplete":{defaultValue:null,description:`Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.`,name:"aria-autocomplete",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"inline"'},{value:'"list"'},{value:'"both"'}]}},"aria-busy":{defaultValue:null,description:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",name:"aria-busy",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-checked":{defaultValue:null,description:`Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.
@see aria-pressed
@see aria-selected.`,name:"aria-checked",required:!1,type:{name:'boolean | "false" | "true" | "mixed"'}},"aria-colcount":{defaultValue:null,description:`Defines the total number of columns in a table, grid, or treegrid.
@see aria-colindex.`,name:"aria-colcount",required:!1,type:{name:"number"}},"aria-colindex":{defaultValue:null,description:`Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.
@see aria-colcount
@see aria-colspan.`,name:"aria-colindex",required:!1,type:{name:"number"}},"aria-colspan":{defaultValue:null,description:`Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.
@see aria-colindex
@see aria-rowspan.`,name:"aria-colspan",required:!1,type:{name:"number"}},"aria-controls":{defaultValue:null,description:`Identifies the element (or elements) whose contents or presence are controlled by the current element.
@see aria-owns.`,name:"aria-controls",required:!1,type:{name:"string"}},"aria-current":{defaultValue:null,description:"Indicates the element that represents the current item within a container or set of related elements.",name:"aria-current",required:!1,type:{name:'boolean | "false" | "true" | "page" | "step" | "location" | "date" | "time"'}},"aria-describedby":{defaultValue:null,description:`Identifies the element (or elements) that describes the object.
@see aria-labelledby`,name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:`Identifies the element that provides a detailed, extended description for the object.
@see aria-describedby.`,name:"aria-details",required:!1,type:{name:"string"}},"aria-disabled":{defaultValue:null,description:`Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.
@see aria-hidden
@see aria-readonly.`,name:"aria-disabled",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-dropeffect":{defaultValue:null,description:`Indicates what functions can be performed when a dragged object is released on the drop target.
@deprecated in ARIA 1.1`,name:"aria-dropeffect",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"copy"'},{value:'"execute"'},{value:'"link"'},{value:'"move"'},{value:'"popup"'}]}},"aria-errormessage":{defaultValue:null,description:`Identifies the element that provides an error message for the object.
@see aria-invalid
@see aria-describedby.`,name:"aria-errormessage",required:!1,type:{name:"string"}},"aria-expanded":{defaultValue:null,description:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",name:"aria-expanded",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-flowto":{defaultValue:null,description:`Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.`,name:"aria-flowto",required:!1,type:{name:"string"}},"aria-grabbed":{defaultValue:null,description:`Indicates an element's "grabbed" state in a drag-and-drop operation.
@deprecated in ARIA 1.1`,name:"aria-grabbed",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-haspopup":{defaultValue:null,description:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",name:"aria-haspopup",required:!1,type:{name:'boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" | "dialog"'}},"aria-hidden":{defaultValue:null,description:`Indicates whether the element is exposed to an accessibility API.
@see aria-disabled.`,name:"aria-hidden",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-invalid":{defaultValue:null,description:`Indicates the entered value does not conform to the format expected by the application.
@see aria-errormessage.`,name:"aria-invalid",required:!1,type:{name:'boolean | "false" | "true" | "grammar" | "spelling"'}},"aria-keyshortcuts":{defaultValue:null,description:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",name:"aria-keyshortcuts",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:`Defines a string value that labels the current element.
@see aria-labelledby.`,name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:`Identifies the element (or elements) that labels the current element.
@see aria-describedby.`,name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-level":{defaultValue:null,description:"Defines the hierarchical level of an element within a structure.",name:"aria-level",required:!1,type:{name:"number"}},"aria-live":{defaultValue:null,description:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",name:"aria-live",required:!1,type:{name:"enum",value:[{value:'"off"'},{value:'"assertive"'},{value:'"polite"'}]}},"aria-modal":{defaultValue:null,description:"Indicates whether an element is modal when displayed.",name:"aria-modal",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-multiline":{defaultValue:null,description:"Indicates whether a text box accepts multiple lines of input or only a single line.",name:"aria-multiline",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-multiselectable":{defaultValue:null,description:"Indicates that the user may select more than one item from the current selectable descendants.",name:"aria-multiselectable",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-orientation":{defaultValue:null,description:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",name:"aria-orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},"aria-owns":{defaultValue:null,description:`Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.
@see aria-controls.`,name:"aria-owns",required:!1,type:{name:"string"}},"aria-placeholder":{defaultValue:null,description:`Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.`,name:"aria-placeholder",required:!1,type:{name:"string"}},"aria-posinset":{defaultValue:null,description:`Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.
@see aria-setsize.`,name:"aria-posinset",required:!1,type:{name:"number"}},"aria-pressed":{defaultValue:null,description:`Indicates the current "pressed" state of toggle buttons.
@see aria-checked
@see aria-selected.`,name:"aria-pressed",required:!1,type:{name:'boolean | "false" | "true" | "mixed"'}},"aria-readonly":{defaultValue:null,description:`Indicates that the element is not editable, but is otherwise operable.
@see aria-disabled.`,name:"aria-readonly",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-relevant":{defaultValue:null,description:`Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.
@see aria-atomic.`,name:"aria-relevant",required:!1,type:{name:"enum",value:[{value:'"additions"'},{value:'"additions removals"'},{value:'"additions text"'},{value:'"all"'},{value:'"removals"'},{value:'"removals additions"'},{value:'"removals text"'},{value:'"text"'},{value:'"text additions"'},{value:'"text removals"'}]}},"aria-required":{defaultValue:null,description:"Indicates that user input is required on the element before a form may be submitted.",name:"aria-required",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-roledescription":{defaultValue:null,description:"Defines a human-readable, author-localized description for the role of an element.",name:"aria-roledescription",required:!1,type:{name:"string"}},"aria-rowcount":{defaultValue:null,description:`Defines the total number of rows in a table, grid, or treegrid.
@see aria-rowindex.`,name:"aria-rowcount",required:!1,type:{name:"number"}},"aria-rowindex":{defaultValue:null,description:`Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.
@see aria-rowcount
@see aria-rowspan.`,name:"aria-rowindex",required:!1,type:{name:"number"}},"aria-rowspan":{defaultValue:null,description:`Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.
@see aria-rowindex
@see aria-colspan.`,name:"aria-rowspan",required:!1,type:{name:"number"}},"aria-selected":{defaultValue:null,description:`Indicates the current "selected" state of various widgets.
@see aria-checked
@see aria-pressed.`,name:"aria-selected",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-setsize":{defaultValue:null,description:`Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.
@see aria-posinset.`,name:"aria-setsize",required:!1,type:{name:"number"}},"aria-sort":{defaultValue:null,description:"Indicates if items in a table or grid are sorted in ascending or descending order.",name:"aria-sort",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"ascending"'},{value:'"descending"'},{value:'"other"'}]}},"aria-valuemax":{defaultValue:null,description:"Defines the maximum allowed value for a range widget.",name:"aria-valuemax",required:!1,type:{name:"number"}},"aria-valuemin":{defaultValue:null,description:"Defines the minimum allowed value for a range widget.",name:"aria-valuemin",required:!1,type:{name:"number"}},"aria-valuenow":{defaultValue:null,description:`Defines the current value for a range widget.
@see aria-valuetext.`,name:"aria-valuenow",required:!1,type:{name:"number"}},"aria-valuetext":{defaultValue:null,description:"Defines the human readable text alternative of aria-valuenow for a range widget.",name:"aria-valuetext",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"",name:"role",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"list"'},{value:'"link"'},{value:'"menu"'},{value:'"listbox"'},{value:'"tree"'},{value:'"grid"'},{value:'"dialog"'},{value:'"alert"'},{value:'"alertdialog"'},{value:'"application"'},{value:'"article"'},{value:'"banner"'},{value:'"button"'},{value:'"cell"'},{value:'"checkbox"'},{value:'"columnheader"'},{value:'"combobox"'},{value:'"complementary"'},{value:'"contentinfo"'},{value:'"definition"'},{value:'"directory"'},{value:'"document"'},{value:'"feed"'},{value:'"figure"'},{value:'"form"'},{value:'"gridcell"'},{value:'"group"'},{value:'"heading"'},{value:'"img"'},{value:'"listitem"'},{value:'"log"'},{value:'"main"'},{value:'"marquee"'},{value:'"math"'},{value:'"menubar"'},{value:'"menuitem"'},{value:'"menuitemcheckbox"'},{value:'"menuitemradio"'},{value:'"navigation"'},{value:'"note"'},{value:'"option"'},{value:'"presentation"'},{value:'"progressbar"'},{value:'"radio"'},{value:'"radiogroup"'},{value:'"region"'},{value:'"row"'},{value:'"rowgroup"'},{value:'"rowheader"'},{value:'"scrollbar"'},{value:'"search"'},{value:'"searchbox"'},{value:'"separator"'},{value:'"slider"'},{value:'"spinbutton"'},{value:'"status"'},{value:'"switch"'},{value:'"tab"'},{value:'"table"'},{value:'"tablist"'},{value:'"tabpanel"'},{value:'"term"'},{value:'"textbox"'},{value:'"timer"'},{value:'"toolbar"'},{value:'"tooltip"'},{value:'"treegrid"'},{value:'"treeitem"'}]}},children:{defaultValue:null,description:"Text to appear on the link. It can be a plain text or a Typography element.",name:"children",required:!0,type:{name:'string | ReactElement<Pick<{ children?: ReactNode; style?: any; testId?: string | undefined; lang?: string | undefined; className?: string | undefined; htmlFor?: string | undefined; tabIndex?: number | undefined; id?: string | undefined; "data-modal-launcher-portal"?: boolean | undefined; "data-placement"?: string |...'}},href:{defaultValue:null,description:"URL to navigate to.",name:"href",required:!0,type:{name:"string"}},id:{defaultValue:null,description:"An optional id attribute.",name:"id",required:!1,type:{name:"string"}},inline:{defaultValue:null,description:`Indicates that this link is used within a body of text.
This styles the link with an underline to distinguish it
from surrounding text.`,name:"inline",required:!1,type:{name:"boolean"}},kind:{defaultValue:null,description:"Kind of Link. Note: Secondary light Links are not supported.",name:"kind",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'}]}},light:{defaultValue:null,description:"Whether the button is on a dark/colored background.",name:"light",required:!1,type:{name:"boolean"}},visitable:{defaultValue:null,description:`Whether the link should change color once it's visited.
secondary or primary (light) links are not allowed to be visitable.`,name:"visitable",required:!1,type:{name:"boolean"}},rel:{defaultValue:null,description:'Specifies the type of relationship between the current document and the\nlinked document. Should only be used when `href` is specified. This\ndefaults to "noopener noreferrer" when `target="_blank"`, but can be\noverridden by setting this prop to something else.',name:"rel",required:!1,type:{name:"string"}},tabIndex:{defaultValue:null,description:"Set the tabindex attribute on the rendered element.",name:"tabIndex",required:!1,type:{name:"number"}},testId:{defaultValue:null,description:"Test ID used for e2e testing.",name:"testId",required:!1,type:{name:"string"}},skipClientNav:{defaultValue:null,description:`Whether to avoid using client-side navigation.

If the URL passed to href is local to the client-side, e.g.
/math/algebra/eval-exprs, then it tries to use react-router-dom's Link
component which handles the client-side navigation. You can set
\`skipClientNav\` to true avoid using client-side nav entirely.

NOTE: All URLs containing a protocol are considered external, e.g.
https://khanacademy.org/math/algebra/eval-exprs will trigger a full
page reload.`,name:"skipClientNav",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"Custom styles.",name:"style",required:!1,type:{name:"any"}},className:{defaultValue:null,description:"Adds CSS classes to the Link.",name:"className",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:`Function to call when button is clicked.

This callback should be used for things like marking BigBingo
conversions. It should NOT be used to redirect to a different URL or to
prevent navigation via e.preventDefault(). The event passed to this
handler will have its preventDefault() and stopPropagation() methods
stubbed out.`,name:"onClick",required:!1,type:{name:"((e: SyntheticEvent<Element, Event>) => unknown) & ((e: SyntheticEvent<Element, Event>) => unknown)"}},safeWithNav:{defaultValue:null,description:`Run async code in the background while client-side navigating. If the
browser does a full page load navigation, the callback promise must be
settled before the navigation will occur. Errors are ignored so that
navigation is guaranteed to succeed.`,name:"safeWithNav",required:!1,type:{name:"(() => Promise<unknown>)"}},onKeyDown:{defaultValue:null,description:'Respond to raw "keydown" event.',name:"onKeyDown",required:!1,type:{name:"((e: KeyboardEvent<Element>) => unknown) & ((e: KeyboardEvent<Element>) => unknown)"}},onKeyUp:{defaultValue:null,description:'Respond to raw "keyup" event.',name:"onKeyUp",required:!1,type:{name:"((e: KeyboardEvent<Element>) => unknown) & ((e: KeyboardEvent<Element>) => unknown)"}},target:{defaultValue:null,description:`A target destination window for a link to open in.  We only support
"_blank" which opens the URL in a new tab.

TODO(WB-1262): only allow this prop when \`href\` is also set.t`,name:"target",required:!1,type:{name:"enum",value:[{value:'"_blank"'}]}},beforeNav:{defaultValue:null,description:`Run async code before navigating to the URL passed to \`href\`. If the
promise returned rejects then navigation will not occur.

If both safeWithNav and beforeNav are provided, beforeNav will be run
first and safeWithNav will only be run if beforeNav does not reject.

WARNING: Using this with \`target="_blank"\` will trigger built-in popup
blockers in Firefox and Safari.  This is because we do navigation
programmatically and \`beforeNav\` causes a delay which means that the
browser can't make a directly link between a user action and the
navigation.`,name:"beforeNav",required:!1,type:{name:"(() => Promise<unknown>)"}},title:{defaultValue:null,description:"An optional title attribute.",name:"title",required:!1,type:{name:"string"}},startIcon:{defaultValue:null,description:"An optional icon displayed before the link label.",name:"startIcon",required:!1,type:{name:"IconAsset"}},endIcon:{defaultValue:null,description:'An optional icon displayed after the link label.\nIf `target="_blank"` and `endIcon` is passed in, `endIcon` will override\nthe default `externalIcon`.',name:"endIcon",required:!1,type:{name:"IconAsset"}},onMouseEnter:{defaultValue:null,description:"",name:"onMouseEnter",required:!0,type:{name:"(e: MouseEvent<Element, MouseEvent>) => unknown"}},onMouseLeave:{defaultValue:null,description:"",name:"onMouseLeave",required:!0,type:{name:"() => unknown"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!0,type:{name:"() => unknown"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!0,type:{name:"(e: MouseEvent<Element, MouseEvent>) => unknown"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!0,type:{name:"() => unknown"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!0,type:{name:"() => unknown"}},onTouchCancel:{defaultValue:null,description:"",name:"onTouchCancel",required:!0,type:{name:"() => unknown"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!0,type:{name:"(e: FocusEvent<Element, Element>) => unknown"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!0,type:{name:"(e: FocusEvent<Element, Element>) => unknown"}},hovered:{defaultValue:null,description:`Whether the component is hovered.

See component documentation for more details.`,name:"hovered",required:!0,type:{name:"boolean"}},focused:{defaultValue:null,description:`Whether the component is hovered.

See component documentation for more details.`,name:"focused",required:!0,type:{name:"boolean"}},pressed:{defaultValue:null,description:`Whether the component is hovered.

See component documentation for more details.`,name:"pressed",required:!0,type:{name:"boolean"}},waiting:{defaultValue:null,description:`When we're waiting for beforeNav or safeWithNav to complete an async
action, this will be true.

NOTE: We only wait for safeWithNav to complete when doing a full page
load navigation.`,name:"waiting",required:!0,type:{name:"boolean"}}}}}catch{}const ie=_.forwardRef((s,t)=>{const{onClick:e,beforeNav:i=void 0,safeWithNav:u,href:a,skipClientNav:c,children:b,tabIndex:n,onKeyDown:d,onKeyUp:p,target:f=void 0,inline:h=!1,kind:m="primary",light:g=!1,visitable:v=!1,...I}=s,V=r=>{const y=P(a,c,r);return i?o(y,{disabled:!1,href:a,role:"link",onClick:e,beforeNav:i,safeWithNav:u,onKeyDown:d,onKeyUp:p,children:(w,{...l})=>o(T,{...I,...w,...l,skipClientNav:c,href:a,target:f,tabIndex:n,inline:h,kind:m,light:g,visitable:v,ref:t,children:b})}):o(y,{disabled:!1,href:a,role:"link",onClick:e,safeWithNav:u,target:f,onKeyDown:d,onKeyUp:p,children:(w,{...l})=>o(T,{...I,...w,...l,skipClientNav:c,href:a,target:f,tabIndex:n,inline:h,kind:m,light:g,visitable:v,ref:t,children:b})})};return o(W.Consumer,{children:r=>V(r)})});try{link.displayName="link",link.__docgenInfo={description:'Reusable link component.\n\nConsisting of a [`ClickableBehavior`](#clickablebehavior) surrounding a\n`LinkCore`. `ClickableBehavior` handles interactions and state changes.\n`LinkCore` is a stateless component which displays the different states\nthe `Link` can take.\n\n### Usage\n\n```jsx\n<Link\n    href="https://khanacademy.org/"\n>\n    Label\n</Link>\n```',displayName:"link",props:{"aria-activedescendant":{defaultValue:null,description:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",name:"aria-activedescendant",required:!1,type:{name:"string"}},"aria-atomic":{defaultValue:null,description:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",name:"aria-atomic",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-autocomplete":{defaultValue:null,description:`Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.`,name:"aria-autocomplete",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"inline"'},{value:'"list"'},{value:'"both"'}]}},"aria-busy":{defaultValue:null,description:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",name:"aria-busy",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-checked":{defaultValue:null,description:`Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.
@see aria-pressed
@see aria-selected.`,name:"aria-checked",required:!1,type:{name:'boolean | "false" | "true" | "mixed"'}},"aria-colcount":{defaultValue:null,description:`Defines the total number of columns in a table, grid, or treegrid.
@see aria-colindex.`,name:"aria-colcount",required:!1,type:{name:"number"}},"aria-colindex":{defaultValue:null,description:`Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.
@see aria-colcount
@see aria-colspan.`,name:"aria-colindex",required:!1,type:{name:"number"}},"aria-colspan":{defaultValue:null,description:`Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.
@see aria-colindex
@see aria-rowspan.`,name:"aria-colspan",required:!1,type:{name:"number"}},"aria-controls":{defaultValue:null,description:`Identifies the element (or elements) whose contents or presence are controlled by the current element.
@see aria-owns.`,name:"aria-controls",required:!1,type:{name:"string"}},"aria-current":{defaultValue:null,description:"Indicates the element that represents the current item within a container or set of related elements.",name:"aria-current",required:!1,type:{name:'boolean | "false" | "true" | "page" | "step" | "location" | "date" | "time"'}},"aria-describedby":{defaultValue:null,description:`Identifies the element (or elements) that describes the object.
@see aria-labelledby`,name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:`Identifies the element that provides a detailed, extended description for the object.
@see aria-describedby.`,name:"aria-details",required:!1,type:{name:"string"}},"aria-disabled":{defaultValue:null,description:`Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.
@see aria-hidden
@see aria-readonly.`,name:"aria-disabled",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-dropeffect":{defaultValue:null,description:`Indicates what functions can be performed when a dragged object is released on the drop target.
@deprecated in ARIA 1.1`,name:"aria-dropeffect",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"copy"'},{value:'"execute"'},{value:'"link"'},{value:'"move"'},{value:'"popup"'}]}},"aria-errormessage":{defaultValue:null,description:`Identifies the element that provides an error message for the object.
@see aria-invalid
@see aria-describedby.`,name:"aria-errormessage",required:!1,type:{name:"string"}},"aria-expanded":{defaultValue:null,description:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",name:"aria-expanded",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-flowto":{defaultValue:null,description:`Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.`,name:"aria-flowto",required:!1,type:{name:"string"}},"aria-grabbed":{defaultValue:null,description:`Indicates an element's "grabbed" state in a drag-and-drop operation.
@deprecated in ARIA 1.1`,name:"aria-grabbed",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-haspopup":{defaultValue:null,description:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",name:"aria-haspopup",required:!1,type:{name:'boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" | "dialog"'}},"aria-hidden":{defaultValue:null,description:`Indicates whether the element is exposed to an accessibility API.
@see aria-disabled.`,name:"aria-hidden",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-invalid":{defaultValue:null,description:`Indicates the entered value does not conform to the format expected by the application.
@see aria-errormessage.`,name:"aria-invalid",required:!1,type:{name:'boolean | "false" | "true" | "grammar" | "spelling"'}},"aria-keyshortcuts":{defaultValue:null,description:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",name:"aria-keyshortcuts",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:`Defines a string value that labels the current element.
@see aria-labelledby.`,name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:`Identifies the element (or elements) that labels the current element.
@see aria-describedby.`,name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-level":{defaultValue:null,description:"Defines the hierarchical level of an element within a structure.",name:"aria-level",required:!1,type:{name:"number"}},"aria-live":{defaultValue:null,description:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",name:"aria-live",required:!1,type:{name:"enum",value:[{value:'"off"'},{value:'"assertive"'},{value:'"polite"'}]}},"aria-modal":{defaultValue:null,description:"Indicates whether an element is modal when displayed.",name:"aria-modal",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-multiline":{defaultValue:null,description:"Indicates whether a text box accepts multiple lines of input or only a single line.",name:"aria-multiline",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-multiselectable":{defaultValue:null,description:"Indicates that the user may select more than one item from the current selectable descendants.",name:"aria-multiselectable",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-orientation":{defaultValue:null,description:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",name:"aria-orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},"aria-owns":{defaultValue:null,description:`Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.
@see aria-controls.`,name:"aria-owns",required:!1,type:{name:"string"}},"aria-placeholder":{defaultValue:null,description:`Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.`,name:"aria-placeholder",required:!1,type:{name:"string"}},"aria-posinset":{defaultValue:null,description:`Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.
@see aria-setsize.`,name:"aria-posinset",required:!1,type:{name:"number"}},"aria-pressed":{defaultValue:null,description:`Indicates the current "pressed" state of toggle buttons.
@see aria-checked
@see aria-selected.`,name:"aria-pressed",required:!1,type:{name:'boolean | "false" | "true" | "mixed"'}},"aria-readonly":{defaultValue:null,description:`Indicates that the element is not editable, but is otherwise operable.
@see aria-disabled.`,name:"aria-readonly",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-relevant":{defaultValue:null,description:`Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.
@see aria-atomic.`,name:"aria-relevant",required:!1,type:{name:"enum",value:[{value:'"additions"'},{value:'"additions removals"'},{value:'"additions text"'},{value:'"all"'},{value:'"removals"'},{value:'"removals additions"'},{value:'"removals text"'},{value:'"text"'},{value:'"text additions"'},{value:'"text removals"'}]}},"aria-required":{defaultValue:null,description:"Indicates that user input is required on the element before a form may be submitted.",name:"aria-required",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-roledescription":{defaultValue:null,description:"Defines a human-readable, author-localized description for the role of an element.",name:"aria-roledescription",required:!1,type:{name:"string"}},"aria-rowcount":{defaultValue:null,description:`Defines the total number of rows in a table, grid, or treegrid.
@see aria-rowindex.`,name:"aria-rowcount",required:!1,type:{name:"number"}},"aria-rowindex":{defaultValue:null,description:`Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.
@see aria-rowcount
@see aria-rowspan.`,name:"aria-rowindex",required:!1,type:{name:"number"}},"aria-rowspan":{defaultValue:null,description:`Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.
@see aria-rowindex
@see aria-colspan.`,name:"aria-rowspan",required:!1,type:{name:"number"}},"aria-selected":{defaultValue:null,description:`Indicates the current "selected" state of various widgets.
@see aria-checked
@see aria-pressed.`,name:"aria-selected",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-setsize":{defaultValue:null,description:`Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.
@see aria-posinset.`,name:"aria-setsize",required:!1,type:{name:"number"}},"aria-sort":{defaultValue:null,description:"Indicates if items in a table or grid are sorted in ascending or descending order.",name:"aria-sort",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"ascending"'},{value:'"descending"'},{value:'"other"'}]}},"aria-valuemax":{defaultValue:null,description:"Defines the maximum allowed value for a range widget.",name:"aria-valuemax",required:!1,type:{name:"number"}},"aria-valuemin":{defaultValue:null,description:"Defines the minimum allowed value for a range widget.",name:"aria-valuemin",required:!1,type:{name:"number"}},"aria-valuenow":{defaultValue:null,description:`Defines the current value for a range widget.
@see aria-valuetext.`,name:"aria-valuenow",required:!1,type:{name:"number"}},"aria-valuetext":{defaultValue:null,description:"Defines the human readable text alternative of aria-valuenow for a range widget.",name:"aria-valuetext",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"",name:"role",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"list"'},{value:'"link"'},{value:'"menu"'},{value:'"listbox"'},{value:'"tree"'},{value:'"grid"'},{value:'"dialog"'},{value:'"alert"'},{value:'"alertdialog"'},{value:'"application"'},{value:'"article"'},{value:'"banner"'},{value:'"button"'},{value:'"cell"'},{value:'"checkbox"'},{value:'"columnheader"'},{value:'"combobox"'},{value:'"complementary"'},{value:'"contentinfo"'},{value:'"definition"'},{value:'"directory"'},{value:'"document"'},{value:'"feed"'},{value:'"figure"'},{value:'"form"'},{value:'"gridcell"'},{value:'"group"'},{value:'"heading"'},{value:'"img"'},{value:'"listitem"'},{value:'"log"'},{value:'"main"'},{value:'"marquee"'},{value:'"math"'},{value:'"menubar"'},{value:'"menuitem"'},{value:'"menuitemcheckbox"'},{value:'"menuitemradio"'},{value:'"navigation"'},{value:'"note"'},{value:'"option"'},{value:'"presentation"'},{value:'"progressbar"'},{value:'"radio"'},{value:'"radiogroup"'},{value:'"region"'},{value:'"row"'},{value:'"rowgroup"'},{value:'"rowheader"'},{value:'"scrollbar"'},{value:'"search"'},{value:'"searchbox"'},{value:'"separator"'},{value:'"slider"'},{value:'"spinbutton"'},{value:'"status"'},{value:'"switch"'},{value:'"tab"'},{value:'"table"'},{value:'"tablist"'},{value:'"tabpanel"'},{value:'"term"'},{value:'"textbox"'},{value:'"timer"'},{value:'"toolbar"'},{value:'"tooltip"'},{value:'"treegrid"'},{value:'"treeitem"'}]}},children:{defaultValue:null,description:"Text to appear on the link. It can be a plain text or a Typography element.",name:"children",required:!0,type:{name:'string | ReactElement<Pick<{ children?: ReactNode; style?: any; testId?: string | undefined; lang?: string | undefined; className?: string | undefined; htmlFor?: string | undefined; tabIndex?: number | undefined; id?: string | undefined; "data-modal-launcher-portal"?: boolean | undefined; "data-placement"?: string |...'}},href:{defaultValue:null,description:"URL to navigate to.",name:"href",required:!0,type:{name:"string"}},id:{defaultValue:null,description:"An optional id attribute.",name:"id",required:!1,type:{name:"string"}},inline:{defaultValue:null,description:`Indicates that this link is used within a body of text.
This styles the link with an underline to distinguish it
from surrounding text.`,name:"inline",required:!1,type:{name:"boolean"}},kind:{defaultValue:null,description:"Kind of Link. Note: Secondary light Links are not supported.",name:"kind",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'}]}},light:{defaultValue:null,description:"Whether the button is on a dark/colored background.",name:"light",required:!1,type:{name:"boolean"}},visitable:{defaultValue:null,description:`Whether the link should change color once it's visited.
secondary or primary (light) links are not allowed to be visitable.`,name:"visitable",required:!1,type:{name:"boolean"}},rel:{defaultValue:null,description:'Specifies the type of relationship between the current document and the\nlinked document. Should only be used when `href` is specified. This\ndefaults to "noopener noreferrer" when `target="_blank"`, but can be\noverridden by setting this prop to something else.',name:"rel",required:!1,type:{name:"string"}},tabIndex:{defaultValue:null,description:"Set the tabindex attribute on the rendered element.",name:"tabIndex",required:!1,type:{name:"number"}},testId:{defaultValue:null,description:"Test ID used for e2e testing.",name:"testId",required:!1,type:{name:"string"}},skipClientNav:{defaultValue:null,description:`Whether to avoid using client-side navigation.

If the URL passed to href is local to the client-side, e.g.
/math/algebra/eval-exprs, then it tries to use react-router-dom's Link
component which handles the client-side navigation. You can set
\`skipClientNav\` to true avoid using client-side nav entirely.

NOTE: All URLs containing a protocol are considered external, e.g.
https://khanacademy.org/math/algebra/eval-exprs will trigger a full
page reload.`,name:"skipClientNav",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"Custom styles.",name:"style",required:!1,type:{name:"any"}},className:{defaultValue:null,description:"Adds CSS classes to the Link.",name:"className",required:!1,type:{name:"string"}},onClick:{defaultValue:null,description:`Function to call when button is clicked.

This callback should be used for things like marking BigBingo
conversions. It should NOT be used to redirect to a different URL or to
prevent navigation via e.preventDefault(). The event passed to this
handler will have its preventDefault() and stopPropagation() methods
stubbed out.`,name:"onClick",required:!1,type:{name:"((e: SyntheticEvent<Element, Event>) => unknown)"}},safeWithNav:{defaultValue:null,description:`Run async code in the background while client-side navigating. If the
browser does a full page load navigation, the callback promise must be
settled before the navigation will occur. Errors are ignored so that
navigation is guaranteed to succeed.`,name:"safeWithNav",required:!1,type:{name:"(() => Promise<unknown>)"}},onKeyDown:{defaultValue:null,description:'Respond to raw "keydown" event.',name:"onKeyDown",required:!1,type:{name:"((e: KeyboardEvent<Element>) => unknown)"}},onKeyUp:{defaultValue:null,description:'Respond to raw "keyup" event.',name:"onKeyUp",required:!1,type:{name:"((e: KeyboardEvent<Element>) => unknown)"}},target:{defaultValue:null,description:`A target destination window for a link to open in.  We only support
"_blank" which opens the URL in a new tab.

TODO(WB-1262): only allow this prop when \`href\` is also set.t`,name:"target",required:!1,type:{name:"enum",value:[{value:'"_blank"'}]}},beforeNav:{defaultValue:null,description:`Run async code before navigating to the URL passed to \`href\`. If the
promise returned rejects then navigation will not occur.

If both safeWithNav and beforeNav are provided, beforeNav will be run
first and safeWithNav will only be run if beforeNav does not reject.

WARNING: Using this with \`target="_blank"\` will trigger built-in popup
blockers in Firefox and Safari.  This is because we do navigation
programmatically and \`beforeNav\` causes a delay which means that the
browser can't make a directly link between a user action and the
navigation.`,name:"beforeNav",required:!1,type:{name:"(() => Promise<unknown>)"}},title:{defaultValue:null,description:"An optional title attribute.",name:"title",required:!1,type:{name:"string"}},startIcon:{defaultValue:null,description:"An optional icon displayed before the link label.",name:"startIcon",required:!1,type:{name:"IconAsset"}},endIcon:{defaultValue:null,description:'An optional icon displayed after the link label.\nIf `target="_blank"` and `endIcon` is passed in, `endIcon` will override\nthe default `externalIcon`.',name:"endIcon",required:!1,type:{name:"IconAsset"}}}}}catch{}export{ie as L};
//# sourceMappingURL=link-64b6fd31.js.map
