{"version":3,"file":"banner.stories-9d83987b.js","sources":["../../packages/wonder-blocks-banner/src/components/banner-icons.ts","../../packages/wonder-blocks-banner/src/components/banner.tsx","../../__docs__/wonder-blocks-banner/banner.argtypes.ts"],"sourcesContent":["// TODO(WB-1409): Use Phosphor icons instead of custom svgs. Also, use\n// Wonder Blocks Icon instead of img in the render function.\nimport {IconAsset} from \"@khanacademy/wonder-blocks-icon\";\n\nexport const info: IconAsset = {\n    medium: \"M12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4ZM2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12ZM10.25 11.25C10.25 10.6977 10.6977 10.25 11.25 10.25H12C12.5523 10.25 13 10.6977 13 11.25V15.5315C13.4313 15.6425 13.75 16.034 13.75 16.5C13.75 17.0523 13.3023 17.5 12.75 17.5H12C11.4477 17.5 11 17.0523 11 16.5V12.2185C10.5687 12.1075 10.25 11.716 10.25 11.25ZM12.9375 7.875C12.9375 8.49632 12.4338 9 11.8125 9C11.1912 9 10.6875 8.49632 10.6875 7.875C10.6875 7.25368 11.1912 6.75 11.8125 6.75C12.4338 6.75 12.9375 7.25368 12.9375 7.875Z\",\n};\n\nexport const success: IconAsset = {\n    medium: \"M4 12C4 7.58172 7.58172 4 12 4C16.4183 4 20 7.58172 20 12C20 16.4183 16.4183 20 12 20C7.58172 20 4 16.4183 4 12ZM12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2ZM9.75 10.125C9.75 10.7463 9.24632 11.25 8.625 11.25C8.00368 11.25 7.5 10.7463 7.5 10.125C7.5 9.50368 8.00368 9 8.625 9C9.24632 9 9.75 9.50368 9.75 10.125ZM15.375 11.25C15.9963 11.25 16.5 10.7463 16.5 10.125C16.5 9.50368 15.9963 9 15.375 9C14.7537 9 14.25 9.50368 14.25 10.125C14.25 10.7463 14.7537 11.25 15.375 11.25ZM8.96488 13.7479C8.68763 13.2703 8.07567 13.1078 7.59801 13.3851C7.12036 13.6623 6.9579 14.2743 7.23515 14.7519C7.71955 15.5865 8.41464 16.2791 9.25086 16.7606C10.0871 17.2421 11.0351 17.4956 12 17.4956C12.965 17.4956 13.913 17.2421 14.7492 16.7606C15.5854 16.2791 16.2805 15.5865 16.7649 14.7519C17.0421 14.2743 16.8797 13.6623 16.402 13.3851C15.9244 13.1078 15.3124 13.2703 15.0352 13.7479C14.7266 14.2795 14.2838 14.7207 13.7512 15.0274C13.2185 15.3341 12.6147 15.4956 12 15.4956C11.3854 15.4956 10.7815 15.3341 10.2489 15.0274C9.7162 14.7207 9.27344 14.2795 8.96488 13.7479Z\",\n};\n\nexport const warning: IconAsset = {\n    medium: \"M10.7505 2.33557C11.1301 2.11544 11.5612 1.99951 12 1.99951C12.4388 1.99951 12.8698 2.11544 13.2494 2.33557C13.6282 2.55524 13.9424 2.87089 14.1603 3.25068L14.1616 3.25305L22.4097 17.4997C22.6288 17.8791 22.7443 18.3094 22.7447 18.7475C22.7451 19.1856 22.6303 19.6161 22.412 19.9959C22.1936 20.3757 21.8792 20.6915 21.5004 20.9115C21.1216 21.1316 20.6916 21.2482 20.2535 21.2497L20.25 21.2497H3.74997L3.74645 21.2497C3.30835 21.2482 2.87835 21.1316 2.49953 20.9115C2.12071 20.6915 1.80636 20.3757 1.58798 19.9959C1.36961 19.6161 1.25486 19.1856 1.25525 18.7475C1.25564 18.3094 1.37114 17.8791 1.5902 17.4997L9.83829 3.25305L9.83965 3.25068C10.0576 2.87089 10.3717 2.55524 10.7505 2.33557ZM10.7062 3.74975L11.5716 4.25079L3.32224 18.4998C3.27857 18.5755 3.25533 18.6618 3.25525 18.7493C3.25517 18.8369 3.27812 18.923 3.3218 18.999C3.36547 19.075 3.42834 19.1381 3.50411 19.1821C3.57952 19.2259 3.66508 19.2492 3.75228 19.2497H20.2477C20.3349 19.2492 20.4204 19.2259 20.4958 19.1821C20.5716 19.1381 20.6345 19.075 20.6781 18.999C20.7218 18.923 20.7448 18.8369 20.7447 18.7493C20.7446 18.6619 20.7216 18.576 20.678 18.5003L12.4258 4.24645C12.3828 4.17143 12.3209 4.10907 12.2461 4.06571C12.1713 4.02235 12.0864 3.99951 12 3.99951C11.9135 3.99951 11.8286 4.02235 11.7538 4.06571C11.6791 4.10907 11.6171 4.17142 11.5741 4.24645L10.7062 3.74975ZM12 8.75C12.5523 8.75 13 9.19772 13 9.75V13.5C13 14.0523 12.5523 14.5 12 14.5C11.4477 14.5 11 14.0523 11 13.5V9.75C11 9.19772 11.4477 8.75 12 8.75ZM13.125 16.875C13.125 17.4963 12.6213 18 12 18C11.3787 18 10.875 17.4963 10.875 16.875C10.875 16.2537 11.3787 15.75 12 15.75C12.6213 15.75 13.125 16.2537 13.125 16.875Z\",\n};\n\nexport const critical: IconAsset = {\n    medium: \"M12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4ZM2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12ZM12 6.5C12.5523 6.5 13 6.94772 13 7.5V12.75C13 13.3023 12.5523 13.75 12 13.75C11.4477 13.75 11 13.3023 11 12.75V7.5C11 6.94772 11.4477 6.5 12 6.5ZM13.125 16.125C13.125 16.7463 12.6213 17.25 12 17.25C11.3787 17.25 10.875 16.7463 10.875 16.125C10.875 15.5037 11.3787 15 12 15C12.6213 15 13.125 15.5037 13.125 16.125Z\",\n};\n","import * as React from \"react\";\nimport {StyleSheet} from \"aphrodite\";\n\nimport Button from \"@khanacademy/wonder-blocks-button\";\nimport Color from \"@khanacademy/wonder-blocks-color\";\nimport {View} from \"@khanacademy/wonder-blocks-core\";\nimport Icon, {icons} from \"@khanacademy/wonder-blocks-icon\";\nimport IconButton from \"@khanacademy/wonder-blocks-icon-button\";\nimport Link from \"@khanacademy/wonder-blocks-link\";\nimport Spacing from \"@khanacademy/wonder-blocks-spacing\";\nimport {LabelSmall} from \"@khanacademy/wonder-blocks-typography\";\n\nimport * as bannerIcons from \"./banner-icons\";\n\ntype ActionTriggerBase = {\n    title: string;\n    ariaLabel?: string;\n};\n\ntype ActionTriggerWithButton = ActionTriggerBase & {\n    type: \"button\";\n    onClick: () => void;\n};\n\ntype ActionTriggerWithLink = ActionTriggerBase & {\n    type: \"link\";\n    href: string;\n    onClick?: () => void;\n};\n\ntype ActionTriggerCustom = {\n    type: \"custom\";\n    node: React.ReactNode;\n};\n\ntype ActionTrigger =\n    | ActionTriggerWithButton\n    | ActionTriggerWithLink\n    | ActionTriggerCustom;\n\ntype BannerKind =\n    /**\n     * Color blue, circle 'i' icon. This is the default.\n     */\n    | \"info\"\n    /**\n     * Color green, smiley icon\n     */\n    | \"success\"\n    /**\n     * Color gold, triangle exclamation-point icon\n     */\n    | \"warning\"\n    /**\n     * Color red, circle exclamation-point icon\n     */\n    | \"critical\";\n\ntype BannerLayout =\n    /**\n     * Renders a rounded rectangle, usually for when banner is used as an inset\n     * element on a screen (e.g., the SOT card) that appears to be floating.\n     */\n    | \"floating\"\n    /**\n     * Renders a full-width banner, with no rounded corners.\n     */\n    | \"full-width\";\n\ntype BannerValues = {\n    color: string;\n    role: \"status\" | \"alert\";\n    ariaLive?: \"assertive\" | \"polite\";\n};\n\ntype Props = {\n    /**\n     * Accessible label for the banner.\n     * This is read out before the other contents of the banner.\n     */\n    \"aria-label\"?: string;\n    /**\n     * Determines the color and icon of the banner.\n     */\n    kind?: BannerKind;\n    /**\n     * Determines the edge style of the Banner.\n     */\n    layout: BannerLayout;\n    /**\n     * Text on the banner (LabelSmall) or a node if you want something different.\n     */\n    text: string | React.ReactNode;\n    /**\n     * Links or tertiary Buttons that appear to the right of the text.\n     *\n     * The ActionTrigger must have either an onClick or an href field, or both.\n     */\n    actions?: Array<ActionTrigger>;\n    /**\n     * If present, dismiss button is on right side. If not, no button appears.\n     */\n    onDismiss?: () => void | null | undefined;\n    /**\n     * The accessible label for the dismiss button.\n     * Please pass in a translated string.\n     */\n    dismissAriaLabel?: string;\n    /**\n     * Test ID used for e2e testing.\n     */\n    testId?: string;\n};\n\nconst valuesForKind = (kind: BannerKind): BannerValues => {\n    switch (kind) {\n        case \"success\":\n            return {\n                color: Color.green,\n                role: \"status\",\n            };\n        case \"warning\":\n            return {\n                color: Color.gold,\n                role: \"alert\",\n                ariaLive: \"polite\",\n            };\n        case \"critical\":\n            return {\n                color: Color.red,\n                role: \"alert\",\n            };\n        default:\n            return {\n                color: Color.blue,\n                role: \"status\",\n            };\n    }\n};\n\n/**\n * Banner. A banner displays a prominent message and related optional actions.\n * It can be used as a way of informing the user of important changes.\n * Typically, it is displayed toward the top of the screen.\n *\n * There are two possible layouts for banners - floating and full-width.\n * The `floating` layout is intended to be used when there is whitespace\n * around the banner. The `full-width` layout is intended to be used when\n * the banner needs to be flush with surrounding elements.\n *\n * ### Usage\n * ```jsx\n * import Banner from \"@khanacademy/wonder-blocks-banner\";\n *\n * <Banner\n *     text=\"Here is some example text.\"\n *     kind=\"success\"\n *     layout=\"floating\"\n *     actions={[\n *         {title: \"Button 1\", onClick: () => {}},\n *         {title: \"Button 2\", onClick: () => {}},\n *     ]}\n *     onDismiss={() => {console.log(\"Has been dismissed.\")}}\n * />\n * ```\n */\nconst Banner = (props: Props): React.ReactElement => {\n    const {\n        actions,\n        // Suppressing lint on the next line because it's saying `aria-label`\n        // is missing in props validation when it's not.\n        // eslint-disable-next-line react/prop-types\n        \"aria-label\": ariaLabel,\n        dismissAriaLabel = \"Dismiss banner.\", // default prop\n        onDismiss,\n        kind = \"info\", // default prop\n        layout,\n        text,\n        testId,\n    } = props;\n\n    const renderActions = () => {\n        return actions?.filter(Boolean).map((action, i) => {\n            if (action.type === \"custom\") {\n                return (\n                    <View style={styles.action} key={`custom-action-${i}`}>\n                        {action.node}\n                    </View>\n                );\n            }\n\n            const handleClick = action.onClick;\n\n            if (action.type === \"link\") {\n                return (\n                    <View style={styles.action} key={action.title}>\n                        <Link\n                            kind=\"primary\"\n                            href={action.href}\n                            onClick={handleClick}\n                            aria-label={action.ariaLabel ?? action.title}\n                            style={styles.link}\n                        >\n                            {action.title}\n                        </Link>\n                    </View>\n                );\n            } else {\n                return (\n                    <View style={styles.action} key={action.title}>\n                        <Button\n                            kind=\"tertiary\"\n                            size=\"small\"\n                            aria-label={action.ariaLabel ?? action.title}\n                            onClick={handleClick}\n                        >\n                            {action.title}\n                        </Button>\n                    </View>\n                );\n            }\n        });\n    };\n\n    return (\n        <View\n            style={[\n                styles.containerOuter,\n                layout === \"floating\" && styles.floatingBorder,\n                {borderInlineStartColor: valuesForKind(kind).color},\n            ]}\n            role={valuesForKind(kind).role}\n            aria-label={ariaLabel}\n            aria-live={valuesForKind(kind).ariaLive}\n            testId={testId}\n        >\n            <View\n                style={[\n                    styles.backgroundColor,\n                    {backgroundColor: valuesForKind(kind).color},\n                ]}\n            />\n            <View style={styles.containerInner}>\n                <Icon\n                    icon={bannerIcons[kind]}\n                    size=\"medium\"\n                    style={styles.icon}\n                    aria-label={kind}\n                    testId=\"banner-kind-icon\"\n                />\n                <View style={styles.labelAndButtonsContainer}>\n                    <View style={styles.labelContainer}>\n                        <LabelSmall>{text}</LabelSmall>\n                    </View>\n                    {actions && (\n                        <View style={styles.actionsContainer}>\n                            {renderActions()}\n                        </View>\n                    )}\n                </View>\n                {onDismiss ? (\n                    <View style={styles.dismissContainer}>\n                        <IconButton\n                            icon={icons.dismiss}\n                            kind={\"tertiary\"}\n                            onClick={onDismiss}\n                            style={styles.dismiss}\n                            aria-label={dismissAriaLabel}\n                        />\n                    </View>\n                ) : null}\n            </View>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    backgroundColor: {\n        position: \"absolute\",\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        opacity: 0.08,\n    },\n    containerOuter: {\n        borderInlineStartWidth: Spacing.xxSmall_6,\n        width: \"100%\",\n        // Because of the background color's opacity value,\n        // the base color needs to be hard-coded as white for the\n        // intended pastel background color to show up correctly\n        // on dark backgrounds.\n        backgroundColor: Color.white,\n    },\n    containerInner: {\n        flexDirection: \"row\",\n        padding: Spacing.xSmall_8,\n    },\n    icon: {\n        marginTop: Spacing.xSmall_8,\n        marginBottom: Spacing.xSmall_8,\n        // The total distance from the icon to the edge is 16px. The\n        // vertical identifier is already 6px, and the padding on inner\n        // conatiner is 8px. So that leaves 2px.\n        marginInlineStart: Spacing.xxxxSmall_2,\n        marginInlineEnd: Spacing.xSmall_8,\n        alignSelf: \"flex-start\",\n        color: Color.offBlack64,\n    },\n    labelAndButtonsContainer: {\n        flex: 1,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n        flexWrap: \"wrap\",\n        justifyContent: \"space-between\",\n    },\n    labelContainer: {\n        flexShrink: 1,\n        margin: Spacing.xSmall_8,\n        textAlign: \"start\",\n        overflowWrap: \"break-word\",\n    },\n    actionsContainer: {\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        marginTop: Spacing.xSmall_8,\n        marginBottom: Spacing.xSmall_8,\n    },\n    action: {\n        marginLeft: Spacing.xSmall_8,\n        marginRight: Spacing.xSmall_8,\n        justifyContent: \"center\",\n        // Set the height to remove the padding from buttons\n        height: 18,\n    },\n    link: {\n        fontSize: 14,\n    },\n    dismiss: {\n        flexShrink: 1,\n    },\n    dismissContainer: {\n        height: 40,\n        width: 40,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginLeft: Spacing.xSmall_8,\n        marginRight: Spacing.xSmall_8,\n    },\n    floatingBorder: {\n        borderRadius: 4,\n        // Stop the square corners of the inner container from\n        // flowing out of the rounded corners of the outer container.\n        overflow: \"hidden\",\n    },\n});\n\nexport default Banner;\n","import type {InputType} from \"@storybook/csf\";\n\nimport * as React from \"react\";\n\nconst actionsMappings = {\n    none: null,\n    buttons: [\n        {title: \"Button 1\", onClick: () => {}},\n        {title: \"Button 2\", onClick: () => {}},\n    ],\n    links: [\n        {title: \"Link 1\", href: \"/\"},\n        {title: \"Link 2\", href: \"/\"},\n    ],\n    buttonAndLink: [\n        {title: \"Button\", onClick: () => {}},\n        {title: \"Link\", href: \"/\"},\n    ],\n    linkAndButton: [\n        {title: \"Link\", href: \"/\"},\n        {title: \"Button\", onClick: () => {}},\n    ],\n} as const;\n\nconst dismissMappings = {\n    none: null,\n    \"log on click\": () => {\n        // eslint-disable-next-line no-console\n        console.log(\"Dimiss button clicked!\");\n    },\n} as const;\n\nexport default {\n    kind: {\n        control: {type: \"select\"},\n        defaultValue: \"info\",\n        description: \"Determines the color and icon of the banner.\",\n        options: [\"info\", \"success\", \"warning\", \"critical\"],\n        table: {\n            type: {summary: `\"info\" | \"success\" | \"warning\" | \"critical\"`},\n            defaultValue: {summary: `\"info\"`},\n        },\n        type: {\n            name: \"enum\",\n            value: [\"info\", \"success\", \"warning\", \"critical\"],\n            required: false,\n        },\n    },\n    layout: {\n        control: {type: \"select\"},\n        description: \"Determines the edge style of the Banner.\",\n        options: [\"floating\", \"full-width\"],\n        table: {\n            type: {summary: `\"floating\" | \"full-width\"`},\n        },\n        type: {name: \"enum\", value: [\"floating\", \"full-width\"], required: true},\n    },\n    text: {\n        control: {type: \"text\"},\n        description:\n            \"Text on the banner (LabelSmall) or a node if you want something different.\",\n        table: {type: {summary: \"string | React.Node\"}},\n        type: {\n            name: \"union\",\n            value: [\n                {name: \"string\"},\n                {name: \"other\", value: \"React.ReactNode\"},\n            ],\n            required: true,\n        },\n    },\n    actions: {\n        control: {type: \"select\"},\n        description: `Links or tertiary Buttons that appear to the right of the\n            text.\\n\\nThe ActionTrigger must have either an onClick or an href\n            field, or both.`,\n        options: Object.keys(actionsMappings) as Array<React.ReactNode>,\n        mapping: actionsMappings,\n        table: {\n            type: {\n                summary: \"Array<ActionTrigger>\",\n                detail: \"type ActionTrigger = {|\\n\\ttitle: string,\\n\\tonClick: () => void | href: string,\\n\\tariaLabel?: string,\\n|}\",\n            },\n        },\n    },\n    onDismiss: {\n        control: {type: \"select\"},\n        description:\n            \"If present, dismiss button is on right side. If not, no button appears.\",\n        options: Object.keys(dismissMappings) as Array<React.ReactNode>,\n        mapping: dismissMappings,\n        table: {required: false},\n    },\n    dismissAriaLabel: {\n        control: {type: \"text\"},\n        description:\n            \"The accessible label for the dismiss button. Please pass in a translated string.\",\n        defaultValue: \"Dismiss banner.\",\n        table: {\n            type: {summary: \"string\"},\n            defaultValue: {summary: `\"Dismiss banner.\"`},\n        },\n        type: {name: \"string\", required: false},\n    },\n    \"aria-label\": {\n        control: {type: \"text\"},\n        description:\n            \"Accessible label for the banner. This is read out before the other contents of the banner.\",\n        table: {\n            type: {summary: \"string\"},\n        },\n        type: {name: \"string\", required: false},\n    },\n} satisfies Record<string, InputType>;\n"],"names":["info","success","warning","critical","valuesForKind","kind","Color","Banner","props","actions","ariaLabel","dismissAriaLabel","onDismiss","layout","text","testId","renderActions","action","i","jsx","View","styles","handleClick","Link","Button","jsxs","Icon","bannerIcons","LabelSmall","IconButton","icons.dismiss","StyleSheet","Spacing","Banner$1","actionsMappings","dismissMappings","BannerArgTypes"],"mappings":"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"}