import{a as e,j as pe,F as he}from"./jsx-runtime-309e447d.js";import{V as ue,l as Ce}from"./render-state-root-891c0d56.js";import"./index-9f32f44c.js";import{S as l,C as g}from"./index-f641b98f.js";import{S as A}from"./strut-c6011196.js";import{I as t}from"./icon-a4f17d53.js";import{a as f,e as s,f as ge}from"./icon-assets-a0b49981.js";import{C as o,a as ye,p as b,A as y}from"./compact-cell.argtypes-ad65c4dc.js";import{C as fe}from"./component-info-cedbe096.js";import"./_commonjsHelpers-de833af9.js";import"./footnote-761d2bcc.js";import"./clickable-8a7f284d.js";import"./inheritsLoose-9eefaa95.js";import"./index-8d47fad6.js";import"./button-b2794e32.js";const Me={title:"Cell / CompactCell",component:o,argTypes:ye,parameters:{componentSubtitle:e(fe,{name:b.name,version:b.version}),design:{type:"figma",url:"https://www.figma.com/file/VbVu3h2BpBhH80niq101MHHE/%F0%9F%92%A0-Main-Components?type=design&node-id=4337-2487&mode=design&t=h4nok7uwaPYDOkz6-4"},docs:{description:{component:null},source:{excludeDecorators:!0}}},decorators:[de=>e(ue,{style:we.example,children:de()})]},n={args:{title:"Basic Cell",rightAccessory:e(t,{icon:f})},parameters:{chromatic:{disableSnapshot:!0}}},i=()=>e(o,{title:"Intro to rational & irrational numbers",leftAccessory:e(t,{icon:s,size:"medium"})});i.parameters={docs:{description:{story:"You can create a minimal cell that only uses a title and an Icon that can be placed on the left or right (or both). In this case, we will place the icon on the left to show you how cell is flexible. Note that you can pass any of the existing WB components such as `Icon`, `IconButton`, `Tooltip`, etc."}}};const r={render:()=>e(o,{title:"Intro to rational & irrational numbers",rightAccessory:e(t,{icon:f,size:"medium"})})};r.parameters={docs:{description:{story:"You can also create a cell with an accessory placed on the right. Note that you can pass any of the existing WB components such as `Icon`."}}};const c=()=>pe(he,{children:[e(o,{title:"Single line with short accessory.",rightAccessory:y.withCaret}),e(A,{size:l.xSmall_8}),e(o,{title:"Single line with tall accessory.",rightAccessory:y.withIconText}),e(A,{size:l.xSmall_8}),e(o,{title:"Multi line title with tall accessory. Content should fit within the container and the cell height should be consistent no matter the content length.",rightAccessory:y.withIconText})]});c.parameters={docs:{description:{story:"Cells should keep a consistent height no matter the content passed in the title prop. It should also respect a `minHeight` of 48px"}}};const w={small:"M14.22 1.6H13.33V0H11.56V1.6H4.44V0H2.67V1.6H1.78C0.79 1.6 0.01 2.32 0.01 3.2L0 14.4C0 15.28 0.79 16 1.78 16H14.22C15.2 16 16 15.28 16 14.4V3.2C16 2.32 15.2 1.6 14.22 1.6ZM14.22 14.4H1.78V5.6H14.22V14.4ZM3.56 7.2H8V11.2H3.56V7.2Z"},m={name:"CompactCell with both accessories",render:()=>e(o,{title:"Intro to rational & irrational numbers",leftAccessory:e(t,{icon:s,size:"medium"}),rightAccessory:e(t,{icon:w,size:"medium",color:g.blue})})};m.parameters={docs:{description:{story:"You can also create a more complex cell with accessories placed on both sides. Note that you can extend the Icon component with custom paths such as the following example."}}};const p={name:"CompactCell accessories with custom styles",render:()=>e(o,{title:"CompactCell with custom accessory styles",leftAccessory:e(t,{icon:s,size:"medium"}),leftAccessoryStyle:{minWidth:l.xxLarge_48,alignSelf:"flex-start",alignItems:"flex-start"},rightAccessory:e(t,{icon:f,size:"small"}),rightAccessoryStyle:{minWidth:l.large_24,alignSelf:"flex-end",alignItems:"flex-end"}})};p.parameters={docs:{description:{story:"Accessories can also be customized to adapt to different sizes and alignments. In this example, we can see how a cell can be customized for both accessories."}}};const a={name:"Defining horizontal rule variants",render:()=>pe(he,{children:[e(o,{title:"This is a basic cell with an 'inset' horizontal rule",leftAccessory:e(t,{icon:s,size:"medium"}),horizontalRule:"inset"}),e(o,{title:"This is a basic cell with a 'full-width' horizontal rule",leftAccessory:e(t,{icon:s,size:"medium"}),horizontalRule:"full-width"}),e(o,{title:"This is a basic cell without a horizontal rule",leftAccessory:e(t,{icon:s,size:"medium"}),horizontalRule:"none"})]})};a.parameters={docs:{description:{story:"Cell components can use the `horizontalRule` prop to use a set of predefined variants that we can use to match our needs."}}};const h=()=>e(o,{title:"CompactCell with a darkBlue background",leftAccessory:e(t,{icon:s,size:"medium"}),rightAccessory:e(t,{icon:w,color:g.white}),style:{background:g.darkBlue,color:g.white},onClick:()=>{}});h.parameters={docs:{description:{story:"Cell components can also adapt to different visual needs. One example of this can be done by passing a custom style object to the `style` prop."}}};const d=()=>e(o,{title:"Intro to rational & irrational numbers",rightAccessory:e(t,{icon:f}),onClick:()=>{},"aria-label":"Press to navigate to the article"});d.parameters={chromatic:{disableSnapshot:!0},docs:{description:{story:"Cell components can also also be clickable. This is done by passing a `onClick` prop to the component."}}};const u=()=>e(o,{title:"Title for article item",leftAccessory:e(t,{icon:ge,size:"medium",color:"black"}),rightAccessory:e(t,{icon:w,size:"small"}),active:!0,onClick:()=>{}});u.parameters={docs:{description:{story:"The cell also supports different states within itself. The different styles are defined internally (e.g hover, focused, pressed, active, disabled) and we allow passing some props to use the `active` or `disabled` state."}}};const C=()=>e(o,{title:"Title for article item",leftAccessory:y.withImage,rightAccessory:e(t,{icon:w,size:"small"}),disabled:!0,onClick:()=>{}});C.parameters={docs:{description:{story:"In the following example we can see how the `disabled` state works. Note that we apply an opacity to all the elements to make it more apparent that the cell is disabled. This includes text, SVG icons, images, etc."}}};const we=Ce.StyleSheet.create({example:{backgroundColor:g.offWhite,padding:l.large_24,width:320+l.xxLarge_48}});var z,I,S,x,k;n.parameters={...n.parameters,docs:{...(z=n.parameters)==null?void 0:z.docs,source:{originalSource:`{
  args: {
    title: "Basic Cell",
    rightAccessory: <Icon icon={icons.caretRight} />
  },
  parameters: {
    chromatic: {
      // We have screenshots of other stories that cover other variants.
      disableSnapshot: true
    }
  }
}`,...(S=(I=n.parameters)==null?void 0:I.docs)==null?void 0:S.source},description:{story:`Default CompactCell example. It will be rendered as the first/default story and
it can be interacted with the controls panel in the Browser.`,...(k=(x=n.parameters)==null?void 0:x.docs)==null?void 0:k.description}}};var T,v,H,R,V;i.parameters={...i.parameters,docs:{...(T=i.parameters)==null?void 0:T.docs,source:{originalSource:'() => <CompactCell title="Intro to rational & irrational numbers" leftAccessory={<Icon icon={icons.contentArticle} size="medium" />} />',...(H=(v=i.parameters)==null?void 0:v.docs)==null?void 0:H.source},description:{story:"Only including an accessory on the left.",...(V=(R=i.parameters)==null?void 0:R.docs)==null?void 0:V.description}}};var B,_,D,M,W;r.parameters={...r.parameters,docs:{...(B=r.parameters)==null?void 0:B.docs,source:{originalSource:`{
  render: () => <CompactCell title="Intro to rational & irrational numbers" rightAccessory={<Icon icon={icons.caretRight} size="medium" />} />
}`,...(D=(_=r.parameters)==null?void 0:_.docs)==null?void 0:D.source},description:{story:"Only including an accessory on the right.",...(W=(M=r.parameters)==null?void 0:M.docs)==null?void 0:W.description}}};var L,O,j,F,N;c.parameters={...c.parameters,docs:{...(L=c.parameters)==null?void 0:L.docs,source:{originalSource:`() => <>
        <CompactCell title="Single line with short accessory." rightAccessory={AccessoryMappings.withCaret} />
        <Strut size={Spacing.xSmall_8} />
        <CompactCell title="Single line with tall accessory." rightAccessory={AccessoryMappings.withIconText} />
        <Strut size={Spacing.xSmall_8} />
        <CompactCell title="Multi line title with tall accessory. Content should fit within the container and the cell height should be consistent no matter the content length." rightAccessory={AccessoryMappings.withIconText} />
    </>`,...(j=(O=c.parameters)==null?void 0:O.docs)==null?void 0:j.source},description:{story:"Adding multiline title to verify that the cell's height is correct.",...(N=(F=c.parameters)==null?void 0:F.docs)==null?void 0:N.description}}};var Y,E,P;m.parameters={...m.parameters,docs:{...(Y=m.parameters)==null?void 0:Y.docs,source:{originalSource:`{
  name: "CompactCell with both accessories",
  render: () => <CompactCell title="Intro to rational & irrational numbers" leftAccessory={<Icon icon={icons.contentArticle} size="medium" />} rightAccessory={<Icon icon={calendarIcon} size="medium" color={Color.blue} />} />
}`,...(P=(E=m.parameters)==null?void 0:E.docs)==null?void 0:P.source}}};var Z,q,G;p.parameters={...p.parameters,docs:{...(Z=p.parameters)==null?void 0:Z.docs,source:{originalSource:`{
  name: "CompactCell accessories with custom styles",
  render: () => <CompactCell title="CompactCell with custom accessory styles" leftAccessory={<Icon icon={icons.contentArticle} size="medium" />} leftAccessoryStyle={{
    minWidth: Spacing.xxLarge_48,
    alignSelf: "flex-start",
    alignItems: "flex-start"
  }} rightAccessory={<Icon icon={icons.caretRight} size="small" />} rightAccessoryStyle={{
    minWidth: Spacing.large_24,
    alignSelf: "flex-end",
    alignItems: "flex-end"
  }} />
}`,...(G=(q=p.parameters)==null?void 0:q.docs)==null?void 0:G.source}}};var J,K,Q,U,X;a.parameters={...a.parameters,docs:{...(J=a.parameters)==null?void 0:J.docs,source:{originalSource:`{
  name: "Defining horizontal rule variants",
  render: () => <>
            <CompactCell title="This is a basic cell with an 'inset' horizontal rule" leftAccessory={<Icon icon={icons.contentArticle} size="medium" />} horizontalRule="inset" />
            <CompactCell title="This is a basic cell with a 'full-width' horizontal rule" leftAccessory={<Icon icon={icons.contentArticle} size="medium" />} horizontalRule="full-width" />
            <CompactCell title="This is a basic cell without a horizontal rule" leftAccessory={<Icon icon={icons.contentArticle} size="medium" />} horizontalRule="none" />
        </>
}`,...(Q=(K=a.parameters)==null?void 0:K.docs)==null?void 0:Q.source},description:{story:"Defining horizontal rule variants",...(X=(U=a.parameters)==null?void 0:U.docs)==null?void 0:X.description}}};var $,ee,te;h.parameters={...h.parameters,docs:{...($=h.parameters)==null?void 0:$.docs,source:{originalSource:`() => <CompactCell title="CompactCell with a darkBlue background" leftAccessory={<Icon icon={icons.contentArticle} size="medium" />} rightAccessory={<Icon icon={calendarIcon} color={Color.white} />} style={{
  background: Color.darkBlue,
  color: Color.white
}} onClick={() => {}} />`,...(te=(ee=h.parameters)==null?void 0:ee.docs)==null?void 0:te.source}}};var oe,se,ie;d.parameters={...d.parameters,docs:{...(oe=d.parameters)==null?void 0:oe.docs,source:{originalSource:'() => <CompactCell title="Intro to rational & irrational numbers" rightAccessory={<Icon icon={icons.caretRight} />} onClick={() => {}} aria-label="Press to navigate to the article" />',...(ie=(se=d.parameters)==null?void 0:se.docs)==null?void 0:ie.source}}};var re,ce,ae;u.parameters={...u.parameters,docs:{...(re=u.parameters)==null?void 0:re.docs,source:{originalSource:'() => <CompactCell title="Title for article item" leftAccessory={<Icon icon={icons.contentVideo} size="medium" color="black" />} rightAccessory={<Icon icon={calendarIcon} size="small" />} active={true} onClick={() => {}} />',...(ae=(ce=u.parameters)==null?void 0:ce.docs)==null?void 0:ae.source}}};var le,ne,me;C.parameters={...C.parameters,docs:{...(le=C.parameters)==null?void 0:le.docs,source:{originalSource:'() => <CompactCell title="Title for article item" leftAccessory={AccessoryMappings.withImage} rightAccessory={<Icon icon={calendarIcon} size="small" />} disabled={true} onClick={() => {}} />',...(me=(ne=C.parameters)==null?void 0:ne.docs)==null?void 0:me.source}}};const We=["DefaultCompactCell","CompactCellLeft","CompactCellRight","CompactCellWithDifferentHeights","CompactCellBoth","CompactCellAccessoryStyles","CompactCellHorizontalRules","CompactCellWithCustomStyles","ClickableCompactCell","CompactCellActive","CompactCellDisabled"];export{d as ClickableCompactCell,p as CompactCellAccessoryStyles,u as CompactCellActive,m as CompactCellBoth,C as CompactCellDisabled,a as CompactCellHorizontalRules,i as CompactCellLeft,r as CompactCellRight,h as CompactCellWithCustomStyles,c as CompactCellWithDifferentHeights,n as DefaultCompactCell,We as __namedExportsOrder,Me as default};
//# sourceMappingURL=compact-cell.stories-1a62dd05.js.map
