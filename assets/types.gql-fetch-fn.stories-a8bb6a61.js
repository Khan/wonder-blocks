import{M as i}from"./index-35e12253.js";import{a as t,j as o,F as c}from"./jsx-runtime-309e447d.js";import{u as s}from"./index-506666d7.js";import"./iframe-97aa1d91.js";import"../sb-preview/runtime.js";import"./chunk-6P7RB4HF-938b085e.js";import"./index-d475d2ea.js";import"./index-9f32f44c.js";import"./_commonjsHelpers-de833af9.js";import"./index-9c2d1831.js";import"./inheritsLoose-9eefaa95.js";import"./assertThisInitialized-081f9914.js";import"./index-4733a090.js";import"./_baseIsEqual-976d9d82.js";import"./uniq-944679ca.js";import"./index-356e4a49.js";function n(r){const e=Object.assign({h1:"h1",pre:"pre",code:"code",p:"p",a:"a"},s(),r.components);return o(c,{children:[t(i,{title:"Data / Types / GqlFetchFn<>",parameters:{chromatic:{disableSnapshot:!0}}}),`
`,t(e.h1,{id:"gqlfetchfn",children:"GqlFetchFn<>"}),`
`,t(e.pre,{children:t(e.code,{className:"language-ts",children:`type GqlFetchFn<TData, TVariables: {...}, TContext: GqlContext> = (
    operation: GqlOperation<TData, TVariables>,
    variables: ?TVariables,
    context: TContext,
) => Promise<Response>;
`})}),`
`,o(e.p,{children:["The ",t(e.code,{children:"GqlFetchFn<>"})," type describes the function that will perform a GraphQL request. A function that fits this signature is configured in Wonder Blocks Data using the ",t(e.a,{href:"/docs/data-exports-gqlrouter--page",children:t(e.code,{children:"GqlRouter"})})," component. The ",t(e.a,{href:"/docs/data-exports-usegql--page",children:t(e.code,{children:"useGql"})})," hook and derivatives are then built on top of this to abstract away complexities, such as converting the ",t(e.code,{children:"Response"})," to a valid ",t(e.a,{href:"/docs/data-types-result--page",children:t(e.code,{children:"Result<>"})})," instance, as various use cases see fit."]}),`
`,o(e.p,{children:["See the section on ",t(e.a,{href:"/docs/data-graphql--page",children:"GraphQL"})," for more information."]})]})}function p(r={}){const{wrapper:e}=Object.assign({},s(),r.components);return e?t(e,{...r,children:t(n,{...r})}):n(r)}const l=()=>{throw new Error("Docs-only story")};l.parameters={docsOnly:!0};const a={title:"Data / Types / GqlFetchFn<>",parameters:{chromatic:{disableSnapshot:!0}},tags:["stories-mdx"],includeStories:["__page"]};a.parameters=a.parameters||{};a.parameters.docs={...a.parameters.docs||{},page:p};const v=["__page"];export{v as __namedExportsOrder,l as __page,a as default};
//# sourceMappingURL=types.gql-fetch-fn.stories-a8bb6a61.js.map
