import{a as o}from"./jsx-runtime-309e447d.js";import{r as C}from"./index-9f32f44c.js";import{L as A,c as B,i as M,g as _}from"./clickable-8a7f284d.js";import{a as I,l as E}from"./render-state-root-891c0d56.js";import{m as c,f as x,C as z,a as D}from"./index-f641b98f.js";import{I as R}from"./icon-a4f17d53.js";const W=I("a"),L=I("button"),O=I(A),U=C.forwardRef((e,n)=>{const{skipClientNav:t,color:r,disabled:a,focused:s,hovered:u,href:i,icon:l,kind:h="primary",light:m=!1,pressed:v,style:b,testId:d,waiting:k,...g}=e,y=w=>{const T=r==="destructive"?D.controlDestructive:D.controlDefault,p=j(T,h,m),N=[S.shared,a&&S.disabled,p.default,a&&p.disabled,!a&&(v?p.active:(u||s)&&p.focus)],q=o(R,{size:"medium",color:"currentColor",icon:l}),V={"data-test-id":d,style:[N,b],...g};return i&&!a?w&&!t&&M(i)?o(O,{...V,to:i,ref:n,children:q}):o(W,{...V,href:i,ref:n,children:q}):o(L,{type:"button",...V,disabled:a,ref:n,children:q})};return o(B.Consumer,{children:w=>y(w)})}),S=E.StyleSheet.create({shared:{position:"relative",display:"inline-flex",alignItems:"center",justifyContent:"center",boxSizing:"border-box",height:40,width:40,padding:0,cursor:"pointer",border:"none",outline:"none",textDecoration:"none",background:"none",margin:-8,touchAction:"manipulation",":focus":{WebkitTapHighlightColor:"rgba(0,0,0,0)"}},disabled:{cursor:"default"}}),f={},j=(e,n,t)=>{const r=e+n+t.toString();if(f[r])return f[r];if(t&&n!=="primary")throw new Error("Light is only supported for primary IconButtons");const{white:a,offBlack32:s,offBlack64:u,offBlack:i}=z,l={default:{},focus:{color:t?a:e,borderWidth:2,borderColor:t?a:e,borderStyle:"solid",borderRadius:4},active:{color:t?c(x(e,.32),a):c(s,e),borderWidth:2,borderColor:t?c(x(e,.32),a):c(s,e),borderStyle:"solid",borderRadius:4},disabled:{color:t?c(x(a,.32),e):s,cursor:"default"}};if(n==="primary")l.default={color:t?a:e};else if(n==="secondary")l.default={color:i};else if(n==="tertiary")l.default={color:u};else throw new Error("IconButton kind not recognized");return f[r]=E.StyleSheet.create(l),f[r]};try{iconbuttoncore.displayName="iconbuttoncore",iconbuttoncore.__docgenInfo={description:"",displayName:"iconbuttoncore",props:{"aria-activedescendant":{defaultValue:null,description:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",name:"aria-activedescendant",required:!1,type:{name:"string"}},"aria-atomic":{defaultValue:null,description:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",name:"aria-atomic",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-autocomplete":{defaultValue:null,description:`Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.`,name:"aria-autocomplete",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"inline"'},{value:'"list"'},{value:'"both"'}]}},"aria-busy":{defaultValue:null,description:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",name:"aria-busy",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-checked":{defaultValue:null,description:`Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.
@see aria-pressed
@see aria-selected.`,name:"aria-checked",required:!1,type:{name:'boolean | "false" | "true" | "mixed"'}},"aria-colcount":{defaultValue:null,description:`Defines the total number of columns in a table, grid, or treegrid.
@see aria-colindex.`,name:"aria-colcount",required:!1,type:{name:"number"}},"aria-colindex":{defaultValue:null,description:`Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.
@see aria-colcount
@see aria-colspan.`,name:"aria-colindex",required:!1,type:{name:"number"}},"aria-colspan":{defaultValue:null,description:`Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.
@see aria-colindex
@see aria-rowspan.`,name:"aria-colspan",required:!1,type:{name:"number"}},"aria-controls":{defaultValue:null,description:`Identifies the element (or elements) whose contents or presence are controlled by the current element.
@see aria-owns.`,name:"aria-controls",required:!1,type:{name:"string"}},"aria-current":{defaultValue:null,description:"Indicates the element that represents the current item within a container or set of related elements.",name:"aria-current",required:!1,type:{name:'boolean | "false" | "true" | "page" | "step" | "location" | "date" | "time"'}},"aria-describedby":{defaultValue:null,description:`Identifies the element (or elements) that describes the object.
@see aria-labelledby`,name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:`Identifies the element that provides a detailed, extended description for the object.
@see aria-describedby.`,name:"aria-details",required:!1,type:{name:"string"}},"aria-dropeffect":{defaultValue:null,description:`Indicates what functions can be performed when a dragged object is released on the drop target.
@deprecated in ARIA 1.1`,name:"aria-dropeffect",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"copy"'},{value:'"execute"'},{value:'"link"'},{value:'"move"'},{value:'"popup"'}]}},"aria-errormessage":{defaultValue:null,description:`Identifies the element that provides an error message for the object.
@see aria-invalid
@see aria-describedby.`,name:"aria-errormessage",required:!1,type:{name:"string"}},"aria-expanded":{defaultValue:null,description:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",name:"aria-expanded",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-flowto":{defaultValue:null,description:`Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.`,name:"aria-flowto",required:!1,type:{name:"string"}},"aria-grabbed":{defaultValue:null,description:`Indicates an element's "grabbed" state in a drag-and-drop operation.
@deprecated in ARIA 1.1`,name:"aria-grabbed",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-haspopup":{defaultValue:null,description:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",name:"aria-haspopup",required:!1,type:{name:'boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" | "dialog"'}},"aria-hidden":{defaultValue:null,description:`Indicates whether the element is exposed to an accessibility API.
@see aria-disabled.`,name:"aria-hidden",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-invalid":{defaultValue:null,description:`Indicates the entered value does not conform to the format expected by the application.
@see aria-errormessage.`,name:"aria-invalid",required:!1,type:{name:'boolean | "false" | "true" | "grammar" | "spelling"'}},"aria-keyshortcuts":{defaultValue:null,description:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",name:"aria-keyshortcuts",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:`Defines a string value that labels the current element.
@see aria-labelledby.`,name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:`Identifies the element (or elements) that labels the current element.
@see aria-describedby.`,name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-level":{defaultValue:null,description:"Defines the hierarchical level of an element within a structure.",name:"aria-level",required:!1,type:{name:"number"}},"aria-live":{defaultValue:null,description:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",name:"aria-live",required:!1,type:{name:"enum",value:[{value:'"off"'},{value:'"assertive"'},{value:'"polite"'}]}},"aria-modal":{defaultValue:null,description:"Indicates whether an element is modal when displayed.",name:"aria-modal",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-multiline":{defaultValue:null,description:"Indicates whether a text box accepts multiple lines of input or only a single line.",name:"aria-multiline",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-multiselectable":{defaultValue:null,description:"Indicates that the user may select more than one item from the current selectable descendants.",name:"aria-multiselectable",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-orientation":{defaultValue:null,description:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",name:"aria-orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},"aria-owns":{defaultValue:null,description:`Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.
@see aria-controls.`,name:"aria-owns",required:!1,type:{name:"string"}},"aria-placeholder":{defaultValue:null,description:`Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.`,name:"aria-placeholder",required:!1,type:{name:"string"}},"aria-posinset":{defaultValue:null,description:`Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.
@see aria-setsize.`,name:"aria-posinset",required:!1,type:{name:"number"}},"aria-pressed":{defaultValue:null,description:`Indicates the current "pressed" state of toggle buttons.
@see aria-checked
@see aria-selected.`,name:"aria-pressed",required:!1,type:{name:'boolean | "false" | "true" | "mixed"'}},"aria-readonly":{defaultValue:null,description:`Indicates that the element is not editable, but is otherwise operable.
@see aria-disabled.`,name:"aria-readonly",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-relevant":{defaultValue:null,description:`Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.
@see aria-atomic.`,name:"aria-relevant",required:!1,type:{name:"enum",value:[{value:'"additions"'},{value:'"additions removals"'},{value:'"additions text"'},{value:'"all"'},{value:'"removals"'},{value:'"removals additions"'},{value:'"removals text"'},{value:'"text"'},{value:'"text additions"'},{value:'"text removals"'}]}},"aria-required":{defaultValue:null,description:"Indicates that user input is required on the element before a form may be submitted.",name:"aria-required",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-roledescription":{defaultValue:null,description:"Defines a human-readable, author-localized description for the role of an element.",name:"aria-roledescription",required:!1,type:{name:"string"}},"aria-rowcount":{defaultValue:null,description:`Defines the total number of rows in a table, grid, or treegrid.
@see aria-rowindex.`,name:"aria-rowcount",required:!1,type:{name:"number"}},"aria-rowindex":{defaultValue:null,description:`Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.
@see aria-rowcount
@see aria-rowspan.`,name:"aria-rowindex",required:!1,type:{name:"number"}},"aria-rowspan":{defaultValue:null,description:`Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.
@see aria-rowindex
@see aria-colspan.`,name:"aria-rowspan",required:!1,type:{name:"number"}},"aria-selected":{defaultValue:null,description:`Indicates the current "selected" state of various widgets.
@see aria-checked
@see aria-pressed.`,name:"aria-selected",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-setsize":{defaultValue:null,description:`Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.
@see aria-posinset.`,name:"aria-setsize",required:!1,type:{name:"number"}},"aria-sort":{defaultValue:null,description:"Indicates if items in a table or grid are sorted in ascending or descending order.",name:"aria-sort",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"ascending"'},{value:'"descending"'},{value:'"other"'}]}},"aria-valuemax":{defaultValue:null,description:"Defines the maximum allowed value for a range widget.",name:"aria-valuemax",required:!1,type:{name:"number"}},"aria-valuemin":{defaultValue:null,description:"Defines the minimum allowed value for a range widget.",name:"aria-valuemin",required:!1,type:{name:"number"}},"aria-valuenow":{defaultValue:null,description:`Defines the current value for a range widget.
@see aria-valuetext.`,name:"aria-valuenow",required:!1,type:{name:"number"}},"aria-valuetext":{defaultValue:null,description:"Defines the human readable text alternative of aria-valuenow for a range widget.",name:"aria-valuetext",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"",name:"role",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"list"'},{value:'"link"'},{value:'"menu"'},{value:'"listbox"'},{value:'"tree"'},{value:'"grid"'},{value:'"dialog"'},{value:'"alert"'},{value:'"alertdialog"'},{value:'"application"'},{value:'"article"'},{value:'"banner"'},{value:'"button"'},{value:'"cell"'},{value:'"checkbox"'},{value:'"columnheader"'},{value:'"combobox"'},{value:'"complementary"'},{value:'"contentinfo"'},{value:'"definition"'},{value:'"directory"'},{value:'"document"'},{value:'"feed"'},{value:'"figure"'},{value:'"form"'},{value:'"gridcell"'},{value:'"group"'},{value:'"heading"'},{value:'"img"'},{value:'"listitem"'},{value:'"log"'},{value:'"main"'},{value:'"marquee"'},{value:'"math"'},{value:'"menubar"'},{value:'"menuitem"'},{value:'"menuitemcheckbox"'},{value:'"menuitemradio"'},{value:'"navigation"'},{value:'"note"'},{value:'"option"'},{value:'"presentation"'},{value:'"progressbar"'},{value:'"radio"'},{value:'"radiogroup"'},{value:'"region"'},{value:'"row"'},{value:'"rowgroup"'},{value:'"rowheader"'},{value:'"scrollbar"'},{value:'"search"'},{value:'"searchbox"'},{value:'"separator"'},{value:'"slider"'},{value:'"spinbutton"'},{value:'"status"'},{value:'"switch"'},{value:'"tab"'},{value:'"table"'},{value:'"tablist"'},{value:'"tabpanel"'},{value:'"term"'},{value:'"textbox"'},{value:'"timer"'},{value:'"toolbar"'},{value:'"tooltip"'},{value:'"treegrid"'},{value:'"treeitem"'}]}},icon:{defaultValue:null,description:`A Wonder Blocks icon asset, an object specifing paths for one or more of
the following sizes: small, medium, large, xlarge.`,name:"icon",required:!0,type:{name:"IconAsset"}},color:{defaultValue:null,description:"The color of the icon button, either blue or red.",name:"color",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"destructive"'}]}},kind:{defaultValue:null,description:`The kind of the icon button, either primary, secondary, or tertiary.

In default state:
- Primary icon buttons are color: props.color
- Secondary buttons are offBlack
- Tertiary buttons are offBlack64

In the hover/focus/press states, all variants have a border.`,name:"kind",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'}]}},light:{defaultValue:null,description:"Whether the icon button is on a dark/colored background.",name:"light",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Whether the icon button is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},testId:{defaultValue:null,description:"Test ID used for e2e testing.",name:"testId",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Optional custom styles.",name:"style",required:!1,type:{name:"any"}},className:{defaultValue:null,description:"Adds CSS classes to the IconButton.",name:"className",required:!1,type:{name:"string"}},href:{defaultValue:null,description:"URL to navigate to.\n\nNote: Either href or onClick must be defined\nURL to navigate to.\n\nUsed to determine whether to render an `<a>` or `<button>` tag. Also\npassed in as the `<a>` tag's `href` if present.",name:"href",required:!1,type:{name:"string"}},target:{defaultValue:null,description:"A target destination window for a link to open in.",name:"target",required:!1,type:{name:"enum",value:[{value:'"_blank"'}]}},rel:{defaultValue:null,description:'Specifies the type of relationship between the current document and the\nlinked document. Should only be used when `href` is specified. This\ndefaults to "noopener noreferrer" when `target="_blank"`, but can be\noverridden by setting this prop to something else.',name:"rel",required:!1,type:{name:"string"}},tabIndex:{defaultValue:null,description:"Set the tabindex attribute on the rendered element.",name:"tabIndex",required:!1,type:{name:"number"}},skipClientNav:{defaultValue:null,description:`Whether to avoid using client-side navigation.

If the URL passed to href is local to the client-side, e.g.
/math/algebra/eval-exprs, then it tries to use react-router-dom's Link
component which handles the client-side navigation. You can set
\`skipClientNav\` to true avoid using client-side nav entirely.

NOTE: All URLs containing a protocol are considered external, e.g.
https://khanacademy.org/math/algebra/eval-exprs will trigger a full
page reload.`,name:"skipClientNav",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:`Function to call when button is clicked.

This callback should be used for things like marking BigBingo
conversions. It should NOT be used to redirect to a different URL or to
prevent navigation via e.preventDefault(). The event passed to this
handler will have its preventDefault() and stopPropagation() methods
stubbed out.

Note: onClick is optional if href is present, but must be defined if
href is not`,name:"onClick",required:!1,type:{name:"((e: SyntheticEvent<Element, Event>) => unknown) & ((e: SyntheticEvent<Element, Event>) => unknown)"}},onMouseEnter:{defaultValue:null,description:"",name:"onMouseEnter",required:!0,type:{name:"(e: MouseEvent<Element, MouseEvent>) => unknown"}},onMouseLeave:{defaultValue:null,description:"",name:"onMouseLeave",required:!0,type:{name:"() => unknown"}},onMouseDown:{defaultValue:null,description:"",name:"onMouseDown",required:!0,type:{name:"() => unknown"}},onMouseUp:{defaultValue:null,description:"",name:"onMouseUp",required:!0,type:{name:"(e: MouseEvent<Element, MouseEvent>) => unknown"}},onTouchStart:{defaultValue:null,description:"",name:"onTouchStart",required:!0,type:{name:"() => unknown"}},onTouchEnd:{defaultValue:null,description:"",name:"onTouchEnd",required:!0,type:{name:"() => unknown"}},onTouchCancel:{defaultValue:null,description:"",name:"onTouchCancel",required:!0,type:{name:"() => unknown"}},onKeyDown:{defaultValue:null,description:"",name:"onKeyDown",required:!0,type:{name:"(e: KeyboardEvent<Element>) => unknown"}},onKeyUp:{defaultValue:null,description:"",name:"onKeyUp",required:!0,type:{name:"(e: KeyboardEvent<Element>) => unknown"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!0,type:{name:"(e: FocusEvent<Element, Element>) => unknown"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!0,type:{name:"(e: FocusEvent<Element, Element>) => unknown"}},hovered:{defaultValue:null,description:`Whether the component is hovered.

See component documentation for more details.`,name:"hovered",required:!0,type:{name:"boolean"}},focused:{defaultValue:null,description:`Whether the component is hovered.

See component documentation for more details.`,name:"focused",required:!0,type:{name:"boolean"}},pressed:{defaultValue:null,description:`Whether the component is hovered.

See component documentation for more details.`,name:"pressed",required:!0,type:{name:"boolean"}},waiting:{defaultValue:null,description:`When we're waiting for beforeNav or safeWithNav to complete an async
action, this will be true.

NOTE: We only wait for safeWithNav to complete when doing a full page
load navigation.`,name:"waiting",required:!0,type:{name:"boolean"}}}}}catch{}const P=C.forwardRef((e,n)=>{const{onClick:t,href:r,skipClientNav:a,tabIndex:s,target:u,color:i="default",kind:l="primary",light:h=!1,disabled:m=!1,...v}=e,b=d=>{const k=_(r,a,d);return o(k,{disabled:m,href:r,onClick:t,role:"button",target:u,children:(g,{...y})=>o(U,{...v,...g,...y,color:i,kind:l,light:h,disabled:m,skipClientNav:a,href:r,target:u,tabIndex:s,ref:n})})};return o(B.Consumer,{children:d=>b(d)})}),J=P;try{iconbutton.displayName="iconbutton",iconbutton.__docgenInfo={description:`An IconButton is a button whose contents are an SVG image.

To use, supply an onClick function, a wonder-blocks icon asset (see
the Icon section) and an aria-label to describe the button functionality.
Optionally specify href (URL), clientSideNav, color
(Wonder Blocks Blue or Red), kind ("primary", "secondary", or "tertiary"),
light (whether the IconButton will be rendered on a dark background),
disabled , test ID, and custom styling.

The size of an IconButton matches the size of icon it wraps which is 24x24
pixels.  The focus ring which is displayed on hover and focus is much
larger but does not affect its size.  This matches the behavior of Button.

IconButtons require a certain amount of space between them to ensure the
focus rings don't overlap.  The minimum amount of spacing is 16px, but
you should refer to the mocks provided by design.  Using a Strut in between
IconButtons is the preferred way to for adding this spacing.

Many layouts require alignment of visual left (or right) side of an
IconButton.  This requires a little bit of pixel nudging since each icon
as a different amount of internal padding.

See the Toolbar documentation for examples of IconButton use that follow
the best practices described above.

\`\`\`js
import {icons} from "@khanacademy/wonder-blocks-icon";
import IconButton from "@khanacademy/wonder-blocks-icon-button";

<IconButton
    icon={icons.anIcon}
    aria-label="An Icon"
    onClick={(e) => console.log("Hello, world!")}
/>
\`\`\``,displayName:"iconbutton",props:{"aria-activedescendant":{defaultValue:null,description:"Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",name:"aria-activedescendant",required:!1,type:{name:"string"}},"aria-atomic":{defaultValue:null,description:"Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",name:"aria-atomic",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-autocomplete":{defaultValue:null,description:`Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.`,name:"aria-autocomplete",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"inline"'},{value:'"list"'},{value:'"both"'}]}},"aria-busy":{defaultValue:null,description:"Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",name:"aria-busy",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-checked":{defaultValue:null,description:`Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.
@see aria-pressed
@see aria-selected.`,name:"aria-checked",required:!1,type:{name:'boolean | "false" | "true" | "mixed"'}},"aria-colcount":{defaultValue:null,description:`Defines the total number of columns in a table, grid, or treegrid.
@see aria-colindex.`,name:"aria-colcount",required:!1,type:{name:"number"}},"aria-colindex":{defaultValue:null,description:`Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.
@see aria-colcount
@see aria-colspan.`,name:"aria-colindex",required:!1,type:{name:"number"}},"aria-colspan":{defaultValue:null,description:`Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.
@see aria-colindex
@see aria-rowspan.`,name:"aria-colspan",required:!1,type:{name:"number"}},"aria-controls":{defaultValue:null,description:`Identifies the element (or elements) whose contents or presence are controlled by the current element.
@see aria-owns.`,name:"aria-controls",required:!1,type:{name:"string"}},"aria-current":{defaultValue:null,description:"Indicates the element that represents the current item within a container or set of related elements.",name:"aria-current",required:!1,type:{name:'boolean | "false" | "true" | "page" | "step" | "location" | "date" | "time"'}},"aria-describedby":{defaultValue:null,description:`Identifies the element (or elements) that describes the object.
@see aria-labelledby`,name:"aria-describedby",required:!1,type:{name:"string"}},"aria-details":{defaultValue:null,description:`Identifies the element that provides a detailed, extended description for the object.
@see aria-describedby.`,name:"aria-details",required:!1,type:{name:"string"}},"aria-dropeffect":{defaultValue:null,description:`Indicates what functions can be performed when a dragged object is released on the drop target.
@deprecated in ARIA 1.1`,name:"aria-dropeffect",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"copy"'},{value:'"execute"'},{value:'"link"'},{value:'"move"'},{value:'"popup"'}]}},"aria-errormessage":{defaultValue:null,description:`Identifies the element that provides an error message for the object.
@see aria-invalid
@see aria-describedby.`,name:"aria-errormessage",required:!1,type:{name:"string"}},"aria-expanded":{defaultValue:null,description:"Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",name:"aria-expanded",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-flowto":{defaultValue:null,description:`Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.`,name:"aria-flowto",required:!1,type:{name:"string"}},"aria-grabbed":{defaultValue:null,description:`Indicates an element's "grabbed" state in a drag-and-drop operation.
@deprecated in ARIA 1.1`,name:"aria-grabbed",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-haspopup":{defaultValue:null,description:"Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",name:"aria-haspopup",required:!1,type:{name:'boolean | "false" | "true" | "menu" | "listbox" | "tree" | "grid" | "dialog"'}},"aria-hidden":{defaultValue:null,description:`Indicates whether the element is exposed to an accessibility API.
@see aria-disabled.`,name:"aria-hidden",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-invalid":{defaultValue:null,description:`Indicates the entered value does not conform to the format expected by the application.
@see aria-errormessage.`,name:"aria-invalid",required:!1,type:{name:'boolean | "false" | "true" | "grammar" | "spelling"'}},"aria-keyshortcuts":{defaultValue:null,description:"Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",name:"aria-keyshortcuts",required:!1,type:{name:"string"}},"aria-label":{defaultValue:null,description:`Defines a string value that labels the current element.
@see aria-labelledby.`,name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:`Identifies the element (or elements) that labels the current element.
@see aria-describedby.`,name:"aria-labelledby",required:!1,type:{name:"string"}},"aria-level":{defaultValue:null,description:"Defines the hierarchical level of an element within a structure.",name:"aria-level",required:!1,type:{name:"number"}},"aria-live":{defaultValue:null,description:"Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",name:"aria-live",required:!1,type:{name:"enum",value:[{value:'"off"'},{value:'"assertive"'},{value:'"polite"'}]}},"aria-modal":{defaultValue:null,description:"Indicates whether an element is modal when displayed.",name:"aria-modal",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-multiline":{defaultValue:null,description:"Indicates whether a text box accepts multiple lines of input or only a single line.",name:"aria-multiline",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-multiselectable":{defaultValue:null,description:"Indicates that the user may select more than one item from the current selectable descendants.",name:"aria-multiselectable",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-orientation":{defaultValue:null,description:"Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",name:"aria-orientation",required:!1,type:{name:"enum",value:[{value:'"horizontal"'},{value:'"vertical"'}]}},"aria-owns":{defaultValue:null,description:`Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.
@see aria-controls.`,name:"aria-owns",required:!1,type:{name:"string"}},"aria-placeholder":{defaultValue:null,description:`Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.`,name:"aria-placeholder",required:!1,type:{name:"string"}},"aria-posinset":{defaultValue:null,description:`Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.
@see aria-setsize.`,name:"aria-posinset",required:!1,type:{name:"number"}},"aria-pressed":{defaultValue:null,description:`Indicates the current "pressed" state of toggle buttons.
@see aria-checked
@see aria-selected.`,name:"aria-pressed",required:!1,type:{name:'boolean | "false" | "true" | "mixed"'}},"aria-readonly":{defaultValue:null,description:`Indicates that the element is not editable, but is otherwise operable.
@see aria-disabled.`,name:"aria-readonly",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-relevant":{defaultValue:null,description:`Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.
@see aria-atomic.`,name:"aria-relevant",required:!1,type:{name:"enum",value:[{value:'"additions"'},{value:'"additions removals"'},{value:'"additions text"'},{value:'"all"'},{value:'"removals"'},{value:'"removals additions"'},{value:'"removals text"'},{value:'"text"'},{value:'"text additions"'},{value:'"text removals"'}]}},"aria-required":{defaultValue:null,description:"Indicates that user input is required on the element before a form may be submitted.",name:"aria-required",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-roledescription":{defaultValue:null,description:"Defines a human-readable, author-localized description for the role of an element.",name:"aria-roledescription",required:!1,type:{name:"string"}},"aria-rowcount":{defaultValue:null,description:`Defines the total number of rows in a table, grid, or treegrid.
@see aria-rowindex.`,name:"aria-rowcount",required:!1,type:{name:"number"}},"aria-rowindex":{defaultValue:null,description:`Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.
@see aria-rowcount
@see aria-rowspan.`,name:"aria-rowindex",required:!1,type:{name:"number"}},"aria-rowspan":{defaultValue:null,description:`Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.
@see aria-rowindex
@see aria-colspan.`,name:"aria-rowspan",required:!1,type:{name:"number"}},"aria-selected":{defaultValue:null,description:`Indicates the current "selected" state of various widgets.
@see aria-checked
@see aria-pressed.`,name:"aria-selected",required:!1,type:{name:'boolean | "false" | "true"'}},"aria-setsize":{defaultValue:null,description:`Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.
@see aria-posinset.`,name:"aria-setsize",required:!1,type:{name:"number"}},"aria-sort":{defaultValue:null,description:"Indicates if items in a table or grid are sorted in ascending or descending order.",name:"aria-sort",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"ascending"'},{value:'"descending"'},{value:'"other"'}]}},"aria-valuemax":{defaultValue:null,description:"Defines the maximum allowed value for a range widget.",name:"aria-valuemax",required:!1,type:{name:"number"}},"aria-valuemin":{defaultValue:null,description:"Defines the minimum allowed value for a range widget.",name:"aria-valuemin",required:!1,type:{name:"number"}},"aria-valuenow":{defaultValue:null,description:`Defines the current value for a range widget.
@see aria-valuetext.`,name:"aria-valuenow",required:!1,type:{name:"number"}},"aria-valuetext":{defaultValue:null,description:"Defines the human readable text alternative of aria-valuenow for a range widget.",name:"aria-valuetext",required:!1,type:{name:"string"}},role:{defaultValue:null,description:"",name:"role",required:!1,type:{name:"enum",value:[{value:'"none"'},{value:'"list"'},{value:'"link"'},{value:'"menu"'},{value:'"listbox"'},{value:'"tree"'},{value:'"grid"'},{value:'"dialog"'},{value:'"alert"'},{value:'"alertdialog"'},{value:'"application"'},{value:'"article"'},{value:'"banner"'},{value:'"button"'},{value:'"cell"'},{value:'"checkbox"'},{value:'"columnheader"'},{value:'"combobox"'},{value:'"complementary"'},{value:'"contentinfo"'},{value:'"definition"'},{value:'"directory"'},{value:'"document"'},{value:'"feed"'},{value:'"figure"'},{value:'"form"'},{value:'"gridcell"'},{value:'"group"'},{value:'"heading"'},{value:'"img"'},{value:'"listitem"'},{value:'"log"'},{value:'"main"'},{value:'"marquee"'},{value:'"math"'},{value:'"menubar"'},{value:'"menuitem"'},{value:'"menuitemcheckbox"'},{value:'"menuitemradio"'},{value:'"navigation"'},{value:'"note"'},{value:'"option"'},{value:'"presentation"'},{value:'"progressbar"'},{value:'"radio"'},{value:'"radiogroup"'},{value:'"region"'},{value:'"row"'},{value:'"rowgroup"'},{value:'"rowheader"'},{value:'"scrollbar"'},{value:'"search"'},{value:'"searchbox"'},{value:'"separator"'},{value:'"slider"'},{value:'"spinbutton"'},{value:'"status"'},{value:'"switch"'},{value:'"tab"'},{value:'"table"'},{value:'"tablist"'},{value:'"tabpanel"'},{value:'"term"'},{value:'"textbox"'},{value:'"timer"'},{value:'"toolbar"'},{value:'"tooltip"'},{value:'"treegrid"'},{value:'"treeitem"'}]}},icon:{defaultValue:null,description:`A Wonder Blocks icon asset, an object specifing paths for one or more of
the following sizes: small, medium, large, xlarge.`,name:"icon",required:!0,type:{name:"IconAsset"}},color:{defaultValue:null,description:"The color of the icon button, either blue or red.",name:"color",required:!1,type:{name:"enum",value:[{value:'"default"'},{value:'"destructive"'}]}},kind:{defaultValue:null,description:`The kind of the icon button, either primary, secondary, or tertiary.

In default state:
- Primary icon buttons are color: props.color
- Secondary buttons are offBlack
- Tertiary buttons are offBlack64

In the hover/focus/press states, all variants have a border.`,name:"kind",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'}]}},light:{defaultValue:null,description:"Whether the icon button is on a dark/colored background.",name:"light",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"Whether the icon button is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},testId:{defaultValue:null,description:"Test ID used for e2e testing.",name:"testId",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"Optional custom styles.",name:"style",required:!1,type:{name:"any"}},className:{defaultValue:null,description:"Adds CSS classes to the IconButton.",name:"className",required:!1,type:{name:"string"}},href:{defaultValue:null,description:`URL to navigate to.

Note: Either href or onClick must be defined`,name:"href",required:!1,type:{name:"string"}},target:{defaultValue:null,description:"A target destination window for a link to open in.",name:"target",required:!1,type:{name:"enum",value:[{value:'"_blank"'}]}},rel:{defaultValue:null,description:'Specifies the type of relationship between the current document and the\nlinked document. Should only be used when `href` is specified. This\ndefaults to "noopener noreferrer" when `target="_blank"`, but can be\noverridden by setting this prop to something else.',name:"rel",required:!1,type:{name:"string"}},tabIndex:{defaultValue:null,description:"Set the tabindex attribute on the rendered element.",name:"tabIndex",required:!1,type:{name:"number"}},skipClientNav:{defaultValue:null,description:`Whether to avoid using client-side navigation.

If the URL passed to href is local to the client-side, e.g.
/math/algebra/eval-exprs, then it tries to use react-router-dom's Link
component which handles the client-side navigation. You can set
\`skipClientNav\` to true avoid using client-side nav entirely.

NOTE: All URLs containing a protocol are considered external, e.g.
https://khanacademy.org/math/algebra/eval-exprs will trigger a full
page reload.`,name:"skipClientNav",required:!1,type:{name:"boolean"}},onClick:{defaultValue:null,description:`Function to call when button is clicked.

This callback should be used for things like marking BigBingo
conversions. It should NOT be used to redirect to a different URL or to
prevent navigation via e.preventDefault(). The event passed to this
handler will have its preventDefault() and stopPropagation() methods
stubbed out.

Note: onClick is optional if href is present, but must be defined if
href is not`,name:"onClick",required:!1,type:{name:"((e: SyntheticEvent<Element, Event>) => unknown)"}}}}}catch{}export{J as I};
//# sourceMappingURL=icon-button-297fafd1.js.map
