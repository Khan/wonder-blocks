import{M as c}from"./index-35e12253.js";import"./render-state-root-891c0d56.js";import"./index-9f32f44c.js";import{G as i}from"./gql-router-027fc1dc.js";import{a as t,j as r,F as p}from"./jsx-runtime-309e447d.js";import{u as s}from"./index-506666d7.js";import"./iframe-97aa1d91.js";import"../sb-preview/runtime.js";import"./chunk-6P7RB4HF-938b085e.js";import"./index-d475d2ea.js";import"./_commonjsHelpers-de833af9.js";import"./index-9c2d1831.js";import"./inheritsLoose-9eefaa95.js";import"./assertThisInitialized-081f9914.js";import"./index-4733a090.js";import"./_baseIsEqual-976d9d82.js";import"./uniq-944679ca.js";import"./index-356e4a49.js";function a(o){const e=Object.assign({h1:"h1",p:"p",code:"code",a:"a",pre:"pre"},s(),o.components);return r(p,{children:[t(c,{title:"Data / Exports / GqlRouter",component:i,parameters:{chromatic:{disableSnapshot:!0}}}),`
`,t(e.h1,{id:"gqlrouter",children:"GqlRouter"}),`
`,r(e.p,{children:["The ",t(e.code,{children:"GqlRouter"})," component is used to define the default context and fetch function for performing GraphQL requests using the Wonder Blocks Data API."]}),`
`,r(e.p,{children:["The ",t(e.a,{href:"/docs/data-exports-usegql--page",children:t(e.code,{children:"useGql"})})," (and therefore any hooks or components that use it) requires at least one ",t(e.code,{children:"GqlRouter"})," in the component hierarchy above it or it will throw an error."]}),`
`,r(e.p,{children:["The ",t(e.code,{children:"defaultContext"})," is specific to the needs of your specific implementation, as is the ",t(e.code,{children:"fetch"})," function. Currently, a default for the fetch function is not provided by Wonder Blocks Data and should be written to the specification of the server that will fulfill your GraphQL responses. The ",t(e.code,{children:"fetch"})," function must conform to the ",t(e.a,{href:"/docs/data-types-gqlfetchfn--page",children:t(e.code,{children:"GqlFetchFn<>"})})," type."]}),`
`,t(e.pre,{children:t(e.code,{className:"language-tsx",children:`<GqlRouter defaultContext={{a: "1", b: "2"}} fetch={gqlFetchFn}>
    <div>
        The code that will ultimately use Wonder Blocks Data-based GraphQL
        operations goes here.
    </div>
</GqlRouter>
`})})]})}function d(o={}){const{wrapper:e}=Object.assign({},s(),o.components);return e?t(e,{...o,children:t(a,{...o})}):a(o)}const l=()=>{throw new Error("Docs-only story")};l.parameters={docsOnly:!0};const n={title:"Data / Exports / GqlRouter",parameters:{chromatic:{disableSnapshot:!0}},component:i,tags:["stories-mdx"],includeStories:["__page"]};n.parameters=n.parameters||{};n.parameters.docs={...n.parameters.docs||{},page:d};const v=["__page"];export{v as __namedExportsOrder,l as __page,n as default};
//# sourceMappingURL=exports.gql-router.stories-832f6861.js.map
