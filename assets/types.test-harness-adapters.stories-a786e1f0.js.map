{"version":3,"file":"types.test-harness-adapters.stories-a786e1f0.js","sources":["../../__docs__/wonder-blocks-testing/types.test-harness-adapters.stories.mdx"],"sourcesContent":["import {Meta} from \"@storybook/blocks\";\n\n<Meta\n    title=\"Testing / Test Harness / Types / TestHarnessAdapters\"\n    parameters={{\n        chromatic: {\n            disableSnapshot: true,\n        },\n    }}\n/>\n\n# TestHarnessAdapters\n\n```ts\ntype TestHarnessAdapters = {|\n    [adapterID: string]: TestHarnessAdapter<any>,\n|};\n```\n\nDefines a generic collection of test harness adapters.\n\nOnly use `TestHarnessAdapters` in input locations to verify a set of adapters conforms to that type, but avoid using it in output locations as it can erase useful type information.\n\nFor example, the [`harnessAdapters.DefaultAdapters`](/docs/testing-test-harness-exports-harnessadapters--page) type is specific to the adapters it contains.\n\n```ts\nconst DefaultAdapters = {\n    css: css.adapter,\n    data: data.adapter,\n    portal: portal.adapter,\n    router: router.adapter,\n};\n```\n\n`DefaultAdapters` is not strongly typed to `TestHarnessAdapters`. Instead, its type is:\n\n```ts\ntype DefaultAdaptersType = {|\n   css: typeof css.adapter,\n   data: typeof data.adapter,\n   portal: typeof portal.adapter,\n   router: typeof router.adapter,\n|};\n```\n\nIt conforms to the `TestHarnessAdapters` type because each key is a string and the value of each property is a variation of `TestHarnessAdapter<TConfig>` with a different type for `TConfig` in each case, but it is not equivalent to the `TestHarnessAdapters` type where each key is a string and each value is exactly `TestHarnessAdapter<any>`.\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","MDXContent","MDXLayout","__page","componentMeta","__namedExportsOrder"],"mappings":"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"}