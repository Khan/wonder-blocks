{"version":3,"file":"use-interval-8b23fdc7.js","sources":["../../packages/wonder-blocks-timing/src/hooks/use-interval.ts"],"sourcesContent":["import {useEffect} from \"react\";\n\nimport {useUpdatingRef} from \"./internal/use-updating-ref\";\n\n/**\n * A simple hook for using `setInterval`.\n *\n * @param action called every `intervalMs` when `active` is true\n * @param intervalMs the duration between calls to `action`\n * @param active whether or not the interval is active\n */\nexport function useInterval(\n    action: () => unknown,\n    intervalMs: number,\n    active: boolean,\n) {\n    // We using a ref instead of a callback for `action` to avoid resetting\n    // the interval whenever the `action` changes.\n    const actionRef = useUpdatingRef(action);\n\n    useEffect(() => {\n        if (active) {\n            const intervalId = setInterval(() => {\n                actionRef.current();\n            }, intervalMs);\n\n            return () => {\n                clearInterval(intervalId);\n            };\n        }\n        // actionRef isn't actually required, but react-hooks/exhaustive-deps\n        // doesn't recognize it as a ref and thus complains if it isn't in the\n        // deps list.  It isn't a big deal though since the value ofactionRef\n        // never changes (only its contents do).\n    }, [intervalMs, active, actionRef]);\n}\n"],"names":["useInterval","action","intervalMs","active","actionRef","useUpdatingRef","useEffect","intervalId"],"mappings":"2FAWgB,SAAAA,EACZC,EACAC,EACAC,EACF,CAGQ,MAAAC,EAAYC,EAAeJ,CAAM,EAEvCK,EAAAA,UAAU,IAAM,CACZ,GAAIH,EAAQ,CACF,MAAAI,EAAa,YAAY,IAAM,CACjCH,EAAU,QAAQ,GACnBF,CAAU,EAEb,MAAO,IAAM,CACT,cAAcK,CAAU,CAAA,CAEhC,CAKD,EAAA,CAACL,EAAYC,EAAQC,CAAS,CAAC,CACtC"}