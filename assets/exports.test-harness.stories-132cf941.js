import{M as i}from"./index-35e12253.js";import{a as t,j as n,F as p}from"./jsx-runtime-309e447d.js";import{u as o}from"./index-506666d7.js";import"./iframe-97aa1d91.js";import"../sb-preview/runtime.js";import"./chunk-6P7RB4HF-938b085e.js";import"./index-d475d2ea.js";import"./index-9f32f44c.js";import"./_commonjsHelpers-de833af9.js";import"./index-9c2d1831.js";import"./inheritsLoose-9eefaa95.js";import"./assertThisInitialized-081f9914.js";import"./index-4733a090.js";import"./_baseIsEqual-976d9d82.js";import"./uniq-944679ca.js";import"./index-356e4a49.js";function a(s){const e=Object.assign({h1:"h1",pre:"pre",code:"code",p:"p",a:"a"},o(),s.components);return n(p,{children:[t(i,{title:"Testing / Test Harness / Exports / testHarness()",parameters:{chromatic:{disableSnapshot:!0}}}),`
`,t(e.h1,{id:"testharness",children:"testHarness()"}),`
`,t(e.pre,{children:t(e.code,{className:"language-ts",children:`testHarness<-TProps, +Instance = mixed>(
    Component: React.AbstractComponent<TProps, Instance>,
    configs?: $Shape<TestHarnessConfigs<typeof DefaultAdapters>>,
): React.AbstractComponent<TProps, Instance>
`})}),`
`,t(e.p,{children:"This method can be used to create a test harness for a given component. The resultant harnessed component will take the same props as the original component, but will render that component nested inside whatever boilerplate the various harness adapters provide for the given or default configurations."}),`
`,n(e.p,{children:["This method is created by using ",t(e.a,{href:"/docs/testing-test-harness-exports-maketestharness--page",children:t(e.code,{children:"makeTestHarness"})})," with ",n(e.a,{href:"/docs/testing-test-harness-exports-harnessadapters--page",children:[t(e.code,{children:"harnessAdapters.DefaultAdapters"})," and ",t(e.code,{children:"harnessAdapters.DefaultConfigs"})]}),"."]})]})}function c(s={}){const{wrapper:e}=Object.assign({},o(),s.components);return e?t(e,{...s,children:t(a,{...s})}):a(s)}const d=()=>{throw new Error("Docs-only story")};d.parameters={docsOnly:!0};const r={title:"Testing / Test Harness / Exports / testHarness()",parameters:{chromatic:{disableSnapshot:!0}},tags:["stories-mdx"],includeStories:["__page"]};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:c};const A=["__page"];export{A as __namedExportsOrder,d as __page,r as default};
//# sourceMappingURL=exports.test-harness.stories-132cf941.js.map
