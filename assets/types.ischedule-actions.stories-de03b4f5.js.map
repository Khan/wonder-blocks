{"version":3,"file":"types.ischedule-actions.stories-de03b4f5.js","sources":["../../__docs__/wonder-blocks-timing/types.ischedule-actions.stories.mdx"],"sourcesContent":["import {Meta} from \"@storybook/blocks\";\n\n<Meta\n    title=\"Timing / withActionScheduler / Types / IScheduleActions\"\n    parameters={{\n        chromatic: {\n            disableSnapshot: true,\n        },\n    }}\n/>\n\n# IScheduleActions\n\nThe `IScheduleActions` interface provides 4 (four) different functions:\n\n-   [`timeout`](#timeout)\n-   [`interval`](#interval)\n-   [`animationFrame`](#animationframe)\n-   [`clearAll`](#clearall)\n\n##### timeout\n\n```js static\n    timeout(\n        action: () => mixed,\n        period: number,\n        options?: Options,\n    ): ITimeout;\n```\n\nThe `timeout` function replaces the `setTimeout` and `clearTimeout` functions\nin the standard timer API.\n\n|           | TypeScript&nbsp;Type       | Default                                                                         | Description                                                                                                                                                                                                                                                                                                                                                                                                                                           |\n| --------- | -------------------------- | ------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `action`  | `()`&nbsp;`=>`&nbsp;`void` | _Required_                                                                      | The action to be invoked when the timeout period is reached.                                                                                                                                                                                                                                                                                                                                                                                          |\n| `period`  | `number`                   | _Required_                                                                      | The timeout period in milliseconds. The action will be invoked after this period has passed since the timeout was set. This value must be greater than or equal to zero.                                                                                                                                                                                                                                                                              |\n| `options` | `Options`                  | `{schedulePolicy: SchedulePolicy.Immediately, clearPolicy: ClearPolicy.Cancel}` | Options to control various aspects of the timeout such as whether it starts immediately or not, and whether the scheduled action is invoked on clear or not. The clear policy only takes effect when the [clearAll](#clearall) is invoked on parent the `IScheduleActions` instance, such as when unmounting; this does not affect calls to the `clear` method on the returned `ITimeout` interface. For more on policies, see [Policies](#policies). |\n| _returns_ | [`ITimeout`](#itimeout)    |                                                                                 | An interface for manipulating the created timeout.                                                                                                                                                                                                                                                                                                                                                                                                    |\n\n##### interval\n\n```js static\n    interval(\n        action: () => mixed,\n        period: number,\n        options?: Options,\n    ): IInterval;\n```\n\nThe `interval` function replaces the `setInterval` and `clearInterval` functions\nin the standard timer API.\n\n|           | TypeScript&nbsp;Type       | Default                                                                         | Description                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| --------- | -------------------------- | ------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `action`  | `()`&nbsp;`=>`&nbsp;`void` | _Required_                                                                      | The action to be invoked when the interval period occurs.                                                                                                                                                                                                                                                                                                                                                                                               |\n| `period`  | `number`                   | _Required_                                                                      | The interval period in milliseconds. The action will be invoked each time this period has passed since the interval was set or last occurred. This value must be greater than zero.                                                                                                                                                                                                                                                                     |\n| `options` | `Options`                  | `{schedulePolicy: SchedulePolicy.Immediately, clearPolicy: ClearPolicy.Cancel}` | Options to control various aspects of the interval such as whether it starts immediately or not, and whether the scheduled action is invoked on clear or not. The clear policy only takes effect when the [clearAll](#clearall) is invoked on parent the `IScheduleActions` instance, such as when unmounting; this does not affect calls to the `clear` method on the returned `IInterval` interface. For more on policies, see [Policies](#policies). |\n| _returns_ | [`IInterval`](#iinterval)  |                                                                                 | An interface for manipulating the created interval.                                                                                                                                                                                                                                                                                                                                                                                                     |\n\n##### animationFrame\n\n```js static\n    animationFrame(\n        action: () => void,\n        options?: Options,\n    ): IAnimationFrame;\n```\n\nThe `animationFrame` function replaces the `requestAnimationFrame` and `cancelAnimationFrame` functions\nin the standard timer API.\n\n|           | TypeScript&nbsp;Type                  | Default                                                                         | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| --------- | ------------------------------------- | ------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `action`  | `()`&nbsp;`=>`&nbsp;`void`            | _Required_                                                                      | The action to be invoked before the repaint.                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| `options` | `Options`                             | `{schedulePolicy: SchedulePolicy.Immediately, clearPolicy: ClearPolicy.Cancel}` | Options to control various aspects of the animation frame such as whether it starts immediately or not, and whether the scheduled action is invoked on clear or not. The clear policy only takes effect when the [clearAll](#clearall) is invoked on parent the `IScheduleActions` instance, such as when unmounting; this does not affect calls to the `clear` method on the returned `IAnimationFrame` interface. For more on policies, see [Policies](#policies). |\n| _returns_ | [`IAnimationFrame`](#ianimationframe) |                                                                                 | An interface for manipulating the created request.                                                                                                                                                                                                                                                                                                                                                                                                                   |\n\n##### clearAll\n\n```js static\n    clearAll(): void;\n```\n\nClears all timeouts, intervals, and animation frame requests that were made with this scheduler.\n\n#### Types\n\n##### Policies\n\n###### SchedulePolicy\n\n| Policy        | Value                    | Description                                                    |\n| ------------- | ------------------------ | -------------------------------------------------------------- |\n| `OnDemand`    | `\"schedule-on-demand\"`   | The scheduled action's timing will begin when `set` is called. |\n| `Immediately` | `\"schedule-immediately\"` | The scheduled action's timing will begin immediately.          |\n\n###### ClearPolicy\n\n| Policy    | Value                | Description                                                                                                   |\n| --------- | -------------------- | ------------------------------------------------------------------------------------------------------------- |\n| `Cancel`  | `\"cancel-on-clear\"`  | The action, if set at the time of applying the policy, will be cancelled without being invoked.               |\n| `Resolve` | `\"resolve-on-clear\"` | The action, if set at the time of applying the policy, will be invoked as if the scheduled time had occurred. |\n\n##### ITimeout\n\n```js static\ninterface ITimeout {\n    get isSet(): boolean;\n    set(): void;\n    clear(clearPolicy?: ClearPolicy = ClearPolicies.Cancel): void;\n}\n```\n\nThe `ITimeout` interface provides additional calls to manipulate a timeout, if so required.\n\n|         | TypeScript&nbsp;Type                                       | Description                                                                                                                                                                                                                                                                                                                                                                                                                                      |\n| ------- | ---------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `isSet` | `boolean`                                                  | A read-only property for determining if the timeout is set or not. Returns `true` if the timeout is set (aka pending), otherwise `false`.                                                                                                                                                                                                                                                                                                        |\n| `set`   | `()`&nbsp;`=>`&nbsp;`void`                                 | If the timeout is pending, this cancels that pending timeout and starts the timeout afresh. If the timeout is not pending, this starts the timeout. Can be used to re-schedule an already invoked or cleared timeout.                                                                                                                                                                                                                            |\n| `clear` | `(clearPolicy?:`&nbsp;`ClearPolicy)`&nbsp;`=>`&nbsp;`void` | If the timeout is pending, this cancels that pending timeout. If no timeout is pending, this does nothing. When the optional `clearPolicy` argument is `ClearPolicy.Resolve`, and the timeout was in the set state when called, the timeout action is invoked after cancelling the timeout. The `clearPolicy` parameter defaults to `ClearPolicy.Cancel`. This call does nothing if there was no pending timeout (i.e. when `isSet` is `false`). |\n\n##### IInterval\n\n```js static\ninterface IInterval {\n    get isSet(): boolean;\n    set(): void;\n    clear(clearPolicy?: ClearPolicy = ClearPolicies.Cancel): void;\n}\n```\n\nThe `IInterval` interface provides additional calls to manipulate an interval, if so required.\n\n|         | TypeScript&nbsp;Type                                       | Description                                                                                                                                                                                                                                                                                                                                                                                                                                            |\n| ------- | ---------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `isSet` | `boolean`                                                  | A read-only property for determining if the interval is active or not. Returns `true` if the interval is active, otherwise `false`.                                                                                                                                                                                                                                                                                                                    |\n| `set`   | `()`&nbsp;`=>`&nbsp;`void`                                 | If the interval is active, this cancels that interval and restarts it afresh. If the interval is not active, this starts the interval. Can be used to re-schedule a cleared interval.                                                                                                                                                                                                                                                                  |\n| `clear` | `(clearPolicy?:`&nbsp;`ClearPolicy)`&nbsp;`=>`&nbsp;`void` | If the interval is active, this cancels that interval. If the interval is not active, this does nothing. When the optional `clearPolicy` argument is `ClearPolicy.Resolve`, and the interval was in the active state when called, the associated action is invoked after cancelling the interval. The `clearPolicy` parameter defaults to `ClearPolicy.Cancel`. This call does nothing if there was no active interval (i.e. when `isSet` is `false`). |\n\n##### IAnimationFrame\n\n```js static\ninterface IAnimationFrame {\n    get isSet(): boolean;\n    set(): void;\n    clear(clearPolicy?: ClearPolicy = ClearPolicies.Cancel): void;\n}\n```\n\nThe `IAnimationFrame` interface provides additional calls to manipulate an animation frame request, if so required.\n\n|         | TypeScript&nbsp;Type                                       | Description                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| ------- | ---------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `isSet` | `boolean`                                                  | A read-only property for determining if the request is set (aka pending). Returns `true` if the animation frame is set, otherwise `false`.                                                                                                                                                                                                                                                                                                         |\n| `set`   | `()`&nbsp;`=>`&nbsp;`void`                                 | If the request is pending, this cancels that pending request and starts a request afresh. If the request is not pending, this starts the request. Can be used to re-request an already invokd or cleared request.                                                                                                                                                                                                                                  |\n| `clear` | `(clearPolicy?:`&nbsp;`ClearPolicy)`&nbsp;`=>`&nbsp;`void` | If the request is pending, this cancels that pending request. If no request is pending, this does nothing. When the optional `clearPolicy` argument is `ClearPolicy.Resolve`, and the request was in the set state when called, the associated action is invoked after cancelling the requst. The `clearPolicy` parameter defaults to `ClearPolicy.Cancel`. This call does nothing if there was no pending request (i.e. when `isSet` is `false`). |\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","MDXContent","MDXLayout","__page","componentMeta","__namedExportsOrder"],"mappings":"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"}