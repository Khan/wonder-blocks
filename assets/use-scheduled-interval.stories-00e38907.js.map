{"version":3,"file":"use-scheduled-interval.stories-00e38907.js","sources":["../../packages/wonder-blocks-timing/src/hooks/use-scheduled-interval.ts","../../__docs__/wonder-blocks-timing/use-scheduled-interval.stories.mdx"],"sourcesContent":["import {useEffect, useState, useCallback} from \"react\";\n\nimport {\n    SchedulePolicy as SchedulePolicies,\n    ClearPolicy as ClearPolicies,\n} from \"../util/policies\";\nimport type {IInterval, ClearPolicy, Options} from \"../util/types\";\n\nimport {useUpdatingRef} from \"./internal/use-updating-ref\";\nimport {useInterval} from \"./use-interval\";\n\nexport function useScheduledInterval(\n    action: () => unknown,\n    intervalMs: number,\n    options?: Options,\n): IInterval {\n    if (typeof action !== \"function\") {\n        throw new Error(\"Action must be a function\");\n    }\n\n    if (intervalMs < 1) {\n        throw new Error(\"Interval period must be >= 1\");\n    }\n\n    const schedulePolicy =\n        options?.schedulePolicy ?? SchedulePolicies.Immediately;\n\n    const [isSet, setIsSet] = useState(\n        schedulePolicy === SchedulePolicies.Immediately,\n    );\n\n    const set = useCallback(() => setIsSet(true), []);\n\n    const actionRef = useUpdatingRef(action);\n\n    const clear = useCallback(\n        (policy?: ClearPolicy) => {\n            policy = policy ?? options?.clearPolicy;\n            if (isSet && policy === ClearPolicies.Resolve) {\n                actionRef.current();\n            }\n            setIsSet(false);\n        },\n        // react-hooks/exhaustive-deps doesn't require refs to be\n        // listed in the deps array.  Unfortunately, in this situation\n        // it doesn't recognized actionRef as a ref.\n        [actionRef, isSet, options?.clearPolicy],\n    );\n\n    const runOnUnmountRef = useUpdatingRef(\n        isSet && options?.clearPolicy === ClearPolicies.Resolve,\n    );\n\n    useEffect(() => {\n        return () => {\n            // This code will only run with the component using this\n            // hook is unmounted.\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            if (runOnUnmountRef.current) {\n                // eslint-disable-next-line react-hooks/exhaustive-deps\n                actionRef.current();\n            }\n        };\n        // This eslint rule doesn't realize actionRef and runOnUnmountRef\n        // a both refs and thus do not have to be listed as deps.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useInterval(action, intervalMs, isSet);\n\n    return {isSet, set, clear};\n}\n","import {Meta, Story, Source, Canvas} from \"@storybook/blocks\";\n\nimport {Body, HeadingSmall} from \"@khanacademy/wonder-blocks-typography\";\nimport {View} from \"@khanacademy/wonder-blocks-core\";\nimport Button from \"@khanacademy/wonder-blocks-button\";\n\nimport {\n    useScheduledInterval,\n    ClearPolicy,\n    SchedulePolicy,\n} from \"@khanacademy/wonder-blocks-timing\";\n\n<Meta\n    title=\"Timing/useScheduledInterval\"\n    parameters={{\n        chromatic: {\n            disableSnapshot: true,\n        },\n    }}\n/>\n\n# `useScheduledInterval`\n\n`useScheduledInterval` is a hook that provides a convenient API for setting and clearing\nan interval. It is defined as follows:\n\n```ts\nfunction useScheduledInterval(\n    action: () => mixed,\n    timeoutMs: number,\n    options?: {|\n        schedulePolicy?: \"schedule-immediately\" | \"schedule-on-demand\",\n        clearPolicy?: \"resolve-on-clear\" | \"cancel-on-clear\",\n    |},\n): ITimeout;\n\ninterface ITimeout {\n    get isSet(): boolean;\n    set(): void;\n    clear(policy?: ClearPolicy): void;\n}\n```\n\nBy default the interval will be set immediately up creation. The `options` parameter can\nbe used to control when when the interval is schedule and whether or not `action` should be\ncalled when the interval is cleared.\n\nNotes:\n\n-   Because `clear` takes a param, it's import that you don't pass it directly to an event handler,\n    e.g. `<Button onClick={clear} />` will not work as expected.\n-   Calling `set` after the interval has been cleared will restart the interval.\n-   Updating the second paramter, `timeoutMs`, will also restart the interval.\n-   When the component using this hooks is unmounted, the interval will automatically be cleared.\n-   Calling `set` after the interval is already set does nothing.\n\nexport const Immediately = () => {\n    const [callCount, setCallCount] = React.useState(0);\n    const callback = React.useCallback(() => {\n        setCallCount((callCount) => callCount + 1);\n    }, []);\n    const interval = useScheduledInterval(callback, 1000);\n    return (\n        <View>\n            <View>isSet = {interval.isSet.toString()}</View>\n            <View>callCount = {callCount}</View>\n            <View style={{flexDirection: \"row\"}}>\n                <Button onClick={() => interval.set()}>Set interval</Button>\n                <Button onClick={() => interval.clear()}>Clear interval</Button>\n            </View>\n        </View>\n    );\n};\n\n<Canvas>\n    <Story name=\"Immediately\">\n        <Immediately />\n    </Story>\n</Canvas>\n\n```jsx\nconst Immediately = () => {\n    const [callCount, setCallCount] = React.useState(0);\n    const callback = React.useCallback(() => {\n        setCallCount((callCount) => callCount + 1);\n    }, []);\n    const interval = useScheduledInterval(callback, 1000);\n    return (\n        <View>\n            <View>isSet = {interval.isSet.toString()}</View>\n            <View>callCount = {callCount}</View>\n            <View style={{flexDirection: \"row\"}}>\n                <Button onClick={() => interval.set()}>Set interval</Button>\n                <Button onClick={() => interval.clear()}>Clear interval</Button>\n            </View>\n        </View>\n    );\n};\n```\n\nexport const OnDemandAndResolveOnClear = () => {\n    const [callCount, setCallCount] = React.useState(0);\n    const callback = React.useCallback(() => {\n        console.log(\"action called\");\n        setCallCount((callCount) => callCount + 1);\n    }, []);\n    const interval = useScheduledInterval(callback, 1000, {\n        clearPolicy: ClearPolicy.Resolve,\n        schedulePolicy: SchedulePolicy.OnDemand,\n    });\n    return (\n        <View>\n            <View>isSet = {interval.isSet.toString()}</View>\n            <View>callCount = {callCount}</View>\n            <View style={{flexDirection: \"row\"}}>\n                <Button onClick={() => interval.set()}>Set interval</Button>\n                <Button onClick={() => interval.clear()}>Clear interval</Button>\n            </View>\n        </View>\n    );\n};\n\n<Canvas>\n    <Story name=\"OnDemandAndResolveOnClear\">\n        <OnDemandAndResolveOnClear />\n    </Story>\n</Canvas>\n\n```jsx\nconst OnDemandAndResolveOnClear = () => {\n    const [callCount, setCallCount] = React.useState(0);\n    const callback = React.useCallback(() => {\n        setCallCount((callCount) => callCount + 1);\n    }, []);\n    const interval = useScheduledInterval(callback, 1000, {\n        clearPolicy: ClearPolicy.Resolve,\n        schedulePolicy: SchedulePolicy.OnDemand,\n    });\n    return (\n        <View>\n            <View>isSet = {interval.isSet.toString()}</View>\n            <View>callCount = {callCount}</View>\n            <View style={{flexDirection: \"row\"}}>\n                <Button onClick={() => interval.set()}>Set interval</Button>\n                <Button onClick={() => interval.clear()}>Clear interval</Button>\n            </View>\n        </View>\n    );\n};\n```\n"],"names":["useScheduledInterval","action","intervalMs","options","schedulePolicy","SchedulePolicies","isSet","setIsSet","useState","set","useCallback","actionRef","useUpdatingRef","clear","policy","ClearPolicies","runOnUnmountRef","useEffect","useInterval","Immediately","callCount","setCallCount","callback","interval","_jsxs","View","_jsx","Button","OnDemandAndResolveOnClear","ClearPolicy","SchedulePolicy","_createMdxContent","props","_components","_provideComponents","_Fragment","Meta","Canvas","Story","MDXContent","MDXLayout","immediately","onDemandAndResolveOnClear","componentMeta","__namedExportsOrder"],"mappings":"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"}