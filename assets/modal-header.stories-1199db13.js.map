{"version":3,"file":"modal-header.stories-1199db13.js","sources":["../../__docs__/wonder-blocks-modal/modal-header.argtypes.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {\n    Breadcrumbs,\n    BreadcrumbsItem,\n} from \"@khanacademy/wonder-blocks-breadcrumbs\";\nimport Link from \"@khanacademy/wonder-blocks-link\";\n\nconst BreadcrumbsMappings: {\n    [key: string]: React.ReactNode;\n} = {\n    none: null,\n    \"lesson path\": (\n        <Breadcrumbs>\n            <BreadcrumbsItem>\n                <Link href=\"\">Course</Link>\n            </BreadcrumbsItem>\n            <BreadcrumbsItem>\n                <Link href=\"\">Unit</Link>\n            </BreadcrumbsItem>\n            <BreadcrumbsItem>Lesson</BreadcrumbsItem>\n        </Breadcrumbs>\n    ),\n};\n\nexport default {\n    title: {\n        control: {type: \"text\"},\n        description: \"The main title rendered in larger bold text.\",\n        table: {type: {summary: \"string\"}},\n    },\n    light: {\n        control: {type: \"boolean\"},\n        defaultValue: \"true\",\n\n        description: `Whether to display the \"light\" version of this\n            component instead, for use when the item is used on a dark\n            background.`,\n        table: {\n            defaultValue: {summary: \"true\"},\n            type: {summary: \"boolean\"},\n        },\n    },\n    titleId: {\n        control: {type: \"text\"},\n        description: `An id to provide a selector for the title element.\n            Use this as the \\`aria-labelledby\\` value on the encompassing\n            \\`<ModalDialog>\\`.`,\n        table: {\n            type: {summary: \"string\"},\n        },\n    },\n    testId: {\n        control: {type: \"text\"},\n        description: `Test ID used for e2e testing.\\n\\nIn this case, this\n            component is internal, so \\`testId\\` is composed with the\n            \\`testId\\` passed down from the Dialog variant + a suffix to scope\n            it to this component. If the dialog \\`testId\\` is\n            \\`\"some-random-id\"\\` then the header will have the \\`testId\\`\n            \\`\"some-random-id-modal-header\"\\`.`,\n        table: {\n            type: {summary: \"string\"},\n        },\n    },\n    subtitle: {\n        control: {type: \"text\"},\n        description: \"The dialog subtitle.\",\n        table: {type: {summary: \"string\"}},\n    },\n    breadcrumbs: {\n        control: {type: \"select\"},\n        description: `Adds a breadcrumb-trail, appearing in the ModalHeader,\n            above the title.`,\n        options: Object.keys(BreadcrumbsMappings) as Array<React.ReactNode>,\n        mapping: BreadcrumbsMappings,\n        table: {type: {summary: \"React.Element<Breadcrumbs>\"}},\n    },\n};\n"],"names":["BreadcrumbsMappings","Breadcrumbs","jsx","BreadcrumbsItem","Link","ModalHeaderArgtypes"],"mappings":"6zBAOA,MAAMA,EAEF,CACA,KAAM,KACN,gBACKC,EACG,CAAA,SAAA,CAAAC,EAACC,GACG,SAACD,EAAAE,EAAA,CAAK,KAAK,GAAG,kBAAM,CACxB,CAAA,IACCD,EACG,CAAA,SAAAD,EAACE,GAAK,KAAK,GAAG,gBAAI,CACtB,CAAA,EACAF,EAACC,GAAgB,SAAM,QAAA,CAAA,CAAA,EAC3B,CAER,EAEeE,EAAA,CACX,MAAO,CACH,QAAS,CAAC,KAAM,MAAM,EACtB,YAAa,+CACb,MAAO,CAAC,KAAM,CAAC,QAAS,SAAS,CACrC,EACA,MAAO,CACH,QAAS,CAAC,KAAM,SAAS,EACzB,aAAc,OAEd,YAAa;AAAA;AAAA,yBAGb,MAAO,CACH,aAAc,CAAC,QAAS,MAAM,EAC9B,KAAM,CAAC,QAAS,SAAS,CAC7B,CACJ,EACA,QAAS,CACL,QAAS,CAAC,KAAM,MAAM,EACtB,YAAa,4JAGb,MAAO,CACH,KAAM,CAAC,QAAS,QAAQ,CAC5B,CACJ,EACA,OAAQ,CACJ,QAAS,CAAC,KAAM,MAAM,EACtB,YAAa,2XAMb,MAAO,CACH,KAAM,CAAC,QAAS,QAAQ,CAC5B,CACJ,EACA,SAAU,CACN,QAAS,CAAC,KAAM,MAAM,EACtB,YAAa,uBACb,MAAO,CAAC,KAAM,CAAC,QAAS,SAAS,CACrC,EACA,YAAa,CACT,QAAS,CAAC,KAAM,QAAQ,EACxB,YAAa;AAAA,8BAEb,QAAS,OAAO,KAAKL,CAAmB,EACxC,QAASA,EACT,MAAO,CAAC,KAAM,CAAC,QAAS,6BAA6B,CACzD,CACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}