{"version":3,"file":"exports.harness-adapters.stories-c7b789c3.js","sources":["../../__docs__/wonder-blocks-testing/exports.harness-adapters.stories.mdx"],"sourcesContent":["import {Meta} from \"@storybook/blocks\";\n\n<Meta\n    title=\"Testing / Test Harness / Exports / harnessAdapters\"\n    parameters={{\n        chromatic: {\n            disableSnapshot: true,\n        },\n    }}\n/>\n\n# harnessAdapters\n\n```ts\n/**\n * The default adapters provided by Wonder Blocks.\n */\nconst DefaultAdapters = {\n    css: css.adapter,\n    data: data.adapter,\n    portal: portal.adapter,\n    router: router.adapter,\n};\n\n/**\n * The default configurations to use with the `DefaultAdapters`.\n */\nconst DefaultConfigs: Configs<typeof DefaultAdapters> = {\n    css: css.defaultConfig,\n    data: data.defaultConfig,\n    portal: portal.defaultConfig,\n    router: router.defaultConfig,\n};\n```\n\nThese are the adapters available for use with the test harness framework and their default configurations. The [`testHarness()`](/docs/testing-test-harness-exports-testharness--page) and [`hookHarness()`](/docs/testing-test-harness-exports-hookharness--page) methods are constructed using these.\n\nIf you want to make your own test harness or hook harness using some of these defaults and some of your own, you can combine them into your call to [`makeTestHarness()`](/docs/testing-test-harness-exports-maketestharness--page) or [`makeHookHarness()`](/docs/testing-test-harness-exports-makehookharness--page).\n\nThere are four build-in adapters:\n\n-   [`css`](#css)\n-   [`data`](#data)\n-   [`portal`](#portal)\n-   [`router`](#router)\n\n## css\n\nThe `css` adapter can be used to apply CSS classes and adhoc styles around the harnessed component.\n\n```ts\ntype Config =\n    | string\n    | Array<string>\n    | CSSProperties\n    | {|\n          classes: Array<string>,\n          style: CSSProperties,\n      |};\n```\n\nThe configuration for this adapter can be a class name, an array of class names, an Aphrodite-compatible CSS style object, or an object definining both an array of `classes` and a `style` object.\n\nThe default configuration for this adapter is for it to not be used.\n\n## data\n\nThe `data` adapter provides a convenient way to intercept Wonder Blocks Data requests. It renders one [`InterceptRequests`](/docs/data-exports-interceptrequests--page) component per configured interceptor.\n\n```ts\ntype Interceptor = React.ElementConfig<typeof InterceptRequests>[\"interceptor\"];\n\ntype Config = Interceptor | Array<Interceptor>;\n```\n\nThe configuration is one or more interceptors, as defined by the `interceptor` prop of the [`InterceptRequests`](/docs/data-exports-interceptrequests--page) component, which is effectively.\n\nThe default configuration for this adapter is for there to be no interceptors.\n\n## portal\n\nThe `portal` adapter ensures there is a mounting point in the DOM for components that rely on rendering with a React portal.\n\n```ts\ntype Config = string;\n```\n\nThe configuration is just a string providing the identifier to give the added element. The adapter will then render alongside the harnessed component, an empty `div` element with both the `id` and `data-test-id` attributes set to the configuration value.\n\nThe default configuration for this adapter is for it to not be used.\n\n## router\n\nThe `router` adapter is useful for testing components that use React Router. It will render either a `MemoryRouter` or `StaticRouter`, depending on configuration. It may also optionally render a `Route` with suitable `path` match, depending on the configuration.\n\n```ts\ntype Config =\n    | $ReadOnly<\n          | {|\n                /**\n                 * See MemoryRouter prop for initialEntries.\n                 */\n                initialEntries: MemoryRouterProps[\"initialEntries\"],\n\n                /**\n                 * See MemoryRouter prop for initialIndex.\n                 */\n                initialIndex?: MemoryRouterProps[\"initialIndex\"],\n\n                /**\n                 * See MemoryRouter prop for getUserConfirmation.\n                 */\n                getUserConfirmation?: MemoryRouterProps[\"getUserConfirmation\"],\n\n                /**\n                 * A path match to use.\n                 *\n                 * When this is specified, the harnessed component will be\n                 * rendered inside a `Route` handler with this path.\n                 *\n                 * If the path matches the location, then the route will\n                 * render the component.\n                 *\n                 * If the path does not match the location, then the route\n                 * will not render the component.\n                 */\n                path?: string,\n            |}\n          | {|\n                /**\n                 * The location to use.\n                 */\n                location: string | Location,\n\n                /**\n                 * Force the use of a StaticRouter, instead of MemoryRouter.\n                 */\n                forceStatic: true,\n\n                /**\n                 * A path match to use.\n                 *\n                 * When this is specified, the harnessed component will be\n                 * rendered inside a `Route` handler with this path.\n                 *\n                 * If the path matches the location, then the route will\n                 * render the component.\n                 *\n                 * If the path does not match the location, then the route\n                 * will not render the component.\n                 */\n                path?: string,\n            |}\n          | {|\n                /**\n                 * The initial location to use.\n                 */\n                location: string | LocationShape,\n\n                /**\n                 * A path match to use.\n                 *\n                 * When this is specified, the harnessed component will be\n                 * rendered inside a `Route` handler with this path.\n                 *\n                 * If the path matches the location, then the route will\n                 * render the component.\n                 *\n                 * If the path does not match the location, then the route\n                 * will not render the component.\n                 */\n                path?: string,\n            |},\n      >\n    // The initial location to use.\n    | string;\n```\n\nThere are four distinct shapes to the configuration:\n\n1. An object with `initialEntries` array (see `MemoryRouter` props), optional `initialIndex` and `getUserConfirmation` (see `MemoryRouter` props), and an optional `path` parameter if route matching is required.\n1. An object with `forceStatic` set to true, the location as a `string` or `Location` object, with an optional `path` parameter if route matching is required.\n1. An object specifying the location as a `string` or a `LocationShape` object, with an optional `path` parameter if route matching is required.\n1. A `string` specifying the location to use\n\nThe first of these provides the most flexibility, basically supporting full configuration of a `MemoryRouter`, which supports history and navigation. The second configuration type is for scenarios where we absolutely do not want navigation, such as server-side rendering scenarios; it forces the use of a `StaticRouter` instance. The third type is for when you just need to render a single location with a matched route path. The fourth and final type allows you to just provide the location as a string.\n\nBy default, the router adapter is configured with `{location: \"/\"}`.\n"],"names":["_createMdxContent","props","_components","_provideComponents","_jsxs","_Fragment","_jsx","Meta","MDXContent","MDXLayout","__page","componentMeta","__namedExportsOrder"],"mappings":"gjBAKA,SAASA,EAAkBC,EAAO,CAChC,MAAMC,EAAc,OAAO,OAAO,CAChC,GAAI,KACJ,IAAK,MACL,KAAM,OACN,EAAG,IACH,EAAG,IACH,GAAI,KACJ,GAAI,KACJ,GAAI,KACJ,GAAI,IACL,EAAEC,EAAoB,EAAEF,EAAM,UAAU,EACzC,OAAoBG,EAAMC,EAAW,CACnC,SAAU,CAAcC,EAAKC,EAAM,CACjC,MAAO,qDACP,WAAY,CACV,UAAW,CACT,gBAAiB,EAClB,CACF,CACF,CAAA,EAAG;AAAA,EAAmBD,EAAKJ,EAAY,GAAI,CAC1C,GAAI,kBACJ,SAAU,iBACX,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,IAAK,CAC3C,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,UAAW,cACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,EAAG,CAC1C,SAAU,CAAC,kHAAgII,EAAKJ,EAAY,EAAG,CAC7J,KAAM,uDACN,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,SAAU,eACpB,CAAS,CACF,CAAA,EAAG,QAAsBI,EAAKJ,EAAY,EAAG,CAC5C,KAAM,uDACN,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,SAAU,eACpB,CAAS,CACF,CAAA,EAAG,uCAAuC,CAC5C,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,EAAG,CAC1C,SAAU,CAAC,uJAAqKI,EAAKJ,EAAY,EAAG,CAClM,KAAM,2DACN,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,SAAU,mBACpB,CAAS,CACF,CAAA,EAAG,OAAqBI,EAAKJ,EAAY,EAAG,CAC3C,KAAM,2DACN,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,SAAU,mBACpB,CAAS,CACF,CAAA,EAAG,GAAG,CACR,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,EAAG,CACzC,SAAU,mCACX,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,GAAI,CAC3C,SAAU,CAAC;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CACjD,SAAuBI,EAAKJ,EAAY,EAAG,CACzC,KAAM,OACN,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,SAAU,KACtB,CAAW,CACX,CAAS,CACF,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CAC1C,SAAuBI,EAAKJ,EAAY,EAAG,CACzC,KAAM,QACN,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,SAAU,MACtB,CAAW,CACX,CAAS,CACF,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CAC1C,SAAuBI,EAAKJ,EAAY,EAAG,CACzC,KAAM,UACN,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,SAAU,QACtB,CAAW,CACX,CAAS,CACF,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CAC1C,SAAuBI,EAAKJ,EAAY,EAAG,CACzC,KAAM,UACN,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,SAAU,QACtB,CAAW,CACX,CAAS,CACF,CAAA,EAAG;AAAA,CAAI,CACT,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CAC1C,GAAI,MACJ,SAAU,KACX,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,EAAG,CAC1C,SAAU,CAAC,OAAqBI,EAAKJ,EAAY,KAAM,CACrD,SAAU,KACX,CAAA,EAAG,4FAA4F,CACjG,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,IAAK,CAC3C,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,UAAW,cACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,EAAG,CAC1C,SAAU,CAAC,uKAAqLI,EAAKJ,EAAY,KAAM,CACrN,SAAU,SACX,CAAA,EAAG,UAAwBI,EAAKJ,EAAY,KAAM,CACjD,SAAU,OACX,CAAA,EAAG,UAAU,CACf,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,EAAG,CACzC,SAAU,sEACX,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CAC1C,GAAI,OACJ,SAAU,MACX,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,EAAG,CAC1C,SAAU,CAAC,OAAqBI,EAAKJ,EAAY,KAAM,CACrD,SAAU,MACX,CAAA,EAAG,+FAA6GI,EAAKJ,EAAY,EAAG,CACnI,KAAM,6CACN,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,SAAU,mBACpB,CAAS,CACF,CAAA,EAAG,wCAAwC,CAC7C,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,IAAK,CAC3C,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,UAAW,cACX,SAAU;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,EAAG,CAC1C,SAAU,CAAC,oEAAkFI,EAAKJ,EAAY,KAAM,CAClH,SAAU,aACX,CAAA,EAAG,gBAA8BI,EAAKJ,EAAY,EAAG,CACpD,KAAM,6CACN,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,SAAU,mBACpB,CAAS,CACF,CAAA,EAAG,mCAAmC,CACxC,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,EAAG,CACzC,SAAU,gFACX,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CAC1C,GAAI,SACJ,SAAU,QACX,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,EAAG,CAC1C,SAAU,CAAC,OAAqBI,EAAKJ,EAAY,KAAM,CACrD,SAAU,QACX,CAAA,EAAG,kHAAkH,CACvH,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,IAAK,CAC3C,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,UAAW,cACX,SAAU;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,EAAG,CAC1C,SAAU,CAAC,mKAAiLI,EAAKJ,EAAY,KAAM,CACjN,SAAU,KACX,CAAA,EAAG,0BAAwCI,EAAKJ,EAAY,KAAM,CACjE,SAAU,IACX,CAAA,EAAG,QAAsBI,EAAKJ,EAAY,KAAM,CAC/C,SAAU,cACX,CAAA,EAAG,6CAA6C,CAClD,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,EAAG,CACzC,SAAU,sEACX,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,GAAI,CAC1C,GAAI,SACJ,SAAU,QACX,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,EAAG,CAC1C,SAAU,CAAC,OAAqBI,EAAKJ,EAAY,KAAM,CACrD,SAAU,QACX,CAAA,EAAG,4FAA0GI,EAAKJ,EAAY,KAAM,CACnI,SAAU,cACX,CAAA,EAAG,OAAqBI,EAAKJ,EAAY,KAAM,CAC9C,SAAU,cACX,CAAA,EAAG,iEAA+EI,EAAKJ,EAAY,KAAM,CACxG,SAAU,OACX,CAAA,EAAG,kBAAgCI,EAAKJ,EAAY,KAAM,CACzD,SAAU,MACX,CAAA,EAAG,yCAAyC,CAC9C,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,IAAK,CAC3C,SAAuBI,EAAKJ,EAAY,KAAM,CAC5C,UAAW,cACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAClB,CAAO,CACF,CAAA,EAAG;AAAA,EAAmBI,EAAKJ,EAAY,EAAG,CACzC,SAAU,sDACX,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,GAAI,CAC3C,SAAU,CAAC;AAAA,EAAmBE,EAAMF,EAAY,GAAI,CAClD,SAAU,CAAC,kBAAgCI,EAAKJ,EAAY,KAAM,CAChE,SAAU,gBACX,CAAA,EAAG,eAA6BI,EAAKJ,EAAY,KAAM,CACtD,SAAU,cACX,CAAA,EAAG,qBAAmCI,EAAKJ,EAAY,KAAM,CAC5D,SAAU,cACX,CAAA,EAAG,QAAsBI,EAAKJ,EAAY,KAAM,CAC/C,SAAU,qBACX,CAAA,EAAG,SAAuBI,EAAKJ,EAAY,KAAM,CAChD,SAAU,cACX,CAAA,EAAG,4BAA0CI,EAAKJ,EAAY,KAAM,CACnE,SAAU,MACX,CAAA,EAAG,2CAA2C,CAChD,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,GAAI,CAC3C,SAAU,CAAC,kBAAgCI,EAAKJ,EAAY,KAAM,CAChE,SAAU,aACX,CAAA,EAAG,mCAAiDI,EAAKJ,EAAY,KAAM,CAC1E,SAAU,QACX,CAAA,EAAG,OAAqBI,EAAKJ,EAAY,KAAM,CAC9C,SAAU,UACX,CAAA,EAAG,6BAA2CI,EAAKJ,EAAY,KAAM,CACpE,SAAU,MACX,CAAA,EAAG,2CAA2C,CAChD,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,GAAI,CAC3C,SAAU,CAAC,0CAAwDI,EAAKJ,EAAY,KAAM,CACxF,SAAU,QACX,CAAA,EAAG,SAAuBI,EAAKJ,EAAY,KAAM,CAChD,SAAU,eACX,CAAA,EAAG,6BAA2CI,EAAKJ,EAAY,KAAM,CACpE,SAAU,MACX,CAAA,EAAG,2CAA2C,CAChD,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,GAAI,CAC3C,SAAU,CAAC,KAAmBI,EAAKJ,EAAY,KAAM,CACnD,SAAU,QACX,CAAA,EAAG,iCAAiC,CACtC,CAAA,EAAG;AAAA,CAAI,CACT,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,EAAG,CAC1C,SAAU,CAAC,kGAAgHI,EAAKJ,EAAY,KAAM,CAChJ,SAAU,cACX,CAAA,EAAG,uMAAqNI,EAAKJ,EAAY,KAAM,CAC9O,SAAU,cACX,CAAA,EAAG,2LAA2L,CAChM,CAAA,EAAG;AAAA,EAAmBE,EAAMF,EAAY,EAAG,CAC1C,SAAU,CAAC,qDAAmEI,EAAKJ,EAAY,KAAM,CACnG,SAAU,iBACX,CAAA,EAAG,GAAG,CACb,CAAK,CAAC,CACN,CAAG,CACH,CACA,SAASM,EAAWP,EAAQ,GAAI,CAC9B,KAAM,CACJ,QAASQ,CACb,EAAM,OAAO,OAAO,CAAE,EAAEN,EAAkB,EAAIF,EAAM,UAAU,EAC5D,OAAOQ,EAAyBH,EAAKG,EAAW,CAC9C,GAAGR,EACH,SAAuBK,EAAKN,EAAmB,CAC7C,GAAGC,CACT,CAAK,CACL,CAAG,EAAID,EAAkBC,CAAK,CAC9B,CAEY,MAACS,EAAS,IAAM,CAC1B,MAAM,IAAI,MAAM,iBAAiB,CACnC,EACAA,EAAO,WAAa,CAClB,SAAU,EACZ,EACK,MAACC,EAAgB,CACpB,MAAO,qDACP,WAAY,CACV,UAAW,CACT,gBAAiB,EAClB,CACF,EACD,KAAM,CAAC,aAAa,EACpB,eAAgB,CAAC,QAAQ,CAC3B,EACAA,EAAc,WAAaA,EAAc,YAAc,GACvDA,EAAc,WAAW,KAAO,CAC9B,GAAIA,EAAc,WAAW,MAAQ,GACrC,KAAMH,CACR,EAC4B,MAAAI,EAAA,CAAA,QAAA"}