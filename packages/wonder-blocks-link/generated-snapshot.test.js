// This file is auto-generated by gen-snapshot-tests.js
// Do not edit this file.  To make changes to these snapshot tests:
//   1. edit the markdown documentation files in the package,
//        packages/wonder-blocks-link
//   2. Run `yarn run gen-snapshot-tests`.
import React from "react";
import renderer from "react-test-renderer";

// Mock react-dom as jest doesn't like findDOMNode.
jest.mock("react-dom");
import Link from "./components/link.js";

describe("wonder-blocks-link", () => {
    it("example 1", () => {
        const Color = require("@khanacademy/wonder-blocks-color").default;
        const {View} = require("@khanacademy/wonder-blocks-core");

        const example = (
            <View>
                <p>
                    I am a <Link href="#nonexistent-link">Primary Link</Link>.{" "}
                    <span style={{color: Color.offBlack64}}>
                        My friend the
                        <Link
                            href="#secondary-nonexistent-link"
                            kind="secondary"
                        >
                            Secondary Link
                        </Link>{" "}
                        is used here with a lighter text.
                    </span>{" "}
                    We also have a
                    <Link href="#" visitable={true}>
                        Visitable Primary Link
                    </Link>{" "}
                    friend.
                </p>
                <p
                    style={{
                        backgroundColor: Color.darkBlue,
                        color: Color.white64,
                        padding: 10,
                    }}
                >
                    I am a{" "}
                    <Link href="#dark-link" light={true}>
                        Primary Link
                    </Link>{" "}
                    used on a dark background. My friend the Secondary Link
                    isn't supported on this dark background.
                </p>
            </View>
        );
        const tree = renderer.create(example).toJSON();
        expect(tree).toMatchSnapshot();
    });
    it("example 2", () => {
        const {HeadingSmall} = require("@khanacademy/wonder-blocks-typography");
        const {View} = require("@khanacademy/wonder-blocks-core");

        const example = (
            <View>
                <Link href="#nonexistent-link">
                    <HeadingSmall>Heading inside a Link element</HeadingSmall>
                </Link>
            </View>
        );
        const tree = renderer.create(example).toJSON();
        expect(tree).toMatchSnapshot();
    });
});
