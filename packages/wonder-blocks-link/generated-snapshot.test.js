// This file is auto-generated by gen-snapshot-tests.js
// Do not edit this file.  To make changes to these snapshot tests
// edit packages/wonder-blocks-link/docs.md and run `npm run gen-snapshot-tests`.
import React from "react";
import renderer from "react-test-renderer";
import Link from "./components/link.js";

describe("wonder-blocks-link", () => {
    it("example 1", () => {
        const Color = require("wonder-blocks-color").default;
        const LinkCore = require("./components/link-core.js").default;

        const {offWhite} = Color;

        const handlers = {
            onClick: () => void 0,
            onMouseEnter: () => void 0,
            onMouseLeave: () => void 0,
            onMouseDown: () => void 0,
            onMouseUp: () => void 0,
            onTouchStart: () => void 0,
            onTouchEnd: () => void 0,
            onTouchCancel: () => void 0,
            onKeyDown: () => void 0,
            onKeyUp: () => void 0,
            onBlur: () => void 0,
        };

        const defaultProps = {
            kind: "primary",
            caret: false,
            light: false,
            hovered: false,
            focused: false,
            pressed: false,
            href: "#nonexistent-link",
        };

        const example = (
            <table style={{background: offWhite}}>
                <tbody>
                    <tr>
                        <th>Default</th>
                        <td>
                            <p>
                                Lorem ipsum{" "}
                                <LinkCore {...defaultProps} {...handlers}>
                                    Label
                                </LinkCore>, dolor sit amet, consectetur
                                adipiscing elit.
                            </p>
                        </td>
                    </tr>
                    <tr>
                        <th>Hover/Focus</th>
                        <td>
                            <p>
                                Lorem ipsum{" "}
                                <LinkCore
                                    {...defaultProps}
                                    {...handlers}
                                    hovered={true}
                                >
                                    Label
                                </LinkCore>, dolor sit amet, consectetur
                                adipiscing elit.
                            </p>
                        </td>
                    </tr>
                    <tr>
                        <th>Active/Press</th>
                        <td>
                            <p>
                                Lorem ipsum{" "}
                                <LinkCore
                                    {...defaultProps}
                                    {...handlers}
                                    pressed={true}
                                >
                                    Label
                                </LinkCore>, dolor sit amet, consectetur
                                adipiscing elit.
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        );
        const tree = renderer.create(example).toJSON();
        expect(tree).toMatchSnapshot();
    });
    it("example 2", () => {
        const Color = require("wonder-blocks-color").default;
        const LinkCore = require("./components/link-core.js").default;

        const {offWhite} = Color;

        const handlers = {
            onClick: () => void 0,
            onMouseEnter: () => void 0,
            onMouseLeave: () => void 0,
            onMouseDown: () => void 0,
            onMouseUp: () => void 0,
            onTouchStart: () => void 0,
            onTouchEnd: () => void 0,
            onTouchCancel: () => void 0,
            onKeyDown: () => void 0,
            onKeyUp: () => void 0,
            onBlur: () => void 0,
        };

        const defaultProps = {
            kind: "primary",
            caret: false,
            light: false,
            hovered: false,
            focused: false,
            pressed: false,
            href: "#",
        };

        const example = (
            <table style={{background: offWhite}}>
                <tbody>
                    <tr>
                        <th>Default</th>
                        <td>
                            <p>
                                Lorem ipsum{" "}
                                <LinkCore {...defaultProps} {...handlers}>
                                    Label
                                </LinkCore>, dolor sit amet, consectetur
                                adipiscing elit.
                            </p>
                        </td>
                    </tr>
                    <tr>
                        <th>Hover/Focus</th>
                        <td>
                            <p>
                                Lorem ipsum{" "}
                                <LinkCore
                                    {...defaultProps}
                                    {...handlers}
                                    hovered={true}
                                >
                                    Label
                                </LinkCore>, dolor sit amet, consectetur
                                adipiscing elit.
                            </p>
                        </td>
                    </tr>
                    <tr>
                        <th>Active/Press</th>
                        <td>
                            <p>
                                Lorem ipsum{" "}
                                <LinkCore
                                    {...defaultProps}
                                    {...handlers}
                                    pressed={true}
                                >
                                    Label
                                </LinkCore>, dolor sit amet, consectetur
                                adipiscing elit.
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        );
        const tree = renderer.create(example).toJSON();
        expect(tree).toMatchSnapshot();
    });
    it("example 3", () => {
        const Color = require("wonder-blocks-color").default;
        const LinkCore = require("./components/link-core.js").default;

        const {offWhite, offBlack64} = Color;

        const handlers = {
            onClick: () => void 0,
            onMouseEnter: () => void 0,
            onMouseLeave: () => void 0,
            onMouseDown: () => void 0,
            onMouseUp: () => void 0,
            onTouchStart: () => void 0,
            onTouchEnd: () => void 0,
            onTouchCancel: () => void 0,
            onKeyDown: () => void 0,
            onKeyUp: () => void 0,
            onBlur: () => void 0,
        };

        const defaultProps = {
            kind: "secondary",
            caret: false,
            light: false,
            hovered: false,
            focused: false,
            pressed: false,
            href: "#nonexistent-link",
        };

        const example = (
            <table style={{background: offWhite}}>
                <tbody>
                    <tr>
                        <th>Default</th>
                        <td>
                            <p>
                                Lorem ipsum{" "}
                                <LinkCore {...defaultProps} {...handlers}>
                                    Label
                                </LinkCore>, dolor sit amet, consectetur
                                adipiscing elit.
                            </p>
                        </td>
                    </tr>
                    <tr>
                        <th>Hover/Focus</th>
                        <td>
                            <p>
                                Lorem ipsum{" "}
                                <LinkCore
                                    {...defaultProps}
                                    {...handlers}
                                    hovered={true}
                                >
                                    Label
                                </LinkCore>, dolor sit amet, consectetur
                                adipiscing elit.
                            </p>
                        </td>
                    </tr>
                    <tr>
                        <th>Active/Press</th>
                        <td>
                            <p>
                                Lorem ipsum{" "}
                                <LinkCore
                                    {...defaultProps}
                                    {...handlers}
                                    pressed={true}
                                >
                                    Label
                                </LinkCore>, dolor sit amet, consectetur
                                adipiscing elit.
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        );
        const tree = renderer.create(example).toJSON();
        expect(tree).toMatchSnapshot();
    });
    it("example 4", () => {
        const Color = require("wonder-blocks-color").default;
        const LinkCore = require("./components/link-core.js").default;

        const {white64, darkBlue} = Color;

        const handlers = {
            onClick: () => void 0,
            onMouseEnter: () => void 0,
            onMouseLeave: () => void 0,
            onMouseDown: () => void 0,
            onMouseUp: () => void 0,
            onTouchStart: () => void 0,
            onTouchEnd: () => void 0,
            onTouchCancel: () => void 0,
            onKeyDown: () => void 0,
            onKeyUp: () => void 0,
            onBlur: () => void 0,
        };

        const defaultProps = {
            kind: "primary",
            caret: false,
            light: true,
            hovered: false,
            focused: false,
            pressed: false,
            href: "#nonexistent-link",
        };

        const example = (
            <table style={{background: darkBlue, color: white64}}>
                <tbody>
                    <tr>
                        <th>Default</th>
                        <td>
                            <p>
                                Lorem ipsum{" "}
                                <LinkCore {...defaultProps} {...handlers}>
                                    Label
                                </LinkCore>, dolor sit amet, consectetur
                                adipiscing elit.
                            </p>
                        </td>
                    </tr>
                    <tr>
                        <th>Hover/Focus</th>
                        <td>
                            <p>
                                Lorem ipsum{" "}
                                <LinkCore
                                    {...defaultProps}
                                    {...handlers}
                                    hovered={true}
                                >
                                    Label
                                </LinkCore>, dolor sit amet, consectetur
                                adipiscing elit.
                            </p>
                        </td>
                    </tr>
                    <tr>
                        <th>Active/Press</th>
                        <td>
                            <p>
                                Lorem ipsum{" "}
                                <LinkCore
                                    {...defaultProps}
                                    {...handlers}
                                    pressed={true}
                                >
                                    Label
                                </LinkCore>, dolor sit amet, consectetur
                                adipiscing elit.
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        );
        const tree = renderer.create(example).toJSON();
        expect(tree).toMatchSnapshot();
    });
});
