// @flow
// This file is auto-generated by gen-snapshot-tests.js
// Do not edit this file.  To make changes to these snapshot tests
// edit packages/wonder-blocks-color/docs.md and run `npm run gen-snapshot-tests`.
import React from "react";
import renderer from "react-test-renderer";

describe("wonder-blocks-color", () => {
    it("example 1", () => {
        const ColoredTextWithBackground = require("./docutils/colored-text-with-background.js")
            .default;
        const ColorWithName = require("./docutils/color-with-name.js").default;

        const Color = require("./index.js").default;

        const example = (
            <div>
                {Object.keys(Color).map((colorName, idx) => (
                    <ColorWithName
                        key={idx}
                        color={Color[colorName]}
                        colorName={colorName}
                    />
                ))}
            </div>
        );
        const tree = renderer.create(example).toJSON();
        expect(tree).toMatchSnapshot();
    });
    it("example 2", () => {
        const ColoredTextWithBackground = require("./docutils/colored-text-with-background.js")
            .default;
        const ColorWithName = require("./docutils/color-with-name.js").default;

        const {mix, fade} = require("./index.js");
        const Color = require("./index.js").default;
        const {white, offBlack, red} = Color;

        const example = (
            <div>
                <p>
                    Dynamically computed colors using the <code>fade</code> and{" "}
                    <code>mix</code> methods from the color utilities.
                </p>
                <ColorWithName color={white} colorName="White" />
                <ColorWithName
                    color={mix(fade(red, 0.16), white)}
                    colorName="White (Tinted) = White + 16% Tint"
                />
                <ColorWithName
                    color={mix(fade(red, 0.32), white)}
                    colorName="White (XTinted) = White + 32% Tint"
                />
                <ColorWithName
                    color={mix(fade(red, 0.64), white)}
                    colorName="White (XXTinted) = White + 64% Tint"
                />

                <ColorWithName color={red} colorName="Tint" />
                <ColorWithName
                    color={mix(fade(white, 0.16), red)}
                    colorName="Tint (Light) = Tint + 16% White"
                />
                <ColorWithName
                    color={mix(fade(offBlack, 0.32), red)}
                    colorName="Tint (Dark) = Tint + 32% Off-Black"
                />

                <ColorWithName
                    color={mix(fade(mix(fade(offBlack, 0.32), red), 0.32), red)}
                    colorName="Tint (Dark) on Tint = Tint + 32% (Tint + 32% Off-Black)"
                />
                <ColorWithName
                    color={mix(
                        fade(mix(fade(offBlack, 0.32), red), 0.16),
                        white,
                    )}
                    colorName="Tint (Dark) on White = White + 16% (Tint + 32% Off-Black)"
                />

                <ColorWithName color={offBlack} colorName="Off-Black" />
                <ColorWithName
                    color={mix(fade(offBlack, 0.64), white)}
                    colorName="Dark Gray"
                />
                <ColorWithName
                    color={mix(fade(offBlack, 0.32), white)}
                    colorName="Light Gray"
                />
            </div>
        );
        const tree = renderer.create(example).toJSON();
        expect(tree).toMatchSnapshot();
    });
});
