// @flow
// This file is auto-generated by gen-snapshot-tests.js
// Do not edit this file.  To make changes to these snapshot tests:
//   1. edit the markdown documentation files in the package,
//        packages/wonder-blocks-tooltip
//   2. Run `yarn run gen-snapshot-tests`.
import React from "react";
import renderer from "react-test-renderer";
import Tooltip from "./components/tooltip.js";
import TooltipAnchor from "./components/tooltip-anchor.js";

describe("wonder-blocks-tooltip", () => {
    it("example 1", () => {
        const React = require("react");
        const {View} = require("@khanacademy/wonder-blocks-core");
        const {StyleSheet} = require("aphrodite");
        const {Tooltip} = require("@khanacademy/wonder-blocks-tooltip");
        const {
            StandardModal,
            ModalLauncher,
        } = require("@khanacademy/wonder-blocks-modal");

        const tooltip = (
            <Tooltip content={"Some long text"}>
                <View>Anchor</View>
            </Tooltip>
        );

        const scrollyContent = (
            <div
                style={{
                    height: 100,
                    overflow: "auto",
                    border: "1px solid",
                    margin: 10,
                }}
            >
                <div style={{height: "200vh"}}>{tooltip}</div>
            </div>
        );

        const modalContent = (
            <div style={{height: "200vh"}}>{scrollyContent}</div>
        );

        const modal = (
            <StandardModal
                title="My modal"
                footer="Still my modal"
                content={modalContent}
            />
        );

        const example = (
            <div>
                {tooltip}

                {scrollyContent}

                <ModalLauncher modal={modal}>
                    {({openModal}) => (
                        <button onClick={openModal}>Click here!</button>
                    )}
                </ModalLauncher>
            </div>
        );

        const tree = renderer.create(example).toJSON();
        expect(tree).toMatchSnapshot();
    });
});
