/**
 * Flowtype definitions for view
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.21.0
 * @flow
 */

import * as React from "react";
import type {TextViewSharedProps} from "../util/types";
declare type ValidViewTags = "div" | "article" | "aside" | "nav" | "section";
// KA>
declare type Props = {
    ...TextViewSharedProps,
    tag: ValidViewTags,
    ...
};
// KA<
declare type DefaultProps = {|
    tag: $PropertyType<Props, "tag">,
|};
/**
 * View is a building block for constructing other components. `View` roughly
 * maps to `div`. You can override which tag is used to render the component
 * (for semantic purposes) by specifying the `tag` prop.
 *
 * These components can take styles (via the `style` prop) in a variety of
 * manners:
 *
 * - An inline style object
 * - An `aphrodite` StyleSheet style
 * - An array combining the above
 *
 * `View` sets the following defaults:
 *
 * - `display: "flex"`
 * - `flexDirection: "column"`
 * - they each get their own stacking context.
 *
 * ### Usage
 *
 * ```jsx
 * import {View} from "@khanacademy/wonder-blocks-core";
 *
 * <View>This is a View!</View>
 * ```
 */
declare export default class View extends React.Component<Props> {
    static defaultProps: DefaultProps;
    render(): React.Node;
}
