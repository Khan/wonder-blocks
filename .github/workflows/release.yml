name: Release

on:
  push:
    branches:
      - master

# This workflow will run changesets depending on two different scenarios:
#
# 1. If we are landing a specific commit into master (Author PR), then
#    changesets will check if there are changes verifying the Markdown files
#    generated automatically:
#
#    a) There are new versions and there's NO Release PR, then the changesets
#    action will create a new Release PR.
#
#    b) There's a Release PR, then the changesets action will update the
#    existing Release PR with the new commit.
#
#    NOTE: (in both cases, changesets will modify the new version in
#    package.json for each package, and will remove the MD files as part of the
#    Release PR).
#
# 2. If we are landing the Release PR into master, then the changesets action
#    will publish the changes to npm.
#
# For more info about this workflow, see:
# https://github.com/changesets/action#usage
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
        with:
          # This makes Actions fetch all Git history so that Changesets can
          # generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js 12.x
        uses: actions/setup-node@master
        with:
          node-version: 12.x

      - name: Install Dependencies
        run: yarn

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: yarn publish:ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build Slack message
        if: steps.changesets.outputs.published == 'true'
        run: echo "UPDATED_PACKAGES=$(jq -r '[group_by(.name) | .[] | " - "+.[].name+"@"+.[].version] | join("\n")' <<< '${{ steps.changesets.outputs.publishedPackages }}')" >> $GITHUB_ENV

      - name: Send a Slack notification if a publish happens
        if: steps.changesets.outputs.published == 'true'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: wonder-blocks-eng
          SLACK_MSG_AUTHOR: ${{ github.event.pull_request.user.login }}
          SLACK_USERNAME: GithubGoose
          SLACK_ICON_EMOJI: ":goose:"
          SLACK_MESSAGE: "A new version of ${{ github.event.repository.name }} was published! ðŸŽ‰ \n$UPDATED_PACKAGES\nRelease notes â†’ https://github.com/Khan/${{ github.event.repository.name }}/releases/"
          SLACK_TITLE: "New Wonder Blocks release!"
          SLACK_FOOTER: Wonder Blocks Slack Notification
          MSG_MINIMAL: true
