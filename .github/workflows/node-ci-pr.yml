name: Linting and Testing

on:
  pull_request:
    types: [edited, opened, synchronize, reopened]

# We run a single job with multiple steps to run the workflow faster.
# Steps: Setup/build > lint > flow > test > coverage > codecov
jobs:
  lint_and_test:
    runs-on: ${{ matrix.os }}
    env:
      CI: true
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14]
      fail-fast: false
    steps:
      - name: Checking out latest commit
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules and install dependencies
        uses: Khan/wonder-blocks/.github/workflows/node-modules.yml@flowenums
        with:
          os: ${{ matrix.os }}
          key: ${{ runner.os }}-${{ matrix.node-version }}

      # Make sure our packages aren't growing unexpectedly
      - name: Check Builds
        uses: preactjs/compressed-size-action@v2
        with:
          # Specify our custom build script
          build-script: "build:all"
          # Any JS files anywhere within a dist directory:
          pattern: "**/dist/es/*.js"
          # Always ignore SourceMaps and node_modules:
          exclude: "{**/*.map,**/node_modules/**}"

      - name: Get All Changed Files
        uses: jaredly/get-changed-files@v1.0.1
        id: changed
        with:
          format: json
          absolute: true
      - uses: allenevans/set-env@v2.0.0
        with:
          ALL_CHANGED_FILES: '${{ steps.changed.outputs.added_modified }}'

      # Linting / type checking
      - name: Run ESLint
        uses: Khan/eslint-action@v2.0.0
        with:
          eslint-lib: ./node_modules/eslint
          run-all-if-changed: |
            package.json
            .eslintrc.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Flow
        uses: Khan/flow-action@v1.1.3
        with:
          flow-bin: ./node_modules/.bin/flow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Testing and coverage
      - name: Run jest tests with coverage
        run: yarn coverage:ci
      - name: Upload Coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json
