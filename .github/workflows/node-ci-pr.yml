name: Node CI (PR)

on:
  pull_request:
    types: [edited, opened, synchronize, reopened]

# Our jobs run like this to minimize wasting resource cycles:
#   1. Prime caches for primary configuration (ubuntu on node 16).
#      This way the next two jobs can run in parallel but rely on this primed
#      cache.
#   2. Lint and Test
#     a. Lint
#     b. Test/Coverage
#   3. Verify that build sizes are reasonable
jobs:
  prime_cache_primary:
    name: Prime node_modules cache for primary configuration
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Install & cache node_modules
        uses: Khan/actions@shared-node-cache-v0
        with:
          node-version: ${{ matrix.node-version }}

  lint:
    name: Lint
    needs: prime_cache_primary
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install & cache node_modules
        uses: Khan/actions@shared-node-cache-v0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get All Changed Files
        uses: Khan/actions@get-changed-files-v1
        id: changed

      - id: js-ts-files
        name: Find .js, .ts changed files
        uses: Khan/actions@filter-files-v0
        with:
          changed-files: ${{ steps.changed.outputs.files }}
          extensions: '.js,.jsx,.ts,.tsx'

      - id: eslint-reset
        uses: Khan/actions@filter-files-v0
        name: Files that would trigger a full eslint run
        with:
          changed-files: ${{ steps.changed.outputs.files }}
          files: '.eslintrc.js,yarn.lock,.eslintignore'

      - id: typecheck-reset
        uses: Khan/actions@filter-files-v0
        name: Files that would trigger a typecheck run
        with:
          changed-files: ${{ steps.changed.outputs.files }}
          files: '.yarn.lock'

      # Linting / type checking
      - name: Eslint
        uses: Khan/actions@full-or-limited-v0
        with:
          full-trigger: ${{ steps.eslint-reset.outputs.filtered }}
          full: yarn lint:ci .
          limited-trigger: ${{ steps.js-ts-files.outputs.filtered }}
          limited: yarn lint:ci {}

      - name: Typecheck
        if: always() # always run this check until we update the eslint config
        # if: steps.js-ts-files.outputs.filtered != '[]' || steps.typecheck-reset.outputs.filtered != '[]'
        run: yarn typecheck

      - name: Build .js bundles
        run: yarn build

      - name: Build .d.ts types
        run: yarn build:types

      - name: Check package.json files
        run: node utils/publish/pre-publish-check-ci.js

      # We don't need changesets for infrastructure-type files (tests, stories,
      # etc).
      - uses: Khan/actions@check-for-changeset-v0
        if: github.actor != 'dependabot[bot]' && github.actor != 'dependabot-preview[bot]'
        with:
          exclude: .github/,.storybook/
          exclude_extensions: .test.ts, .test.tsx, .stories.ts, .stories.tsx, .mdx
          exclude_globs: "**/__tests__/*, **/__docs__/*"

  test:
    name: Test
    needs: prime_cache_primary
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]
        shard: ["1/2", "2/2"]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install & cache node_modules
        uses: Khan/actions@shared-node-cache-v0
        with:
          node-version: ${{ matrix.node-version }}
      # Testing and coverage
      - name: Run jest tests with coverage
        run: yarn coverage:ci --shard ${{ matrix.shard }}
      - name: Upload Coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json

  check_builds:
    name: Check build sizes
    needs: prime_cache_primary
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install & cache node_modules
        uses: Khan/actions@shared-node-cache-v0
        with:
          node-version: ${{ matrix.node-version }}

      # Make sure our packages aren't growing unexpectedly
      - name: Check Builds
        uses: preactjs/compressed-size-action@v2
        with:
          # Specify our custom build script
          build-script: "build"
          # Clean up state between builds
          clean-script: "clean"
          # Any JS files anywhere within a dist directory:
          pattern: "**/dist/es/*.js"
          # Always ignore SourceMaps and node_modules:
          exclude: "{**/*.map,**/node_modules/**}"
