name: Node CI (landed on protected branch)

on:
  push:
    branches:
    - main
    - changeset-release/*
    - feature/*

# Our jobs run like this to minimize wasting resource cycles:
#   1. Prime caches for primary configuration (ubuntu on node 14).
#      This way the next two jobs can run in parallel but rely on this primed
#      cache.
#   2. Coverage
#   3. Chromatic autoApprove on squash commits
#
# For pushes directly to a branch, we assume a PR has been used with wider
# checks, this just makes sure our coverage data is up-to-date.
jobs:
  prime_cache_primary:
    name: Prime node_modules cache for primary configuration
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      # Use a matrix as it means we get the version info in the job name
      # which is very helpful.
      matrix:
        os: [ubuntu-latest]
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v3
      - name: Install & cache node_modules
        uses: Khan/actions@shared-node-cache-v0
        with:
          node-version: ${{ matrix.node-version }}


  coverage:
    needs: [prime_cache_primary]
    name: Gather coverage
    env:
      CI: true
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Use a matrix as it means we get the version info in the job name
        # which is very helpful.
        os: [ubuntu-latest]
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    # Cache and install dependencies
    - name: Install & cache node_modules
      uses: Khan/actions@shared-node-cache-v0
      with:
        node-version: ${{ matrix.node-version }}

    - name: Run Jest with coverage
      run: yarn coverage:ci
    - name: Upload Coverage
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/coverage-final.json
